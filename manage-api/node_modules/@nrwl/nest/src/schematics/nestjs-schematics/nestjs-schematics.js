"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.service = exports.resolver = exports.provider = exports.pipe = exports.middleware = exports.interfaceSchematic = exports.interceptor = exports.guard = exports.gateway = exports.filter = exports.decorator = exports.controller = exports.classSchematic = exports.module = void 0;
const schematics_1 = require("@angular-devkit/schematics");
const workspace_1 = require("@nrwl/workspace");
function normalizeOptions(host, options) {
    if (options.directory && !options.path) {
        options.path = options.directory;
    }
    const { sourceRoot } = workspace_1.getProjectConfig(host, options.project);
    const name = workspace_1.toFileName(options.name);
    return Object.assign(Object.assign({}, options), { name, path: options.path, sourceRoot, spec: options.spec ? options.spec : options.unitTestRunner === 'jest' });
}
function run(options) {
    return (host) => {
        const normalizedOptions = normalizeOptions(host, options);
        return schematics_1.chain([
            schematics_1.externalSchematic('@nestjs/schematics', options.type, normalizedOptions),
        ]);
    };
}
function module(options) {
    return run(Object.assign(Object.assign({}, options), { type: 'module' }));
}
exports.module = module;
function classSchematic(options) {
    return run(Object.assign(Object.assign({}, options), { type: 'class' }));
}
exports.classSchematic = classSchematic;
function controller(options) {
    return run(Object.assign(Object.assign({}, options), { type: 'controller' }));
}
exports.controller = controller;
function decorator(options) {
    return run(Object.assign(Object.assign({}, options), { type: 'decorator' }));
}
exports.decorator = decorator;
function filter(options) {
    return run(Object.assign(Object.assign({}, options), { type: 'filter' }));
}
exports.filter = filter;
function gateway(options) {
    return run(Object.assign(Object.assign({}, options), { type: 'gateway' }));
}
exports.gateway = gateway;
function guard(options) {
    return run(Object.assign(Object.assign({}, options), { type: 'guard' }));
}
exports.guard = guard;
function interceptor(options) {
    return run(Object.assign(Object.assign({}, options), { type: 'interceptor' }));
}
exports.interceptor = interceptor;
function interfaceSchematic(options) {
    return run(Object.assign(Object.assign({}, options), { type: 'interface' }));
}
exports.interfaceSchematic = interfaceSchematic;
function middleware(options) {
    return run(Object.assign(Object.assign({}, options), { type: 'middleware' }));
}
exports.middleware = middleware;
function pipe(options) {
    return run(Object.assign(Object.assign({}, options), { type: 'pipe' }));
}
exports.pipe = pipe;
function provider(options) {
    return run(Object.assign(Object.assign({}, options), { type: 'provider' }));
}
exports.provider = provider;
function resolver(options) {
    return run(Object.assign(Object.assign({}, options), { type: 'resolver' }));
}
exports.resolver = resolver;
function service(options) {
    return run(Object.assign(Object.assign({}, options), { type: 'service' }));
}
exports.service = service;
//# sourceMappingURL=nestjs-schematics.js.map
{"version":3,"sources":["./apps/manage-client/src/app/modules/manage/modules/deparment/components/create-department/create-department.component.ts","./apps/manage-client/src/app/modules/manage/modules/deparment/components/create-department/create-department.component.html","./apps/manage-client/src/app/modules/manage/modules/deparment/components/index.ts","./apps/manage-client/src/app/modules/manage/modules/deparment/deparment.module.ts","./apps/manage-client/src/app/modules/manage/modules/deparment/components/department-list/department-list.component.ts","./apps/manage-client/src/app/modules/manage/modules/deparment/components/department-list/department-list.component.html","./apps/manage-client/src/app/modules/manage/modules/deparment/deparment-routing.module.ts"],"names":[],"mappings":"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","file":"apps-manage-client-src-app-modules-manage-modules-deparment-deparment-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DepartmentsService, EmployeeRepositoryService, HelperService } from '@application/ui';\nimport * as uuid from 'uuid';\n\n@Component({\n  selector: 'application-create-department',\n  templateUrl: './create-department.component.html',\n  styleUrls: ['./create-department.component.less']\n})\nexport class CreateDepartmentComponent implements OnInit {\n\n  mode = this.route.snapshot.data['mode'];\n\n  department?: any;\n  // mode: string;\n  createDepartmentForm: FormGroup;\n  testCategory: any;\n  testList: any;\n  categoryList: any;\n  employeeList: any;\n  course:any;\n\n  insertDepartmentArray = [];\n  deleteDepartmentArray = [];\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    public helper: HelperService,\n    private route: ActivatedRoute,\n    private departmentsService: DepartmentsService,\n    private router: Router,\n    private employeeService: EmployeeRepositoryService,\n  ) { }\n  async ngOnInit(): Promise<void> {\n    this.createDepartmentForm = this.buildForm();\n    if (this.mode === 'edit') {\n      let departmentsUuid = this.route.snapshot.paramMap.get('uuid');\n      let department: any\n      department = await this.departmentsService.getDepartmentByUuid(departmentsUuid).toPromise();\n      this.department = department.response;\n      this.insertDepartmentArray = this.department?.hod.map(hres=>hres?._id)\n\n      // this.department.test = department.response.test[0].tests\n      this.createDepartmentForm = this.buildForm();\n    }\n    this.getEmployees();\n\n\n  }\n  buildForm() {\n    return this.formBuilder.group({\n      title: [this.department ? this.department?.title : '', Validators.required],\n      employee: [this.department ? this.department?.employee : '', Validators.required],\n      hod: [this.department ? this.department?.hod : '', Validators.required],\n      flags: this.formBuilder.group({\n        active: this.department ? this.department?.flags.active : true,\n      }),\n    });\n\n  }\n\n  getEmployees() {\n    this.employeeService.getAllEmployees().subscribe(\n      (res) => {\n        this.employeeList = res?.response;\n      }\n    );\n  }\n\n  insertAndDeleteArray(event, empId) {\n    if (event == true) {\n      this.insertDepartmentArray = this.insertDepartmentArray.filter(res=>{\n        return res != empId\n      })\n      this.deleteDepartmentArray = this.deleteDepartmentArray.filter(res=>{\n        return res != empId\n      })\n      this.insertDepartmentArray.push(empId);\n    }\n    else if (event == false) {\n      this.deleteDepartmentArray = this.deleteDepartmentArray.filter(res=>{\n        return res != empId\n      })\n      this.insertDepartmentArray = this.insertDepartmentArray.filter(res=>{\n        return res != empId\n      })\n      this.deleteDepartmentArray.push(empId);\n    }\n    console.log('deleteDepartmentArray', this.deleteDepartmentArray);\n    console.log('insertDepartmentArray', this.insertDepartmentArray);\n    // console.log('this.question',this.question.perals.map(res=>res._id));\n  }\n\n\n  submit() {\n    const value = this.createDepartmentForm.value;\n\n    if (this.mode === 'add') {\n      const payload: any = {\n        uuid: uuid.v4(),\n        title: value.title,\n        employee: value.employee.map(res=>res._id),\n        hod: value.hod.map(res=>res._id),\n        createdOn: new Date(),\n        createdBy: {\n          uuid: localStorage.getItem('currentUserUuid'),\n          name: localStorage.getItem('currentUserName'),\n        },\n        flags: {\n          active: value.flags.active,\n        },\n      };\n      console.log(payload);\n      this.departmentsService.addDepartment(payload).subscribe(res => {\n        if (res) {\n          this.router.navigate(['/manage/department/list'])\n        }\n      })\n    } else {\n      this.insertDepartmentArray.map(e=>{\n        this.department.hod.map(res=>{\n          if( res._id == e){\n            this.insertDepartmentArray =  this.insertDepartmentArray.filter(d=>{\n              return res._id != d\n            })\n          }\n        })\n      })\n      this.deleteDepartmentArray.map(e=>{\n        this.department.hod.map(res=>{\n          if( res._id != e){\n            this.deleteDepartmentArray =  this.deleteDepartmentArray.filter(d=>{\n              return res._id != e\n            })\n          }\n        })\n      })\n      const payload: any = {\n        _id:this.department?._id,\n        uuid: this.department?.uuid,\n        title: value.title,\n        employee: value.employee,\n        hod: value.hod,\n        insertDepartmentArray:this.insertDepartmentArray,\n        deleteDepartmentArray:this.deleteDepartmentArray,\n        createdBy: this.department?.createdBy,\n        createdOn: this.department?.createdOn,\n        modifiedOn: new Date(),\n        modifiedBy: {\n          uuid: localStorage.getItem('currentUserUuid'),\n          name: localStorage.getItem('currentUserName'),\n        },\n        flags: {\n          active: value.flags.active,\n        },\n      };\n      console.log(payload)\n      this.departmentsService.editDepartmentByUuid(payload).subscribe(res => {\n        if (res) {\n          this.router.navigate(['/manage/department/list'])\n        }\n      })\n\n    }\n  }\n  resetForm() {\n    this.createDepartmentForm.reset();\n  }\n\n}\n","<div class=\"create-tags\">\n    <h2 *ngIf=\"mode === 'add'\">\n      <span translate >Create&nbsp;Event</span>\n    </h2>\n    <h2 *ngIf=\"mode === 'edit'\">\n            <span translate >Edit&nbsp;Event</span>\n    </h2>\n    <mat-card>\n        <form [formGroup]=\"createDepartmentForm\">\n\n        <div class=\"flex-wrap\">\n                <div class=\"form-element child\">\n                    <mat-form-field class=\"example-form-field\">\n                        <mat-label>Department Title&nbsp;<sup>*</sup></mat-label>\n                        <input matInput name=\"title\" formControlName=\"title\" />\n                    </mat-form-field>\n                </div>\n                <div class=\"form-element child\">\n                    <mat-form-field class=\"example-full-width\">\n                        <mat-label>Employees</mat-label>\n                        <mat-select formControlName=\"employee\"[compareWith]=\"helper.compareFn\" multiple >\n                          <mat-option *ngFor=\"let sub of employeeList\" [value]=\"sub\" >\n                            {{sub.name}}</mat-option>\n                        </mat-select>\n                      </mat-form-field>\n                </div>\n                <div class=\"form-element child\">\n                    <mat-form-field class=\"example-full-width\">\n                        <mat-label>Head&nbsp;Of&nbsp;Department</mat-label>\n                        <mat-select formControlName=\"hod\"[compareWith]=\"helper.compareFn\" multiple >\n                          <mat-option *ngFor=\"let sub of createDepartmentForm?.value?.employee\" [value]=\"sub\"#EVENT\n                          (click)=\"insertAndDeleteArray(EVENT._selected,sub._id)\" >\n                            {{sub.name}}</mat-option>\n                        </mat-select>\n                      </mat-form-field>\n                </div>\n            </div>\n\n            <div class=\"form-element child flags\" [formGroup]=\"createDepartmentForm?.controls?.flags\">\n                <strong><span translate>COMMON.FLAGS</span></strong>\n                <div class=\"flex-wrap\">\n                    <div class=\"form-element child\">\n                        <label for=\"isActive\">\n                            <mat-checkbox class=\"example-margin\" name=\"active\" formControlName=\"active\">{{\n                                'COMMON.ACTIVE' |\n                                translate }}</mat-checkbox>\n                        </label>\n                    </div>\n                </div>\n\n            </div>\n\n            <div class=\"text-right button-group\">\n                <button mat-stroked-button color=\"warn\" translate (click)=\"resetForm()\" *ngIf=\"mode ==='add'\">\n                    Reset\n                </button>\n                <button routerLink=\"/manage/events/list\" mat-raised-button color=\"warn\" translate>\n                    Cancel\n                </button>\n                <button mat-raised-button color=\"primary\" type=\"submit\" (click)=\"submit()\" translate\n                    [disabled]=\"!createDepartmentForm.valid\">\n                    Submit\n                </button>\n            </div>\n        </form>\n    </mat-card>\n\n</div>","import { CreateDepartmentComponent } from './create-department/create-department.component';\nimport { DepartmentListComponent } from './department-list/department-list.component';\n\nexport const components = [\n    CreateDepartmentComponent,\n    DepartmentListComponent,\n];\n\nexport * from './create-department/create-department.component';\nexport * from './department-list/department-list.component';\n\n\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport * as fromComponents from './components';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { UiModule } from '@application/ui';\nimport { DepartmentRoutes } from './deparment-routing.module';\n\n\n@NgModule({\n  declarations: [ ...fromComponents.components,],\n  imports: [\n    CommonModule,\n    TranslateModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(DepartmentRoutes),\n    UiModule,\n  ]\n})\nexport class DeparmentModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { RoleModulesEnum, RoleSubModulesEnum } from '@application/api-interfaces';\nimport { CommandRemoveDialogComponent, DepartmentsService, HelperService } from '@application/ui';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'application-department-list',\n  templateUrl: './department-list.component.html',\n  styleUrls: ['./department-list.component.less']\n})\nexport class DepartmentListComponent implements OnInit {\n  isAddVisible: boolean;\n  isDeleteVisible: boolean;\n  isEditVisible: boolean;\n  departments: any;\n  // @Output() delete = new EventEmitter<TagInterface>();\n\n  search: string;\n  // filteredDepartments:  MatTableDataSource<TagInterface>;\n  filteredDepartments: any;\n\n  totalLength = [10, 25, 50, 100];\n  total: number;\n  errors: string[];\n  sub = new Subscription();\n  // p: number = 1;\n  @ViewChild(MatSort, { static: true }) sort?: MatSort;\n  @ViewChild(MatPaginator, { static: true }) paginator?: MatPaginator;\n  displayedColumns: string[] = [\n    'sno',\n    'title',\n    'hod',\n    'status',\n    'actions'\n  ];\n  today = new Date()\n\n  constructor(\n    private departmentsService: DepartmentsService,\n    private dialog: MatDialog,\n    private helper: HelperService,\n    private router: Router\n  ) {\n    // this.today.setDate(this.today.getDate() - 1)\n  }\n\n  loadData() {\n    this.departmentsService.getAllDepartments().subscribe(res => {\n      this.departments = this.filteredDepartments = res?.response;\n      this.filteredDepartments = new MatTableDataSource(this.filteredDepartments);\n      this.filteredDepartments.paginator = this.paginator;\n      this.filteredDepartments.sort = this.sort;\n    })\n  }\n\n  ngOnInit(): void {\n    this.loadPermissions();\n    this.loadData();\n  }\n\n  delete(data) {\n    const dialogRef = this.dialog.open(CommandRemoveDialogComponent, {\n      data: { payload: data },\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.sub.add(this.departmentsService.deleteEventByUuid(data._id).subscribe(\n          (res) => {\n            this.loadData();\n          },\n          (err) => {\n            this.errors = err.error.error;\n          }\n        ));\n      }\n    })\n  }\n\n\n  filterDepartments(department: Event) {\n    const filterValue = (department.target as HTMLInputElement).value.toLowerCase().trim();;\n    if (filterValue) {\n      this.filteredDepartments = this.departments.filter((tag) => {\n        return tag.title.toLowerCase().includes(filterValue)\n      });\n    } else {\n      this.filteredDepartments = this.departments;\n    }\n    this.filteredDepartments = new MatTableDataSource(this.filteredDepartments);\n    this.filteredDepartments.paginator = this.paginator;\n    this.filteredDepartments.sort = this.sort;\n  }\n\n  loadPermissions() {\n    let modules = this.helper.enumtoArray(RoleModulesEnum);\n    let subM = this.helper.enumtoArray(RoleSubModulesEnum);\n    let role = localStorage.getItem('role');\n    let roleData = JSON.parse(localStorage.getItem('roleData'));\n\n    if (role) {\n      // this.roleService.getRoleById(role).subscribe(r => {\n      roleData[0].rolePermissions.map(res => {\n        if (res.module[0].title === modules.type.DEPARTMENT)\n          res.subModules.map(e => {\n            if (e.title == subM.type.ADD) {\n              this.isAddVisible = true;\n            }\n            else if (e.title == subM.type.DELETE) {\n              this.isDeleteVisible = true;\n            }\n            else if (e.title == subM.type.EDIT) {\n              this.isEditVisible = true;\n            }\n          })\n      })\n      // })\n    }\n  }\n\n\n  \n\n  // addStudentsToEvents(department) {\n  //   this.router.navigate([`manage/departments/${department.uuid}/add/students`], {\n  //     queryParams: { eventTitle: department.title, event_id: department._id, course_id: department.course._id }\n  //   })\n  // }\n  // editStudentsToEvents(department) {\n  //   this.router.navigate([`manage/departments/${department.uuid}/edit/students`], {\n  //     queryParams: { eventTitle: department.title, event_id: department._id, course_id: department.course._id }\n  //   })\n  // }\n\n\n\n}\n","<div class=\"tag-list\">\n    <div class=\"page-title\">\n        <div class=\"title\">\n            <h2>Departments</h2>\n        </div>\n        <div class=\"action-buttons\">\n            <button *ngIf=\"isAddVisible\" mat-raised-button color=\"primary\" [routerLink]=\"['../', 'create']\">Create\n                Department</button>\n        </div>\n    </div>\n    <div class=\"search full-width\">\n        <mat-form-field class=\"example-full-width\">\n            <mat-label translate>COMMON.SEARCH</mat-label>\n            <input type=\"search\" matInput name=\"search\" [placeholder]=\"'PAGE.ORGANIZATION_LIST.SEARCH' | translate\"\n                (keyup)=\"filterDepartments($event)\" />\n        </mat-form-field>\n    </div>\n\n    <div class=\"mat-elevation-z1\">\n        <table mat-table [dataSource]=\"filteredDepartments\">\n            <ng-container matColumnDef=\"sno\">\n                <th mat-header-cell *matHeaderCellDef style=\"width: 20px;\">\n                    S.No\n                </th>\n                <td mat-cell *matCellDef=\"let row\">{{filteredDepartments.filteredData.indexOf(row)+1}}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"title\">\n                <th mat-header-cell *matHeaderCellDef>\n                    {{ 'COMMON.TITLE' | translate }}\n                </th>\n                <td mat-cell *matCellDef=\"let row\">{{ row.title }}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"hod\">\n                <th mat-header-cell *matHeaderCellDef>\n                    Head&nbsp;Of&nbsp;Department\n                </th>\n                <td mat-cell *matCellDef=\"let row\">\n                    <div *ngFor=\"let value of row?.hod;let i = index\" >\n                        <span>{{value.name}}\n                          {{row?.hod.length != i+1 ? ',':''}}\n                        </span>\n                      </div>\n                </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"status\">\n                <th mat-header-cell *matHeaderCellDef>\n                    {{ 'COMMON.ACTIVE' | translate }}\n                </th>\n                <td mat-cell *matCellDef=\"let row\">{{ row.flags.active }}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef>\n                    {{ 'COMMON.ACTIONS.TITLE' | translate }}\n                </th>\n                <td mat-cell *matCellDef=\"let row\">\n                    <!-- <mat-icon class=\"view\" [matMenuTriggerFor]=\"menu\">more_vert</mat-icon> -->\n                    <i class=\"material-icons\" [matMenuTriggerFor]=\"menu\" style=\"margin-left: 10px;\">more_vert</i>\n                    <mat-menu #menu=\"matMenu\">\n                        <a [routerLink]=\"['../', row.uuid, 'edit']\" *ngIf=\"isEditVisible\"\n                            style=\"text-decoration: none;\">\n                            <button mat-menu-item color=\"primary\">\n                                Edit&nbsp;Department\n                            </button>\n                        </a>\n                        <button mat-menu-item *ngIf=\"isDeleteVisible\" (click)=\"delete(row)\">\n                            Delete&nbsp;Department\n                        </button>\n                    </mat-menu>\n\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n            <tr class=\"mat-row\" *matNoDataRow style=\"text-align: center;\">\n                <td class=\"mat-cell\" colspan=\"5\">\n                    <h3 translate>COMMON.NO_DATA</h3>\n                </td>\n            </tr>\n        </table>\n\n        <mat-paginator [showFirstLastButtons]=\"true\" [pageSizeOptions]=\"totalLength\"></mat-paginator>\n\n    </div>\n\n</div>","import { Routes } from '@angular/router';\nimport { CreateGuard, EditGuard } from '@application/ui';\nimport { ManageAsideMenuComponent } from '../../components';\nimport * as fromComponents from './components';\n\nexport const DepartmentRoutes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: 'create',\n        canActivate:[CreateGuard],\n        component: fromComponents.CreateDepartmentComponent,\n        data: {\n          mode: 'add',\n        },\n      },\n      {\n        path: ':uuid/edit',\n        canActivate:[EditGuard],\n        component: fromComponents.CreateDepartmentComponent,\n        data: {\n          mode: 'edit',\n        },\n      },\n      {\n        path: 'list',\n        component: fromComponents.DepartmentListComponent,\n      },\n     \n     \n      {\n        path: '',\n        outlet: 'aside',\n        component: ManageAsideMenuComponent,\n      },\n      {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: '/manage/department/list',\n      },\n    ],\n  },\n];\n\n"],"sourceRoot":"webpack:///"}
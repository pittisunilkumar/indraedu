{"version":3,"sources":["webpack:///apps/manage-client/src/app/modules/master-advice/view-payments/view-payments.component.ts","webpack:///apps/manage-client/src/app/modules/master-advice/view-payments/view-payments.component.html","webpack:///apps/manage-client/src/app/modules/master-advice/master-advice-routing.module.ts","webpack:///apps/manage-client/src/app/modules/master-advice/master-advice.module.ts","webpack:///apps/manage-client/src/app/modules/master-advice/master-advice-payments/master-advice-payments.component.ts","webpack:///apps/manage-client/src/app/modules/master-advice/master-advice-payments/master-advice-payments.component.html","webpack:///apps/manage-client/src/app/modules/master-advice/print-receipt/print-receipt.component.ts","webpack:///apps/manage-client/src/app/modules/master-advice/print-receipt/print-receipt.component.html"],"names":["ViewPaymentsComponent","route","userTransactionsService","_location","paymentUuid","snapshot","paramMap","get","getTransactionByUuid","subscribe","res","transactions","response","currentYear","Date","getFullYear","year","toString","split","parseInt","length","back","backToPaymentsList","selector","templateUrl","styleUrls","MasterAdviceRoutes","path","runGuardsAndResolvers","children","component","canActivate","pathMatch","redirectTo","MasterAdviceModule","forChild","declarations","imports","MasterAdvicePaymentsComponent","helper","router","notification","paymentStatusArray","modeOfPaymentArray","displayedColumns","resetPassword","totalAmount","form","fromDate","toDate","loadData","getMasterAdviceTransactions","data","console","log","filteredList","list","dataSource","paginator","sort","forEach","paymentStatus","finalPaidAmount","toFixed","filteredData","alert","dataToExport","map","x","transactionId","Name","userId","name","Mobile","mobile","actualPrice","Coupon","couponId","code","discountPrice","paymentType","modeOfPayment","expiryDate","dateOfPayment","mode_transactionNumber","referenceNumber","paymentMessage","subscriptionId","title","billNumber","chequeNumber","chequeDate","bankName","creditORdebitCard","cardType","upiId","razorPayPaymentId","razoraySignature","razorpayOrderId","createdBy","workSheet","json_to_sheet","sheet","workBook","book_new","wscols","wch","book_append_sheet","event","filterValue","target","value","trim","filter","trans","toLowerCase","includes","toLocaleLowerCase","nativeElement","setDate","getDate","dates","getmasterAdviceDateFilter","showNotification","type","SUCCESS","payload","message","statusCode","statusText","status","ERROR","applyFilter","searchPayments","exportTable","userTransactions","PrintReceiptComponent","cmpName","printContents","document","getElementById","innerHTML","originalContents","body","window","print","printComponent"],"mappings":"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","file":"apps-manage-client-src-app-modules-master-advice-master-advice-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserTransactionsService } from '@application/ui';\n\n@Component({\n  selector: 'application-view-payments',\n  templateUrl: './view-payments.component.html',\n  styleUrls: ['./view-payments.component.less']\n})\nexport class ViewPaymentsComponent implements OnInit {\n\n  paymentUuid: string;\n  transactions?: any;\n\n  constructor(\n    private route: ActivatedRoute,\n    private userTransactionsService: UserTransactionsService,\n    private _location: Location,\n  ) { }\n\n  ngOnInit(): void {\n    this.paymentUuid = this.route.snapshot.paramMap.get('uuid');\n    this.userTransactionsService.getTransactionByUuid(this.paymentUuid).subscribe(res => {\n      this.transactions = res.response;\n    })\n    let currentYear = new Date().getFullYear();\n    let year = currentYear.toString().split('');\n    currentYear = parseInt(year[year.length - 2] + year[year.length - 1]);\n\n  }\n  backToPaymentsList() {\n    this._location.back();\n  }\n\n  // checkPaymentStatus(orderId) {\n  //   this.userTransactionsService.checkPaymentStatus({ razorpayOrderId: orderId }).subscribe(data => {\n  //     if (data) {\n  //       this._location.back();\n  //     }\n  //   })\n  // }\n\n}\n","<mat-card>\n    <h2 style=\"text-align: center;\">User Payment Details</h2>\n    <div class=\"flex-wrap\">\n        <div class=\"w-1-3\" *ngIf=\"transactions?.transactionId\">\n            <span><b> Transaction Id</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span> {{transactions?.transactionId}}</span>\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.userId.name\">\n            <span> <b>User Name</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{transactions?.userId.name}}</span>\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.userId.mobile\">\n            <span><b> User Mobile</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{transactions?.userId.mobile}}</span>\n        </div>\n\n        <div class=\"w-1-3\" *ngIf=\"transactions?.subscriptionId?.title\">\n            <span><b> Subscription</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{transactions?.subscriptionId.title}}</span>\n        </div>\n\n        <div class=\"w-1-3\" *ngIf=\"transactions?.couponId != null \">\n            <span> <b>Coupon</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{transactions?.couponId.code }}</span>&nbsp;\n            <span *ngIf=\"transactions?.couponId.discountType ==='flat'\">[&nbsp;{{transactions?.couponId.discount\n                |\n                currency:'INR'}}&nbsp;]</span>\n            <span\n                *ngIf=\"transactions?.couponId.discountType ==='percentage'\">[&nbsp;{{transactions?.couponId.discount}}%&nbsp;]</span>\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.actualPrice\">\n            <span><b> Actual Price</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{transactions?.actualPrice}}</span>\n        </div>\n        <div class=\"w-1-3\" >\n            <span> <b>Discount Price</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span style=\"color: red;font-weight: bold;\">{{transactions?.discountPrice}}</span>\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.finalPaidAmount\">\n            <span><b> Paid Amount</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span style=\"color: green;font-weight: bold;\">{{transactions?.finalPaidAmount?.toFixed(2) | currency:'INR'}}</span>\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.paymentType\">\n            <span><b> Payment Type</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{transactions?.paymentType}}</span>\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.paymentStatus\">\n            <span><b>Payment Status</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span style=\"color: green;font-weight: bold;\" *ngIf=\"transactions.paymentStatus == 'SUCCESS'\">{{transactions?.paymentStatus}}</span>\n            <span style=\"color: yellowgreen;font-weight: bold;\"  *ngIf=\"transactions.paymentStatus == 'PENDING'\">{{transactions?.paymentStatus}}</span>\n            <span style=\"color: red;font-weight: bold;\" *ngIf=\"transactions.paymentStatus == 'FAILED'\">{{transactions?.paymentStatus}}</span>\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.modeOfPayment\">\n            <span><b>Mode Of Payment</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{transactions?.modeOfPayment}}</span>\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.billNumber\">\n            <span><b>Bill Number</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{ transactions?.billNumber }}</span>&nbsp;\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.chequeNumber\">\n            <span><b>Cheque Number</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{ transactions?.chequeNumber}}</span>&nbsp;\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.chequeDate\">\n            <span><b>Cheque Date</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{ transactions?.chequeDate | date:\"mediumDate\" }}</span>&nbsp;\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.bankName\">\n            <span><b>Bank Name</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{ transactions?.bankName }}</span>&nbsp;\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.referenceNumber\">\n            <span><b>Reference&nbsp;Number</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{ transactions?.referenceNumber }}</span>&nbsp;\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.creditORdebitCard\">\n            <span><b>Credit/Debit Card</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{ transactions?.creditORdebitCard }}</span>&nbsp;\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.cardType\">\n            <span><b>Card Type</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{ transactions?.cardType }}</span>&nbsp;\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.upiId\">\n            <span><b>Upi Id</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{ transactions?.upiId }}</span>&nbsp;\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.mode_transactionNumber\">\n            <span><b>Transaction&nbsp;Number</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{ transactions?.mode_transactionNumber}}</span>&nbsp;\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.razorpayOrderId\">\n            <span><b>RazorPay&nbsp;OrderId</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{ transactions?.razorpayOrderId }}</span>&nbsp;\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.razorPayPaymentId\">\n            <span><b>RazorPay&nbsp;PaymentId</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{ transactions?.razorPayPaymentId }}</span>&nbsp;\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.razoraySignature\">\n            <span><b>RazorPay&nbsp;Signature</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{ transactions?.razoraySignature | slice:1:20  }}...</span>&nbsp;\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.dateOfPayment\">\n            <span><b>Date Of Payment</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{transactions?.dateOfPayment | date:\"mediumDate\"}}</span>\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.expiryDate\">\n            <span><b>Expiry Date</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{transactions?.expiryDate | date:\"mediumDate\"}}</span>\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.paymentMessage\">\n            <span><b>Payment Message</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{ transactions?.paymentMessage }}</span>&nbsp;\n        </div>\n    </div>\n\n\n   <br><br>\n    <button  mat-raised-button color=\"primary\" class=\"paymentsButton\" (click)=\"backToPaymentsList()\">Back</button>&nbsp;\n   <!-- <button  mat-stroked-button color=\"primary\" *ngIf=\"transactions?.paymentStatus == 'PENDING' && transactions?.modeOfPayment=='RAZORPAY'\"\n    (click)=\"checkPaymentStatus(transactions?.razorpayOrderId)\">Check Payment Status</button> -->\n</mat-card>","import { Routes } from '@angular/router';\nimport { ApplicationLayoutComponent, AuthGuard, MasterAdviceGuard, PaymentDashboardGuard } from '@application/ui';\nimport { MasterAdvicePaymentsComponent } from './master-advice-payments/master-advice-payments.component';\nimport { PrintReceiptComponent } from './print-receipt/print-receipt.component';\nimport { ViewPaymentsComponent } from './view-payments/view-payments.component';\n\nexport const MasterAdviceRoutes: Routes = [\n  {\n    path: '',\n    // component: ApplicationLayoutComponent,\n    runGuardsAndResolvers: 'always',\n    children: [\n      {\n        path: 'payments',\n        component: MasterAdvicePaymentsComponent,\n        canActivate: [AuthGuard,MasterAdviceGuard]\n      },\n      {\n        path: ':uuid/transaction',\n        component: ViewPaymentsComponent,\n        canActivate: [AuthGuard,MasterAdviceGuard]\n      },\n      {\n        path: ':uuid/receipt',\n        component: PrintReceiptComponent,\n        canActivate: [AuthGuard,MasterAdviceGuard]\n      },\n      \n      {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: '/master-advice',\n      },\n    ],\n  }\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MasterAdvicePaymentsComponent } from './master-advice-payments/master-advice-payments.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RouterModule } from '@angular/router';\nimport { UiModule } from '@application/ui';\nimport { GoogleChartsModule } from 'angular-google-charts';\nimport { MasterAdviceRoutes } from './master-advice-routing.module';\nimport { ViewPaymentsComponent } from './view-payments/view-payments.component';\nimport { PrintReceiptComponent } from './print-receipt/print-receipt.component';\n\n\n@NgModule({\n  declarations: [MasterAdvicePaymentsComponent, ViewPaymentsComponent, PrintReceiptComponent],\n  imports: [\n    CommonModule,\n    TranslateModule,\n    RouterModule.forChild(MasterAdviceRoutes),\n    UiModule,\n    GoogleChartsModule\n  ]\n})\nexport class MasterAdviceModule { }\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport * as XLSX from 'xlsx';\n\nimport 'jspdf-autotable';\nimport { jsPDF } from 'jspdf';\nimport { UserTransactonsInterface } from '@application/api-interfaces';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport {\n  HelperService,\n  NotificationService,\n  NotificationType,\n  UserTransactionsService,\n} from '@application/ui';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'application-master-advice-payments',\n  templateUrl: './master-advice-payments.component.html',\n  styleUrls: ['./master-advice-payments.component.less'],\n})\nexport class MasterAdvicePaymentsComponent implements OnInit {\n  @Input() userTransactions: UserTransactonsInterface;\n\n  paymentStatusArray = ['ALL', 'SUCCESS', 'PENDING', 'FAILED'];\n  modeOfPaymentArray = [\n    'ALL',\n    'RAZORPAY',\n    'CASH',\n    'POSMACHINE',\n    'UPI',\n    'OFFLINE',\n    'CHEQUE',\n  ];\n  PaymentStatus: string;\n  ModeOfPayment: string;\n\n  displayedColumns: string[] = [\n    'sno',\n    'transactionId',\n    // 'name',\n    'mobile',\n    'actualPrice',\n    'coupon',\n    'discountPrice',\n    'finalPaidAmount',\n    'paymentType',\n    'modeOfPayment',\n    'dateOfPayment',\n    'paymentStatus',\n    'actions',\n  ];\n  dataSource: MatTableDataSource<UserTransactonsInterface>;\n  @Output() delete = new EventEmitter<UserTransactonsInterface>();\n  @Output() resetPassword = new EventEmitter<UserTransactonsInterface>();\n  expandedElement: UserTransactonsInterface | null;\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  @ViewChild('fromDate') fromDate:ElementRef;\n  @ViewChild('toDate') toDate:ElementRef;\n\n  filteredList: any;\n  list: any;\n  totalAmount = 0;\n  length: number;\n  form = new FormGroup({\n    fromDate: new FormControl(''),\n    toDate: new FormControl(''),\n  });\n\n  constructor(\n    public helper: HelperService,\n    private router: Router,\n    private userTransactionsService: UserTransactionsService,\n    private notification: NotificationService\n  ) {}\n\n  ngOnInit() {\n    this.loadData();\n  }\n\n  loadData(): void {\n    // let dates = {\n    //   fromDate: new Date(),\n    //   toDate: new Date(),\n    // };\n    this.userTransactionsService.getMasterAdviceTransactions().subscribe((data) => {\n      console.log('data,',data);\n      this.filteredList = this.list = data.response;\n      this.dataSource = new MatTableDataSource(this.filteredList);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n      this.totalAmount = 0;\n      this.filteredList.forEach((res) => {\n        if (res.paymentStatus === 'SUCCESS') {\n          this.totalAmount += res.finalPaidAmount;\n        }\n      });\n      console.log('this.totalAmount', this.totalAmount.toFixed(2));\n    });\n  }\n\n  // ngOnChanges(changes: SimpleChanges) {\n  //   // Assign the data to the data source for the table to render\n  //   if (changes?.userTransactions?.currentValue) {\n  //     this.filteredList = this.list = changes?.userTransactions?.currentValue\n  //     // this.filteredList = changes?.userTransactions?.currentValue\n  //     this.dataSource = new MatTableDataSource(changes?.userTransactions?.currentValue);\n  //     this.dataSource.paginator = this.paginator;\n  //     this.dataSource.sort = this.sort;\n  //     this.totalAmount = 0\n  //     this.filteredList.forEach(res => {\n  //       if (res.paymentStatus === 'SUCCESS') {\n  //         this.totalAmount += res.finalPaidAmount;\n  //       }\n  //     })\n  //     console.log('this.totalAmount', this.totalAmount.toFixed(2));\n  //   }\n  // }\n\n  exportTable() {\n    if (this.dataSource.filteredData.length === 0) {\n      alert('No data available for ExportData');\n    } else {\n      const dataToExport = this.dataSource.filteredData.map((x) => ({\n        transactionId: x?.transactionId,\n        Name: x?.userId?.name ? x?.userId?.name : '---',\n        Mobile: x?.userId?.mobile ? x?.userId?.mobile : '---',\n        actualPrice: x?.actualPrice,\n        Coupon: x?.couponId?.code ? x?.couponId?.code : '---',\n        discountPrice: x?.discountPrice,\n        finalPaidAmount: x?.finalPaidAmount,\n        paymentType: x?.paymentType,\n        modeOfPayment: x?.modeOfPayment,\n        paymentStatus: x?.paymentStatus,\n        expiryDate: x?.expiryDate,\n        dateOfPayment: x?.dateOfPayment,\n        mode_transactionNumber: x?.mode_transactionNumber,\n        referenceNumber: x?.referenceNumber,\n        paymentMessage: x?.paymentMessage,\n        subscriptionId: x?.subscriptionId?.title,\n        billNumber: x?.billNumber,\n        chequeNumber: x?.chequeNumber,\n        chequeDate: x?.chequeDate,\n        bankName: x?.bankName,\n        creditORdebitCard: x?.creditORdebitCard,\n        cardType: x?.cardType,\n        upiId: x?.upiId,\n        razorPayPaymentId: x?.razorPayPaymentId,\n        razoraySignature: x?.razoraySignature,\n        razorpayOrderId: x?.razorpayOrderId,\n        createdBy: x?.createdBy.name,\n      }));\n\n      let workSheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(dataToExport, <\n        XLSX.Table2SheetOpts\n      >{ sheet: 'Sheet 1' });\n      let workBook: XLSX.WorkBook = XLSX.utils.book_new();\n\n      // Adjust column width\n      var wscols = [{ wch: 15 }];\n\n      workSheet['!cols'] = wscols;\n      XLSX.utils.book_append_sheet(workBook, workSheet, 'Sheet 1');\n      XLSX.writeFile(workBook, `MasterAdvicePayments.xlsx`);\n    }\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value.trim();\n    if (filterValue) {\n      this.filteredList = this.list.filter((trans) => {\n        return (\n          trans.transactionId\n            .toLowerCase()\n            .includes(filterValue.toLocaleLowerCase()) ||\n          trans.userId?.name\n            .toLowerCase()\n            .includes(filterValue.toLocaleLowerCase()) ||\n          trans.userId?.mobile\n            .toString()\n            .toLowerCase()\n            .includes(filterValue.toLocaleLowerCase()) ||\n          trans.couponId?.code\n            .toLowerCase()\n            .includes(filterValue.toLocaleLowerCase()) ||\n          trans.paymentType\n            .toLowerCase()\n            .includes(filterValue.toLocaleLowerCase()) ||\n          trans.paymentStatus\n            .toLowerCase()\n            .includes(filterValue.toLocaleLowerCase()) ||\n          trans.subscriptionId?.title\n            .toLowerCase()\n            .includes(filterValue.toLocaleLowerCase()) ||\n          trans.modeOfPayment\n            .toLowerCase()\n            .includes(filterValue.toLocaleLowerCase())\n        );\n      });\n      this.dataSource = new MatTableDataSource(this.filteredList);\n    } else {\n      this.dataSource = new MatTableDataSource(this.list);\n    }\n    this.dataSource.paginator = this.paginator;\n    this.totalAmount = 0;\n    this.filteredList.forEach((res) => {\n      if (res.paymentStatus === 'SUCCESS') {\n        this.totalAmount += res.finalPaidAmount;\n      }\n    });\n    console.log('this.totalAmountFilter', this.totalAmount.toFixed(2));\n  }\n\n  searchPayments() {\n   let toDate= new Date(this.toDate.nativeElement.value).setDate(\n        new Date(this.toDate.nativeElement.value).getDate() + 1\n      )\n    let dates = {\n      fromDate: new Date(this.fromDate.nativeElement.value),\n      toDate:new Date(toDate)\n    };\n    console.log('dates', dates);\n\n    this.userTransactionsService.getmasterAdviceDateFilter(dates).subscribe((data) => {\n      console.log(data);\n      this.filteredList = this.list = data.response;\n\n      this.dataSource = new MatTableDataSource(data.response);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n      this.length = this.dataSource.filteredData.length;\n      this.totalAmount = 0;\n      this.list.forEach((res) => {\n        if (res.paymentStatus === 'SUCCESS') {\n          this.totalAmount += res.finalPaidAmount;\n        }\n      });\n      console.log('this.totalAmountSearch', this.totalAmount.toFixed(2));\n      if (this.length) {\n        this.notification.showNotification({\n          type: NotificationType.SUCCESS,\n          payload: {\n            message: 'User payments fetched successfully',\n            statusCode: 200,\n            statusText: 'Successfully',\n            status: 201,\n          },\n        });\n      } else {\n        this.notification.showNotification({\n          type: NotificationType.ERROR,\n          payload: {\n            message: '',\n            statusCode: 200,\n            statusText: 'Successfully',\n            status: 201,\n          },\n        });\n      }\n    });\n  }\n\n  // selectModeOfPayment(event) {\n  //   this.ModeOfPayment = event;\n  //   if (event == 'ALL') {\n  //     if (this.PaymentStatus && this.PaymentStatus != 'ALL') {\n  //       let dataSource;\n  //       dataSource = this.list.filter((payment) => {\n  //         return payment.paymentStatus\n  //           .toLowerCase()\n  //           .includes(this.PaymentStatus.toLowerCase());\n  //       });\n  //       this.dataSource = new MatTableDataSource(dataSource);\n  //     } else {\n  //       this.dataSource = new MatTableDataSource(this.filteredList);\n  //     }\n  //   } else {\n  //     let dataSource;\n  //     if (event) {\n  //       if (this.PaymentStatus && this.PaymentStatus != 'ALL') {\n  //         dataSource = this.list.filter((payment) => {\n  //           return (\n  //             payment.modeOfPayment\n  //               .toLowerCase()\n  //               .includes(event.toLowerCase()) &&\n  //             payment.paymentStatus\n  //               .toLowerCase()\n  //               .includes(this.PaymentStatus.toLowerCase())\n  //           );\n  //         });\n  //       } else if (!this.PaymentStatus || this.PaymentStatus == 'ALL') {\n  //         dataSource = this.list.filter((payment) => {\n  //           return payment.modeOfPayment\n  //             .toLowerCase()\n  //             .includes(event.toLowerCase());\n  //         });\n  //       }\n  //       this.totalAmount = 0;\n  //       dataSource.forEach((res) => {\n  //         if (res.paymentStatus === 'SUCCESS') {\n  //           this.totalAmount += res.finalPaidAmount;\n  //         }\n  //       });\n  //       console.log('ModeOfPayment', this.totalAmount.toFixed(2));\n  //     }\n  //     this.dataSource = new MatTableDataSource(dataSource);\n  //   }\n  //   this.dataSource.paginator = this.paginator;\n  //   this.dataSource.sort = this.sort;\n  // }\n\n  // selectPaymentStatus(event) {\n  //   this.PaymentStatus = event;\n  //   if (event == 'ALL') {\n  //     if (this.ModeOfPayment && this.ModeOfPayment != 'ALL') {\n  //       let dataSource;\n  //       dataSource = this.list.filter((payment) => {\n  //         return payment.modeOfPayment\n  //           .toLowerCase()\n  //           .includes(this.ModeOfPayment.toLowerCase());\n  //       });\n  //       this.dataSource = new MatTableDataSource(dataSource);\n  //     } else {\n  //       this.dataSource = new MatTableDataSource(this.filteredList);\n  //     }\n  //   } else {\n  //     let dataSource;\n  //     if (event) {\n  //       if (this.ModeOfPayment && this.ModeOfPayment != 'ALL') {\n  //         dataSource = this.list.filter((payment) => {\n  //           return (\n  //             payment.paymentStatus\n  //               .toLowerCase()\n  //               .includes(event.toLowerCase()) &&\n  //             payment.modeOfPayment\n  //               .toLowerCase()\n  //               .includes(this.ModeOfPayment.toLowerCase())\n  //           );\n  //         });\n  //       } else if (!this.ModeOfPayment || this.ModeOfPayment == 'ALL') {\n  //         dataSource = this.list.filter((payment) => {\n  //           return payment.paymentStatus\n  //             .toLowerCase()\n  //             .includes(event.toLowerCase());\n  //         });\n  //       }\n  //     }\n  //     this.dataSource = new MatTableDataSource(dataSource);\n  //   }\n  //   this.dataSource.paginator = this.paginator;\n  //   this.dataSource.sort = this.sort;\n  // }\n\n  // viewTransaction(payment){\n  //  this.router.navigate([`manage/user/payments/${payment.uuid}/transaction`])\n  // }\n}\n","<div class=\"users-list mat-table-wrapper\">\n    <!-- <div class=\"flex-wrap\"> -->\n        <div class=\"row\">\n            <div class=\"col col-sm-8\">\n              <div class=\"title\">\n                <h2>Master&nbsp;Advice&nbsp;Transactions</h2>\n              </div>\n            </div>\n            <div class=\"col col-sm-4\"></div>\n          </div>\n      <div class=\"row\">\n        <div class=\"col-sm-6\">\n          <mat-form-field>\n            <mat-label translate>COMMON.SEARCH</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" [placeholder]=\"'COMMON.FILTER.BY_TITLE' | translate\" #input />\n          </mat-form-field>\n        </div>\n        <!-- <div class=\"col-sm-2\">\n          <mat-form-field>\n            <mat-label translate>Mode&nbsp;Of&nbsp;Payment</mat-label>\n            <mat-select>\n              <mat-option  *ngFor=\"let item of modeOfPaymentArray\" [value]=\"item\"  (click)=\"selectModeOfPayment(item)\">{{item}}</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n        <div class=\"col-sm-2\">\n          <mat-form-field >\n            <mat-label translate>Payment&nbsp;Status</mat-label>\n            <mat-select>\n              <mat-option *ngFor=\"let item of paymentStatusArray\" [value]=\"item\" (click)=\"selectPaymentStatus(item)\">{{item}}</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div> -->\n        <div class=\"col-sm-2\" >\n          <mat-form-field>\n            <mat-label>From Date</mat-label>\n            <input matInput [matDatepicker]=\"picker\" #fromDate>\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n          </mat-form-field>\n        </div>\n        <div class=\"col-sm-2\" >\n          <mat-form-field>\n            <mat-label>To Date</mat-label>\n            <input matInput [matDatepicker]=\"picker1\" #toDate>\n            <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n            <mat-datepicker #picker1></mat-datepicker>\n          </mat-form-field>\n        </div>\n        <div class=\"col-sm-1\">\n          <button mat-stroked-button color=\"primary\" type=\"button\" (click)=\"searchPayments()\">Search</button>&nbsp;\n        </div>\n        <div class=\"col-sm-1\">\n          <button mat-raised-button color=\"primary\" type=\"button\" (click)=\"exportTable()\">Excel</button>\n        </div>\n    </div>\n    <br>\n    <div class=\"mat-elevation-z1\">\n      <table mat-table [dataSource]=\"dataSource\" matSort>\n        <ng-container matColumnDef=\"sno\">\n          <th mat-header-cell *matHeaderCellDef>S.No</th>\n          <td mat-cell *matCellDef=\"let row;let i = index\">{{dataSource.filteredData.indexOf(row)+1 }}</td>\n        </ng-container>\n        <!-- <ng-container matColumnDef=\"name\">\n          <th mat-header-cell *matHeaderCellDef  style=\"width: 120px;\">\n            User&nbsp;Name\n          </th>\n          <td mat-cell *matCellDef=\"let row\">{{ row.userId?.name }}</td>\n        </ng-container> -->\n        <ng-container matColumnDef=\"mobile\">\n          <th mat-header-cell *matHeaderCellDef style=\"width: 100px;\">\n            User&nbsp;mobile\n          </th>\n          <td mat-cell *matCellDef=\"let row\">{{ row.userId?.mobile }}</td>\n        </ng-container>\n  \n        <ng-container matColumnDef=\"transactionId\">\n          <th mat-header-cell *matHeaderCellDef style=\"width: 120px;\">\n            Transaction ID\n          </th>\n          <td mat-cell *matCellDef=\"let row\">\n            {{ row.transactionId }}\n          </td>\n        </ng-container>\n  \n        <ng-container matColumnDef=\"actualPrice\">\n          <th mat-header-cell *matHeaderCellDef>\n            Actual&nbsp;Price\n          </th>\n          <td mat-cell *matCellDef=\"let row\">\n            {{ row?.actualPrice?.toFixed(2) }}\n          </td>\n        </ng-container>\n        <ng-container matColumnDef=\"coupon\">\n          <th mat-header-cell *matHeaderCellDef style=\"width: 120px;\">\n            Coupon\n          </th>\n          <td mat-cell *matCellDef=\"let row\">\n            {{ row.couponId?.code ?row.couponId.code:'----' }}&nbsp;\n            <span *ngIf=\"row.couponId?.discountType ==='flat'\">[&nbsp;{{row.couponId?.discount |\n              currency:'INR'}}&nbsp;]</span>\n            <span *ngIf=\"row.couponId?.discountType ==='percentage'\">[&nbsp;{{row.couponId?.discount}}%&nbsp;]</span>\n          </td>\n        </ng-container>\n        <ng-container matColumnDef=\"discountPrice\">\n          <th mat-header-cell *matHeaderCellDef style=\"width: 80px;\">\n            Discount Price\n          </th>\n          <td mat-cell *matCellDef=\"let row\">\n            <span style=\"color: red;\"> {{ row?.discountPrice?.toFixed(2) }}</span>\n          </td>\n        </ng-container>\n        <ng-container matColumnDef=\"finalPaidAmount\">\n          <th mat-header-cell *matHeaderCellDef>\n            Paid Amount\n          </th>\n          <td mat-cell *matCellDef=\"let row\">\n           <strong style=\"color: green;\"> {{ row?.finalPaidAmount?.toFixed(0) | currency:'INR' }}</strong>\n          </td>\n        </ng-container>\n  \n        <ng-container matColumnDef=\"paymentType\">\n          <th mat-header-cell *matHeaderCellDef>\n            Payment Type\n          </th>\n          <td mat-cell *matCellDef=\"let row\">{{ row.paymentType }}</td>\n        </ng-container>\n  \n        <ng-container matColumnDef=\"modeOfPayment\">\n          <th mat-header-cell *matHeaderCellDef>\n            Mode Of Payment\n          </th>\n          <td mat-cell *matCellDef=\"let row\">{{ row.modeOfPayment }}</td>\n        </ng-container>\n        <ng-container matColumnDef=\"paymentStatus\">\n          <th mat-header-cell *matHeaderCellDef>\n            Payment Status\n          </th>\n          <td mat-cell *matCellDef=\"let row\">\n            <span style=\"color: green;\" *ngIf=\"row.paymentStatus == 'SUCCESS'\">{{ row.paymentStatus }}</span>\n            <span style=\"color: yellowgreen;\" *ngIf=\"row.paymentStatus == 'PENDING'\">{{ row.paymentStatus }}</span>\n            <span style=\"color: red;\" *ngIf=\"row.paymentStatus == 'FAILED'\">{{ row.paymentStatus }}</span>\n  \n          </td>\n        </ng-container>\n  \n        <ng-container matColumnDef=\"dateOfPayment\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\n            Date Of Payment\n          </th>\n          <td mat-cell *matCellDef=\"let row\">{{row.dateOfPayment | date:'mediumDate' }}</td>\n        </ng-container>\n  \n        <ng-container matColumnDef=\"actions\">\n          <th mat-header-cell *matHeaderCellDef>\n            Actions\n          </th>\n          <td mat-cell *matCellDef=\"let row\">\n            <!-- <mat-icon class=\"view\" [matMenuTriggerFor]=\"menu\">more_vert</mat-icon> -->\n            <i class=\"material-icons\"  [matMenuTriggerFor]=\"menu\">more_vert</i>\n            <mat-menu #menu=\"matMenu\">\n              <a [routerLink]=\"['../', row.uuid, 'transaction']\">\n                <button mat-menu-item>\n                  <!-- <mat-icon color=\"primary\">visibility</mat-icon> -->\n                  <span class=\"btnSpan\">View Payment</span>\n                </button>\n              </a>\n              <a [routerLink]=\"['../', row.uuid, 'receipt']\" *ngIf=\"row.paymentStatus == 'SUCCESS'\">\n                <button mat-menu-item>\n                  <!-- <mat-icon color=\"primary\">print</mat-icon> -->\n                  <span class=\"btnSpan\">Print Receipt</span>\n                </button>\n              </a>\n            </mat-menu>\n          </td>\n        </ng-container>\n  \n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  \n        <tr class=\"mat-row\" *matNoDataRow>\n          <td class=\"mat-cell\" colspan=\"12\">\n            <img src=\"../../../../../../../assets/no_data_found.png\" alt=\"No Data Found\"\n              style=\"height: 150px;width: 150px;\">\n            <h2>No Data Found</h2>\n          </td>\n        </tr>\n      </table>\n      <mat-paginator [showFirstLastButtons]=\"true\" [pageSizeOptions]=\"[10,25,50, 100]\"></mat-paginator>\n      <!--  <table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows class=\"mat-elevation-z8\">\n  \n        <ng-container matColumnDef=\"{{ column }}\" *ngFor=\"let column of displayingColumns\">\n          <th mat-header-cell *matHeaderCellDef> {{ column }} </th>\n          <td mat-cell *matCellDef=\"let element\"> {{ element[column] }} </td>\n        </ng-container>\n  \n  \n        <ng-container matColumnDef=\"expandedDetail\">\n          <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"displayingColumns?.length\">\n            <div class=\"details\" [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n              <div class=\"my-1 full-width\">\n                <div class=\"flex-wrap\">\n                  <div class=\"w-1-1 child\">\n                    <strong translate> User Name </strong>\n                    <div class=\"bg-f8\"> {{ element.userId?.name }} </div>\n                  </div>\n                  <div class=\"w-1-1 child\">\n                    <strong translate> Mobile </strong>\n                    <div class=\"bg-f8\"> {{ element.userId?.mobile }} </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </td>\n        </ng-container>\n  \n  \n  \n  \n        <tr mat-header-row *matHeaderRowDef=\"displayingColumns\"></tr>\n        <tr mat-row *matRowDef=\"let element; columns: displayingColumns;\" class=\"example-element-row\"\n          [class.example-expanded-row]=\"expandedElement === element\"\n          (click)=\"expandedElement = expandedElement === element ? null : element\">\n        </tr>\n        <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n      </table> -->\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserTransactionsService } from '@application/ui';\n\n@Component({\n  selector: 'application-print-receipt',\n  templateUrl: './print-receipt.component.html',\n  styleUrls: ['./print-receipt.component.less']\n})\nexport class PrintReceiptComponent implements OnInit {\n\n  paymentUuid: string;\n  transactions?: any;\n  constructor(\n    private route: ActivatedRoute,\n    private userTransactionsService: UserTransactionsService,\n    private _location: Location,\n  ) { }\n\n  ngOnInit(): void {\n    this.paymentUuid = this.route.snapshot.paramMap.get('uuid');\n    this.userTransactionsService.getTransactionByUuid(this.paymentUuid).subscribe(res => {\n      this.transactions = res.response;\n    })\n  }\n  backToPaymentsList() {\n    this._location.back();\n  }\n\n  printComponent(cmpName) {\n    let printContents = document.getElementById(cmpName).innerHTML;\n    let originalContents = document.body.innerHTML;\n    document.body.innerHTML = printContents;\n    window.print();\n    document.body.innerHTML = originalContents;\n  }\n\n}\n","<div id=\"component1\">\n    <div class=\"receipt mat-elevation-z1\">\n        <table style=\"text-align: center;border-bottom: 1px dashed #909497;\">\n            <tr>\n                <td>\n                    <img src=\"../../../../../../../assets/plato-logo.png\" alt=\"plato-logo\" class=\"plato-img\">\n                </td>\n                <td>\n                    <h2>\n                        PLATO DIGI EDUCATIONS PVT LTD\n                    </h2>\n                    <p class=\"address\">H.No. 6-1-102, Padmarao Nagar, Musheerabad, Secunderabad, Telanagana-500025</p>\n                    <!-- <p class=\"address\">Mobile: +91 80999 99956; Website: www.platoonline.com</p> -->\n                </td>\n            </tr>\n        </table>\n        <h3 style=\"text-align: center;\">Pay&nbsp;Receipt</h3>\n        <table style=\"text-align: left;margin-left: 15px;\">\n            <tr style=\"height:40px;\">\n                <th>Transaction&nbsp;Id</th>\n                <th>:&nbsp;&nbsp;</th>\n                <td style=\"width: 350px;\">\n                    <span>{{transactions?.transactionId}}</span>\n                </td>\n                <th>Date&nbsp;Of&nbsp;Payment</th>\n                <th>:&nbsp;&nbsp;</th>\n                <td style=\"width: 250px;\">\n                    <span>{{transactions?.dateOfPayment | date:\"mediumDate\"}}</span>\n                </td>\n            </tr>\n            <tr style=\"height:40px;\">\n                <th>User&nbsp;Name</th>\n                <th>:&nbsp;&nbsp;</th>\n                <td style=\"width: 350px;\">\n                    <span>{{ transactions?.userId ?transactions?.userId.name:'---' }}</span>\n                </td>\n                <th>Mobile&nbsp;Number</th>\n                <th>:&nbsp;&nbsp;</th>\n                <td style=\"width: 250px;\">\n                    <span>{{transactions?.userId?.mobile}}</span>\n                </td>\n            </tr>\n            <tr style=\"height:40px;\">\n                <th>Subscription</th>\n                <th>:&nbsp;&nbsp;</th>\n                <td style=\"width: 350px;\">\n                    <span>{{transactions?.subscriptionId?.title}}</span>\n                </td>\n                <th>Mode&nbsp;Of&nbsp;Payment</th>\n                <th>:&nbsp;&nbsp;</th>\n                <td style=\"width: 250px;\">\n                    <span>{{transactions?.modeOfPayment}}</span>\n                </td>\n            </tr>\n            <tr style=\"height:40px;\" *ngIf=\"transactions?.modeOfPayment === 'cheque'\">\n                <th>Cheque&nbsp;Number</th>\n                <th>:&nbsp;&nbsp;</th>\n                <td style=\"width: 350px;\">\n                    <span>{{ transactions?.chequeNumber }}</span>&nbsp;\n                </td>\n                <th>Cheque&nbsp;Date</th>\n                <th>:&nbsp;&nbsp;</th>\n                <td style=\"width: 250px;\">\n                    <span *ngIf=\"transactions?.chequeDate\">{{ transactions?.chequeDate | date:\"mediumDate\" }}</span>&nbsp;\n                </td>\n            </tr>\n        </table>\n        <table border=\"1\" cellpadding=\"10\"\n            style=\"border-collapse: collapse;text-align: center;width: 96%;margin-left: 15px;\">\n            <tr>\n                <th>Actual&nbsp;Amount</th>\n                <th>Coupon&nbsp;Code</th>\n                <th>Discount&nbsp;Amount</th>\n                <th>Paid&nbsp;Amount</th>\n            </tr>\n            <tr>\n                <td>\n                    <span>{{transactions?.actualPrice.toFixed(2)}}</span>\n                </td>\n                <td>\n                    <span>{{transactions?.couponId == null ?'---':transactions?.couponId.code }}</span>&nbsp;\n                    <!-- <span *ngIf=\"transactions?.couponId != null\">\n                        <span *ngIf=\"transactions?.couponId.discountType ==='flat'\">[&nbsp;{{transactions?.couponId.discount\n                            | currency:'INR'}}&nbsp;]</span>\n                        <span\n                            *ngIf=\"transactions?.couponId.discountType ==='percentage'\">[&nbsp;{{transactions?.couponId.discount}}%&nbsp;]</span>\n                    </span> -->\n                </td>\n                <td>\n                    <span>{{transactions?.discountPrice.toFixed(2)}}</span>\n                </td>\n                <td>\n                    <span>{{transactions?.finalPaidAmount.toFixed(2)  }}</span>\n                </td>\n            </tr>\n        </table><br>\n        <h5 style=\"margin-left: 80%;\">Cashier&nbsp;/&nbsp;Manager</h5>\n        <div style=\"border-top: 1px dashed #909497;width: 95%;margin-left: 15px;\">\n            <p style=\"font-weight: bold;\">\n                Note : We are requesting you to keep this receipt with you for future clarifications in respect of fee paid\n                by you. Fee once paid will not be refunded or transferred.\n            </p>\n        </div>\n    </div>\n</div>\n<button mat-stroked-button color=\"warn\" class=\"paymentsButton\" (click)=\"backToPaymentsList()\">Back</button>&nbsp;\n<button  mat-raised-button color=\"primary\" (click)=\"printComponent('component1')\" class=\"primary printBtn\">Print</button>&nbsp;\n"]}
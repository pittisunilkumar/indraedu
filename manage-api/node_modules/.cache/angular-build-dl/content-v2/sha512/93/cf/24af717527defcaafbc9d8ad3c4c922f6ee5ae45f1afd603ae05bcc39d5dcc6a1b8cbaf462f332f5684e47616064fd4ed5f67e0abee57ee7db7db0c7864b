{"version":3,"sources":["webpack:///apps/manage-client/src/app/modules/manage/modules/complaints/components/complaints-list/complaints-list.component.ts","webpack:///apps/manage-client/src/app/modules/manage/modules/complaints/components/complaints-list/complaints-list.component.html","webpack:///apps/manage-client/src/app/modules/manage/modules/complaints/components/send-reply/send-reply.component.html","webpack:///apps/manage-client/src/app/modules/manage/modules/complaints/components/send-reply/send-reply.component.ts","webpack:///apps/manage-client/src/app/modules/manage/modules/complaints/components/view-ticket/view-ticket.component.html","webpack:///apps/manage-client/src/app/modules/manage/modules/complaints/components/view-ticket/view-ticket.component.ts","webpack:///apps/manage-client/src/app/modules/manage/modules/complaints/components/index.ts","webpack:///apps/manage-client/src/app/modules/manage/modules/complaints/complaints-routing.module.ts","webpack:///apps/manage-client/src/app/modules/manage/modules/complaints/complaints.module.ts"],"names":["ComplaintsListComponent","departmentsService","helperService","router","dialog","totalLength","sub","displayedColumns","currentUser","JSON","parse","localStorage","getItem","getTickets","removeItem","payload","departmentId","department","map","res","_id","getAllTickets","subscribe","tickets","filterdTickets","response","console","log","dataSource","paginator","sort","comp","filterValue","target","value","toLowerCase","trim","filter","tic","ticketId","includes","message","priority","title","dep","ticket","status","uuid","modifiedOn","Date","modifiedBy","name","updateTicket","toString","navigate","setItem","dialogRef","open","data","height","width","filterComplaints","selector","templateUrl","styleUrls","SendReplyComponent","awsS3","notification","reply_image","ticketData","event","option","fileName","uploadFile","then","result","fileUrl","Location","reply","reply_message","nativeElement","length","createdOn","sendRepay","showNotification","type","SUCCESS","statusCode","statusText","upload","SendReplay","ViewTicketComponent","getTickeData","ticketUUid","getTicketByUUid","backToTickets","sendReplay","components","ComplaintsRoutes","path","children","component","outlet","pathMatch","redirectTo","ComplaintsModule","forChild","declarations","imports"],"mappings":"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","file":"apps-manage-client-src-app-modules-manage-modules-complaints-complaints-module-es5.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { DepartmentsService, HelperService } from '@application/ui';\nimport { Subscription } from 'rxjs';\nimport { SendReplyComponent } from '../send-reply/send-reply.component';\n\n@Component({\n  selector: 'application-complaints-list',\n  templateUrl: './complaints-list.component.html',\n  styleUrls: ['./complaints-list.component.less']\n})\nexport class ComplaintsListComponent implements OnInit {\n  totalLength = [10, 25, 50, 100];\n  total: number;\n  errors: string[];\n  sub = new Subscription();\n  @ViewChild(MatSort, { static: true }) sort?: MatSort;\n  @ViewChild(MatPaginator, { static: true }) paginator?: MatPaginator;\n  displayedColumns: string[] = [\n    'sno',\n    'ticketId',\n    'course',\n    'department',\n    'mobile',\n    'message',\n    'type',\n    'priority',\n    'createdOn',\n    'lastUpdated',\n    'status',\n    'actions'\n  ];\n  dataSource: any;\n  currentUser: any;\n  tickets: any;\n  filterdTickets: any;\n  constructor(\n    private departmentsService: DepartmentsService,\n    public helperService: HelperService,\n    private router:Router,\n    public dialog: MatDialog,\n  ) { }\n\n  ngOnInit(): void {\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    this.getTickets();\n    localStorage.removeItem('ticket')\n  }\n  getTickets() {\n    let payload = {\n      departmentId: this.currentUser.department.map(res => res._id)\n    }\n    this.departmentsService.getAllTickets(payload).subscribe(res => {\n      this.tickets = this.filterdTickets = res?.response;\n      console.log('this.filterdTickets ',this.filterdTickets );\n      \n      this.dataSource = new MatTableDataSource(this.filterdTickets);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    })\n  }\n  filterComplaints(comp: Event) {\n    const filterValue = (comp.target as HTMLInputElement).value.toLowerCase().trim();;\n    if (filterValue) {\n      this.dataSource = this.tickets.filter((tic) => {\n        return (\n          tic?.ticketId.toLowerCase().includes(filterValue) ||\n          tic?.message.toLowerCase().includes(filterValue) ||\n          tic?.priority.toLowerCase().includes(filterValue) ||\n          tic?.department?.title.toLowerCase().includes(filterValue)\n        )\n      });\n    } else {\n      this.dataSource = this.tickets;\n    }\n    this.dataSource = new MatTableDataSource(this.dataSource);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  getDepartmentTickets(dep) {\n    let payload = {\n      departmentId: [dep._id]\n    }\n    this.departmentsService.getAllTickets(payload).subscribe(res => {\n      this.tickets = this.filterdTickets = res?.response;\n      this.dataSource = new MatTableDataSource(this.filterdTickets);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    })\n  }\n\n  updateTicketStatus(ticket, status) {\n    let payload = {\n      uuid: ticket.uuid,\n      status: status,\n      modifiedOn: new Date(),\n      modifiedBy: {\n        uuid: localStorage.getItem('currentUserUuid'),\n        name: localStorage.getItem('currentUserName'),\n      },\n    }\n    this.departmentsService.updateTicket(payload).subscribe(res => {\n      if (res) {\n        this.getTickets();\n      }\n    })\n\n  }\n\n  filterTicketsByStatus(ticket){\n    const filterValue = ticket.value;\n    if (filterValue) {\n      this.dataSource = this.tickets.filter((tic) => {\n        return (\n          tic?.status.toString().toLowerCase().includes(filterValue)\n        )\n      });\n    } else {\n      this.dataSource = this.tickets;\n    }\n    this.dataSource = new MatTableDataSource(this.dataSource);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  viewTicket(ticket){\n       this.router.navigate(['manage/complaints/ticket/view']);\n      //  localStorage.setItem('ticket',JSON.stringify(ticket));\n       localStorage.setItem('ticketUUid',ticket.uuid);\n\n  }\n\n  sendReplay(ticket){\n    const dialogRef = this.dialog.open(SendReplyComponent, {\n      data: { payload: ticket },\n      height: '96%',\n      width: '80%'\n    });\n  }\n\n}\n","<div class=\"tag-list\">\n    <div class=\"page-title\">\n        <div class=\"title\">\n            <h2>Tickets</h2>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-sm-8\">\n            <mat-form-field class=\"example-full-width\">\n                <mat-label translate>COMMON.SEARCH</mat-label>\n                <input type=\"search\" matInput name=\"search\"\n                    [placeholder]=\"'PAGE.ORGANIZATION_LIST.SEARCH' | translate\"\n                    (keyup)=\"filterComplaints($event)\" />\n            </mat-form-field>\n        </div>\n        <div class=\"col-sm-2\">\n            <mat-form-field class=\"example-full-width\">\n                <mat-label>Select&nbsp;Department</mat-label>\n                <mat-select>\n                    <mat-option *ngFor=\"let dep of currentUser?.department\" [value]=\"dep\"\n                        (click)=\"getDepartmentTickets(dep)\">\n                        {{dep.title}}</mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"col-sm-2\">\n            <mat-form-field class=\"example-full-width\">\n                <mat-label>Select&nbsp;Status</mat-label>\n                <mat-select>\n                    <mat-option *ngFor=\"let tic of helperService?.TicketStatus\" [value]=\"tic\"\n                    (click)=\"filterTicketsByStatus(tic)\">\n                        {{tic.title}}</mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    </div>\n    <!-- <table style=\"width: 100%;\">\n        <tr>\n            <td style=\"width: 60%;\">\n                <div class=\"search full-width\">\n                    <mat-form-field class=\"example-full-width\">\n                        <mat-label translate>COMMON.SEARCH</mat-label>\n                        <input type=\"search\" matInput name=\"search\"\n                            [placeholder]=\"'PAGE.ORGANIZATION_LIST.SEARCH' | translate\"\n                            (keyup)=\"filterComplaints($event)\" />\n                    </mat-form-field>\n                </div>\n            </td>\n            <td style=\"width: 20%;\">\n                <div class=\"form-element child\">\n                    <mat-form-field class=\"example-full-width\" style=\"margin-top: -3px;\">\n                        <mat-label>Select&nbsp;Department</mat-label>\n                        <mat-select>\n                            <mat-option *ngFor=\"let dep of currentUser?.department\" [value]=\"dep\"\n                                (click)=\"getDepartmentTickets(dep)\">\n                                {{dep.title}}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </td>\n            <td style=\"width: 20%;\">\n                <div class=\"form-element child\">\n                    <mat-form-field class=\"example-full-width\" style=\"margin-top: -3px;\">\n                        <mat-label>Select&nbsp;Status</mat-label>\n                        <mat-select>\n                            <mat-option *ngFor=\"let tic of helperService?.TicketStatus\" [value]=\"tic\"\n                            (click)=\"filterTicketsByStatus(tic)\">\n                                {{tic.title}}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </td>\n        </tr>\n    </table> -->\n\n\n    <div class=\"mat-elevation-z1\">\n        <table mat-table [dataSource]=\"dataSource\">\n            <ng-container matColumnDef=\"sno\">\n                <th mat-header-cell *matHeaderCellDef style=\"width: 20px;\">\n                    S.No\n                </th>\n                <td mat-cell *matCellDef=\"let row\">{{dataSource.filteredData.indexOf(row)+1}}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"ticketId\">\n                <th mat-header-cell *matHeaderCellDef>\n                    Ticket&nbsp;Id\n                </th>\n                <td mat-cell *matCellDef=\"let row\">{{ row.ticketId }}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"course\">\n                <th mat-header-cell *matHeaderCellDef>\n                   Course\n                </th>\n                <td mat-cell *matCellDef=\"let row\">{{ row?.courses?.title }}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"department\">\n                <th mat-header-cell *matHeaderCellDef>\n                    Department\n                </th>\n                <td mat-cell *matCellDef=\"let row\">{{ row.department?.title }}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"mobile\">\n                <th mat-header-cell *matHeaderCellDef>\n                    Mobile\n                </th>\n                <td mat-cell *matCellDef=\"let row\">{{ row?.user?.mobile }}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"message\">\n                <th mat-header-cell *matHeaderCellDef>\n                    Message\n                </th>\n                <td mat-cell *matCellDef=\"let row\" >{{ row.message| slice:0:30}}...</td>\n            </ng-container>\n            <ng-container matColumnDef=\"type\">\n                <th mat-header-cell *matHeaderCellDef>\n                    Type\n                </th>\n                <td mat-cell *matCellDef=\"let row\">{{helperService?.TicketType[row.type-1]?.title }}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"priority\">\n                <th mat-header-cell *matHeaderCellDef>\n                    Priority\n                </th>\n                <td mat-cell *matCellDef=\"let row\">{{ row.priority }}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"createdOn\">\n                <th mat-header-cell *matHeaderCellDef>\n                    CreatedOn\n                </th>\n                <td mat-cell *matCellDef=\"let row\">{{ row.createdOn| date:\"mediumDate\" }}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"lastUpdated\">\n                <th mat-header-cell *matHeaderCellDef>\n                    LastUpdated\n                </th>\n                <td mat-cell *matCellDef=\"let row\">{{ row.lastUpdated | date:\"mediumDate\"}}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"status\">\n                <th mat-header-cell *matHeaderCellDef>\n                    Status\n                </th>\n                <td mat-cell *matCellDef=\"let row\">\n                    <strong [style.color]=\"helperService?.TicketStatus[row.status-1]?.color\">{{helperService?.TicketStatus[row.status-1]?.title }}</strong>\n                </td>\n            </ng-container>\n            <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef>\n                    Actions\n                </th>\n                <td mat-cell *matCellDef=\"let row\">\n                    <!-- <mat-form-field style=\"border:none\">\n                            <mat-select >\n                              <mat-option *ngFor=\"let tic of helperService?.TicketStatus\" [value]=\"tic\" (click)=\"updateTicketStatus(tic)\">\n                                {{tic.title}}</mat-option>\n                            </mat-select>\n                          </mat-form-field> -->\n                    <!-- <mat-icon mat-icon-button color=\"primary\" class=\"view\" matTooltip=\"View Ticket\" (click)=\"viewTicket(row)\">visibility</mat-icon>\n                    <mat-icon class=\"view\" [matMenuTriggerFor]=\"menu\">more_vert</mat-icon> -->\n\n                    <i class=\"material-icons\" style=\"color: #102f95;\" matTooltip=\"View Ticket\" (click)=\"viewTicket(row)\">visibility</i>\n                    <i class=\"material-icons\" style=\"color: #951093;\" matTooltip=\"Reply\" (click)=\"sendReplay(row)\" *ngIf=\"row.status != 4 && row.status != 5\">reply</i>\n                    <i class=\"material-icons\"  *ngIf=\"row.status == 4 || row.status == 5\"  style=\"cursor: not-allowed;background-color:whitesmoke\">reply</i>\n                    <i class=\"material-icons\" *ngIf=\"row.status == 4 || row.status == 5\" style=\"cursor: not-allowed;background-color:whitesmoke\">more_vert</i>\n                    <i class=\"material-icons\" [matMenuTriggerFor]=\"menu\" *ngIf=\"row.status != 4 && row.status != 5\" matTooltip=\"Update Status\">more_vert</i>\n                    <mat-menu #menu=\"matMenu\">\n                        <button mat-menu-item *ngFor=\"let tic of helperService?.TicketStatus\"\n                            (click)=\"updateTicketStatus(row,tic.value)\">{{tic.title}}\n                        </button>\n                    </mat-menu>\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n            <tr class=\"mat-row\" *matNoDataRow style=\"text-align: center;\">\n                <td class=\"mat-cell\" colspan=\"11\">\n                    <h3 translate>COMMON.NO_DATA</h3>\n                </td>\n            </tr>\n        </table>\n\n        <mat-paginator [showFirstLastButtons]=\"true\" [pageSizeOptions]=\"totalLength\"></mat-paginator>\n\n    </div>\n\n</div>","<div class=\"container\">\n    <h2 style=\"text-align: center;\">Reply&nbsp;To&nbsp;<span>{{ticketData?.ticketId}}</span></h2>\n    <div class=\"row\">\n        <div class=\"col-sm-12\" id=\"replay\">\n            <mat-form-field appearance=\"outline\">\n                <textarea matInput placeholder=\"send message..\" #input></textarea>\n            </mat-form-field>\n            <div>\n                <button type=\"button\" class=\"savebutton\" mat-raised-button (click)=\"filePicker.click()\">\n                    <mat-icon>image</mat-icon>Reply Image\n                </button>&nbsp;\n                <span *ngFor=\"let name of fileName;let i = index\">{{i+1}} .&nbsp;{{name.name}}<br> </span>\n                <input type=\"file\" #filePicker (change)=\"upload($event.target.files)\" multiple>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-sm-4\" *ngFor=\"let img of reply_image\">\n                    <img [src]=\"img\" *ngIf=\"img\" style=\"width: 100%;height: 250px;\"><br><br>\n                </div>\n            </div>\n        </div>\n        <div mat-dialog-actions align=\"end\">\n            <button class=\"btn btn-danger savebutton\" mat-dialog-close translate>Cancel</button>&nbsp;\n            <button type=\"button\" [disabled]=\"!message?.nativeElement?.value && reply_image?.length == 0\"\n                class=\"btn btn-primary savebutton\" (click)=\"SendReplay()\" mat-dialog-close>Send</button>\n        </div>\n    </div>","import { Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { AWSS3Service, DepartmentsService, HelperService, NotificationService, NotificationType } from '@application/ui';\n\n@Component({\n  selector: 'application-send-reply',\n  templateUrl: './send-reply.component.html',\n  styleUrls: ['./send-reply.component.less']\n})\nexport class SendReplyComponent implements OnInit {\n  fileName: any;\n  reply_image = [];\n  @ViewChild('input') message: ElementRef;\n  ticketData: any;\n\n  constructor(\n    public helperService: HelperService,\n    private router: Router,\n    private awsS3: AWSS3Service,\n    private departmentsService: DepartmentsService,\n    private notification: NotificationService,\n    @Inject(MAT_DIALOG_DATA) private data: { payload: any },\n\n  ) { }\n\n  ngOnInit(): void {\n    this.ticketData = this.data.payload;\n  }\n\n  async upload(\n    event,\n    option?: {\n      name: string;\n      value: number;\n      fileUrl: string;\n      upload: boolean;\n    }\n  ) {\n    this.fileName = event;\n    await this.awsS3.uploadFile(event, 'uploads').then((result) => {\n      if (option) {\n        option.fileUrl = result[0]?.Location;\n      } else {\n        // this.reply_image = result[0]?.Location\n        this.reply_image = result.map((res) => res.Location);\n        console.log('student_image_path', this.reply_image);\n      }\n    });\n    return false;\n  }\n\n  SendReplay() {\n    let payload = {\n      uuid: this.ticketData.uuid,\n      reply:{\n        reply_message: this.message.nativeElement.value\n        ? this.message.nativeElement.value\n        : '',\n        reply_image: this.reply_image.length ? this.reply_image : [],\n        createdOn:new Date()\n      },\n      modifiedOn: new Date(),\n      modifiedBy: {\n        uuid: localStorage.getItem('currentUserUuid'),\n        name: localStorage.getItem('currentUserName'),\n      },\n    };\n    this.departmentsService.sendRepay(payload).subscribe(res => {\n      if (res) {\n        this.notification.showNotification({\n          type: NotificationType.SUCCESS,\n          payload: {\n            message: 'Reply sent successfully',\n            statusCode: 200,\n            statusText: 'Successfully',\n            status: 201,\n          },\n        });\n      }\n    })\n  }\n\n}\n","<mat-card>\n    <h2> <b (click)=\"backToTickets()\">{{ticketData?.ticketId}}&nbsp;/&nbsp;</b>Ticket Details</h2>\n    <br><br>\n    <div class=\"row\">\n        <div class=\"col-sm-12\" id=\"replay\">\n            <div class=\"row\">\n                <div class=\"col-sm-12\" *ngIf=\"ticketData?.message\">\n                    <span><b>Message</b></span>\n                    <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n                    <span>{{ticketData?.message}}</span>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-sm-4\" *ngIf=\"ticketData?.ticketId\">\n                    <span><b> Ticket Id</b></span>\n                    <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n                    <span>{{ticketData?.ticketId}}</span>\n                </div>\n                <div class=\"col-sm-4\" *ngIf=\"ticketData?.user\">\n                    <span><b>User Name</b></span>\n                    <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n                    <span>{{ticketData?.user?.name}}</span>\n                </div>\n                <div class=\"col-sm-4\" *ngIf=\"ticketData?.user\">\n                    <span><b>User Mobile</b></span>\n                    <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n                    <span>{{ticketData?.user?.mobile}}</span>\n                </div>\n                <div class=\"col-sm-4\" *ngIf=\"ticketData?.department\">\n                    <span><b>Department</b></span>\n                    <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n                    <span>{{ticketData?.department?.title}}</span>\n                </div>\n\n                <div class=\"col-sm-4\" *ngIf=\"ticketData?.type\">\n                    <span><b>Type</b></span>\n                    <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n                    <span>{{helperService?.TicketType[ticketData?.type-1]?.title }}</span>\n                </div>\n\n                <div class=\"col-sm-4\" *ngIf=\"ticketData?.priority\">\n                    <span><b>Priority</b></span>\n                    <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n                    <span>{{ticketData?.priority}}</span>\n                </div>\n                <div class=\"col-sm-4\" *ngIf=\"ticketData?.createdOn\">\n                    <span><b>Created On</b></span>\n                    <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n                    <span>{{ticketData?.createdOn| date:\"mediumDate\"}}</span>\n                </div>\n                <div class=\"col-sm-4\" *ngIf=\"ticketData?.lastUpdated\">\n                    <span><b>Last Updated</b></span>\n                    <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n                    <span>{{ticketData?.lastUpdated| date:\"mediumDate\"}}</span>\n                </div>\n\n                <div class=\"col-sm-4\" *ngIf=\"ticketData?.status\">\n                    <span><b>Status</b></span>\n                    <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n                    <strong\n                        [style.color]=\"helperService?.TicketStatus[ticketData?.status-1]?.color\">{{helperService?.TicketStatus[ticketData?.status-1]?.title\n                        }}</strong>\n\n                    <!-- <span>{{helperService?.TicketStatus[ticketData?.status-1]?.title}}</span> -->\n                </div>\n                <div class=\"col-sm-4\" *ngIf=\"ticketData?.closedDateTime\">\n                    <span><b>Closed &nbsp;On</b></span>\n                    <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n                    <span>{{ticketData?.closedDateTime | date:\"mediumDate\"}}</span>\n                </div>\n                <div class=\"col-sm-4\" *ngIf=\"ticketData?.modifiedBy\">\n                    <span><b>Modified&nbsp;By</b></span>\n                    <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n                    <span>{{ticketData?.modifiedBy?.name}}</span>\n                </div>\n                <div class=\"col-sm-4\" *ngIf=\"ticketData?.modifiedOn\">\n                    <span><b>Modified&nbsp;On</b></span>\n                    <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n                    <span>{{ticketData?.modifiedOn | date:\"mediumDate\"}}</span>\n                </div>\n            </div>\n            <div class=\"row\" *ngIf=\"ticketData?.image.length\">\n                <div class=\"col-sm-4\" *ngFor=\"let img of ticketData?.image;let i=index\">\n                    <span><b>Image&nbsp;File&nbsp;{{i+1}}</b></span>\n                    <br><br>\n                    <img [src]=\"img\" alt=\"img\"  style=\"width: 100%;height: 300px;\">\n                </div>\n            </div>\n\n            <div class=\"row\" *ngIf=\"ticketData?.audio.length\">\n                <div class=\"col-sm-4\" *ngFor=\"let aud of ticketData?.audio;let i=index\">\n                    <span><b>Audio&nbsp;File&nbsp;{{i+1}}</b></span><br><br>\n                    <audio controls>\n                        <source [src]=\"aud\" type=\"audio/ogg\">\n                        <source [src]=\"aud\" type=\"audio/mpeg\">\n                    </audio>\n                </div>\n            </div>\n            <br>\n            <div class=\"row\" *ngIf=\"ticketData?.reply.length\">\n                <hr>\n                <h2 style=\"text-align: center;\">Given Reply's</h2>\n                <div class=\"col-sm-12\" *ngFor=\"let rly of ticketData?.reply;let j = index\">\n                    <span><b>Reply Message&nbsp;{{j+1}}</b></span>\n                    <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n                    <span>{{rly?.reply_message}}</span><br>\n                    <span><b>Created on</b></span>\n                    <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n                    <span>{{rly?.createdOn | date:'medium' }}</span><br>\n                    <div class=\"row\">\n                        <div class=\"col-sm-4\" *ngFor=\"let img of rly?.reply_image;let i=index\">\n                            <span><b>Replay&nbsp;Image&nbsp;File&nbsp;{{i+1}}</b></span>\n                            <br><br>\n                            <img [src]=\"img\" alt=\"img\" style=\"width: 100%;height: 250px;\">\n                        </div>\n                    </div>\n                    <hr>\n                </div>\n            </div>\n\n        </div>\n        <!-- <div class=\"col-sm-4\" id=\"replay\" *ngIf=\"ticketData?.status !=4\">\n            <h2 style=\"text-align: center;\">Reply Here</h2>\n            <mat-form-field appearance=\"outline\">\n                <textarea matInput placeholder=\"send message..\" #input></textarea>\n            </mat-form-field>\n        \n            <div >\n                <button type=\"button\" class=\"savebutton\" mat-raised-button (click)=\"filePicker.click()\">\n                  <mat-icon>image</mat-icon>Reply Image\n                </button >&nbsp;\n                <span *ngFor=\"let name of fileName;let i = index\">{{i+1}} .&nbsp;{{name.name}}<br> </span>\n                <input type=\"file\"  #filePicker (change)=\"upload($event.target.files)\" multiple>\n                </div>\n                <div *ngFor=\"let img of reply_image\">\n                <img [src]=\"img\" *ngIf=\"img\" style=\"width: 100%;height: 250px;\" ><br><br>\n              </div>\n              <br>\n\n              <button type=\"button\" mat-raised-button color=\"warn\"  class=\"savebutton\" (click)=\"updateCloseStatus()\">Close Ticket</button>\n        </div> -->\n    </div>\n\n    <br><br>\n    <div class=\"row\">\n        <div class=\"col-sm-5\"></div>\n        <div class=\"col-sm-1\">\n            <button mat-raised-button color=\"primary\" class=\"paymentsButton\" (click)=\"sendReplay()\">Reply</button>\n        </div>\n        <div class=\"col-sm-1\">\n            <button mat-raised-button color=\"warn\" class=\"paymentsButton\" (click)=\"backToTickets()\">Back</button>\n        </div>\n        <div class=\"col-sm-5\"></div>\n    </div>\n\n</mat-card>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport {\n  AWSS3Service,\n  DepartmentsService,\n  HelperService,\n} from '@application/ui';\nimport { SendReplyComponent } from '../send-reply/send-reply.component';\n\n@Component({\n  selector: 'application-view-ticket',\n  templateUrl: './view-ticket.component.html',\n  styleUrls: ['./view-ticket.component.less'],\n})\nexport class ViewTicketComponent implements OnInit {\n  ticketData: any;\n  fileName: any;\n  ticketUUid:string;\n  reply_image = [];\n  @ViewChild('input') message: ElementRef;\n\n  constructor(\n    public helperService: HelperService,\n    private router: Router,\n    private awsS3: AWSS3Service,\n    private departmentsService: DepartmentsService,\n    public dialog: MatDialog,\n  ) {}\n\n  ngOnInit(): void {\n    // this.ticketData = JSON.parse(localStorage.getItem('ticket'));\n    // console.log('this.ticketData', this.ticketData);\n    this.getTickeData();\n  }\n  getTickeData(){\n    this.ticketUUid = localStorage.getItem('ticketUUid');\n    this.departmentsService.getTicketByUUid(this.ticketUUid).subscribe(res=>{\n      this.ticketData = res.response;\n    console.log('this.ticketData', this.ticketData);\n    })\n  }\n\n  async upload(\n    event,\n    option?: {\n      name: string;\n      value: number;\n      fileUrl: string;\n      upload: boolean;\n    }\n  ) {\n    this.fileName = event;\n    console.log('event', event);\n\n    await this.awsS3.uploadFile(event, 'uploads').then((result) => {\n      console.log('result', result);\n\n      if (option) {\n        option.fileUrl = result[0]?.Location;\n      } else {\n        // this.reply_image = result[0]?.Location\n        this.reply_image = result.map((res) => res.Location);\n        console.log('student_image_path', this.reply_image);\n      }\n    });\n    return false;\n  }\n\n  updateCloseStatus() {\n    let payload = {\n      uuid: this.ticketData.uuid,\n      status: 4,\n      reply_message: this.message.nativeElement.value\n        ? this.message.nativeElement.value\n        : '',\n      reply_image: this.reply_image.length ? this.reply_image : [],\n      modifiedOn: new Date(),\n      modifiedBy: {\n        uuid: localStorage.getItem('currentUserUuid'),\n        name: localStorage.getItem('currentUserName'),\n      },\n    };\n    console.log('payload', payload);\n\n    this.departmentsService.updateTicket(payload).subscribe(res => {\n      if (res) {\n        // this.getTickets();\n        this.router.navigate(['manage/complaints/list']);\n      }\n    })\n  }\n\n  backToTickets() {\n    this.router.navigate(['manage/complaints/list']);\n  }\n  sendReplay(){\n    const dialogRef = this.dialog.open(SendReplyComponent, {\n      data: { payload: this.ticketData },\n      height: '96%',\n      width: '80%'\n    });\n  }\n}\n","import { ComplaintsListComponent } from './complaints-list/complaints-list.component';\nimport { SendReplyComponent } from './send-reply/send-reply.component';\nimport { ViewTicketComponent } from './view-ticket/view-ticket.component';\n\nexport const components = [\n    ComplaintsListComponent,\n    ViewTicketComponent,\n    SendReplyComponent\n];\n\nexport * from './complaints-list/complaints-list.component';\nexport * from './view-ticket/view-ticket.component';\nexport * from './view-ticket/view-ticket.component';\n\n\n\n\n\n","import { Routes } from '@angular/router';\nimport { CreateGuard, EditGuard } from '@application/ui';\nimport { ManageAsideMenuComponent } from '../../components';\nimport * as fromComponents from './components';\n\nexport const ComplaintsRoutes: Routes = [\n  {\n    path: '',\n    children: [\n      // {\n      //   path: 'create',\n      //   canActivate:[CreateGuard],\n      //   component: fromComponents.CreateDepartmentComponent,\n      //   data: {\n      //     mode: 'add',\n      //   },\n      // },\n      // {\n      //   path: ':uuid/edit',\n      //   canActivate:[EditGuard],\n      //   component: fromComponents.CreateDepartmentComponent,\n      //   data: {\n      //     mode: 'edit',\n      //   },\n      // },\n      {\n        path: 'list',\n        component: fromComponents.ComplaintsListComponent,\n      },\n      {\n        path: 'ticket/view',\n        component: fromComponents.ViewTicketComponent,\n      },\n     \n     \n      {\n        path: '',\n        outlet: 'aside',\n        component: ManageAsideMenuComponent,\n      },\n      {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: '/manage/complaints/list',\n      },\n    ],\n  },\n];\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport * as fromComponents from './components';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { UiModule } from '@application/ui';\nimport { ComplaintsRoutes } from './complaints-routing.module';\n\n\n@NgModule({\n  declarations: [ ...fromComponents.components],\n  imports: [\n    CommonModule,\n    TranslateModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(ComplaintsRoutes),\n    UiModule,\n  ]\n})\nexport class ComplaintsModule { }\n"]}
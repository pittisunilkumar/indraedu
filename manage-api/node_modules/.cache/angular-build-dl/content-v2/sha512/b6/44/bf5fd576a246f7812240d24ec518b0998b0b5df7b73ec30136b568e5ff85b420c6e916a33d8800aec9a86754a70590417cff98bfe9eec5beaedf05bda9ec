{"version":3,"sources":["webpack:///apps/manage-client/src/app/modules/manage/modules/deparment/components/create-department/create-department.component.html","webpack:///apps/manage-client/src/app/modules/manage/modules/deparment/components/create-department/create-department.component.ts","webpack:///apps/manage-client/src/app/modules/manage/modules/deparment/components/index.ts","webpack:///apps/manage-client/src/app/modules/manage/modules/deparment/deparment.module.ts","webpack:///apps/manage-client/src/app/modules/manage/modules/deparment/components/department-list/department-list.component.ts","webpack:///apps/manage-client/src/app/modules/manage/modules/deparment/components/department-list/department-list.component.html","webpack:///apps/manage-client/src/app/modules/manage/modules/deparment/deparment-routing.module.ts"],"names":["CreateDepartmentComponent","formBuilder","helper","route","departmentsService","router","employeeService","mode","snapshot","data","insertDepartmentArray","deleteDepartmentArray","createDepartmentForm","buildForm","departmentsUuid","paramMap","get","getDepartmentByUuid","toPromise","department","response","hod","map","hres","_id","getEmployees","group","title","required","employee","flags","active","getAllEmployees","subscribe","res","employeeList","event","empId","filter","push","console","log","value","payload","uuid","createdOn","Date","createdBy","localStorage","getItem","name","addDepartment","navigate","e","d","modifiedOn","modifiedBy","editDepartmentByUuid","reset","submit","selector","templateUrl","styleUrls","components","DeparmentModule","forChild","declarations","imports","DepartmentListComponent","dialog","totalLength","sub","displayedColumns","today","getAllDepartments","departments","filteredDepartments","paginator","sort","loadPermissions","loadData","dialogRef","open","afterClosed","result","add","deleteEventByUuid","err","errors","error","filterValue","target","toLowerCase","trim","tag","includes","modules","enumtoArray","subM","role","roleData","JSON","parse","rolePermissions","module","type","DEPARTMENT","subModules","ADD","isAddVisible","DELETE","isDeleteVisible","EDIT","isEditVisible","filterDepartments","DepartmentRoutes","path","children","canActivate","component","outlet","pathMatch","redirectTo"],"mappings":"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","file":"apps-manage-client-src-app-modules-manage-modules-deparment-deparment-module-es5.js","sourcesContent":["<div class=\"create-tags\">\n    <h2 *ngIf=\"mode === 'add'\">\n      <span translate >Create&nbsp;Event</span>\n    </h2>\n    <h2 *ngIf=\"mode === 'edit'\">\n            <span translate >Edit&nbsp;Event</span>\n    </h2>\n    <mat-card>\n        <form [formGroup]=\"createDepartmentForm\">\n\n        <div class=\"flex-wrap\">\n                <div class=\"form-element child\">\n                    <mat-form-field class=\"example-form-field\">\n                        <mat-label>Department Title&nbsp;<sup>*</sup></mat-label>\n                        <input matInput name=\"title\" formControlName=\"title\" />\n                    </mat-form-field>\n                </div>\n                <div class=\"form-element child\">\n                    <mat-form-field class=\"example-full-width\">\n                        <mat-label>Employees</mat-label>\n                        <mat-select formControlName=\"employee\"[compareWith]=\"helper.compareFn\" multiple >\n                          <mat-option *ngFor=\"let sub of employeeList\" [value]=\"sub\" >\n                            {{sub.name}}</mat-option>\n                        </mat-select>\n                      </mat-form-field>\n                </div>\n                <div class=\"form-element child\">\n                    <mat-form-field class=\"example-full-width\">\n                        <mat-label>Head&nbsp;Of&nbsp;Department</mat-label>\n                        <mat-select formControlName=\"hod\"[compareWith]=\"helper.compareFn\" multiple >\n                          <mat-option *ngFor=\"let sub of createDepartmentForm?.value?.employee\" [value]=\"sub\"#EVENT\n                          (click)=\"insertAndDeleteArray(EVENT._selected,sub._id)\" >\n                            {{sub.name}}</mat-option>\n                        </mat-select>\n                      </mat-form-field>\n                </div>\n            </div>\n\n            <div class=\"form-element child flags\" [formGroup]=\"createDepartmentForm?.controls?.flags\">\n                <strong><span translate>COMMON.FLAGS</span></strong>\n                <div class=\"flex-wrap\">\n                    <div class=\"form-element child\">\n                        <label for=\"isActive\">\n                            <mat-checkbox class=\"example-margin\" name=\"active\" formControlName=\"active\">{{\n                                'COMMON.ACTIVE' |\n                                translate }}</mat-checkbox>\n                        </label>\n                    </div>\n                </div>\n\n            </div>\n\n            <div class=\"text-right button-group\">\n                <button mat-stroked-button color=\"warn\" translate (click)=\"resetForm()\" *ngIf=\"mode ==='add'\">\n                    Reset\n                </button>\n                <button routerLink=\"/manage/events/list\" mat-raised-button color=\"warn\" translate>\n                    Cancel\n                </button>\n                <button mat-raised-button color=\"primary\" type=\"submit\" (click)=\"submit()\" translate\n                    [disabled]=\"!createDepartmentForm.valid\">\n                    Submit\n                </button>\n            </div>\n        </form>\n    </mat-card>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DepartmentsService, EmployeeRepositoryService, HelperService } from '@application/ui';\nimport * as uuid from 'uuid';\n\n@Component({\n  selector: 'application-create-department',\n  templateUrl: './create-department.component.html',\n  styleUrls: ['./create-department.component.less']\n})\nexport class CreateDepartmentComponent implements OnInit {\n\n  mode = this.route.snapshot.data['mode'];\n\n  department?: any;\n  // mode: string;\n  createDepartmentForm: FormGroup;\n  testCategory: any;\n  testList: any;\n  categoryList: any;\n  employeeList: any;\n  course:any;\n\n  insertDepartmentArray = [];\n  deleteDepartmentArray = [];\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    public helper: HelperService,\n    private route: ActivatedRoute,\n    private departmentsService: DepartmentsService,\n    private router: Router,\n    private employeeService: EmployeeRepositoryService,\n  ) { }\n  async ngOnInit(): Promise<void> {\n    this.createDepartmentForm = this.buildForm();\n    if (this.mode === 'edit') {\n      let departmentsUuid = this.route.snapshot.paramMap.get('uuid');\n      let department: any\n      department = await this.departmentsService.getDepartmentByUuid(departmentsUuid).toPromise();\n      this.department = department.response;\n      this.insertDepartmentArray = this.department?.hod.map(hres=>hres?._id)\n\n      // this.department.test = department.response.test[0].tests\n      this.createDepartmentForm = this.buildForm();\n    }\n    this.getEmployees();\n\n\n  }\n  buildForm() {\n    return this.formBuilder.group({\n      title: [this.department ? this.department?.title : '', Validators.required],\n      employee: [this.department ? this.department?.employee : '', Validators.required],\n      hod: [this.department ? this.department?.hod : '', Validators.required],\n      flags: this.formBuilder.group({\n        active: this.department ? this.department?.flags.active : true,\n      }),\n    });\n\n  }\n\n  getEmployees() {\n    this.employeeService.getAllEmployees().subscribe(\n      (res) => {\n        this.employeeList = res?.response;\n      }\n    );\n  }\n\n  insertAndDeleteArray(event, empId) {\n    if (event == true) {\n      this.insertDepartmentArray = this.insertDepartmentArray.filter(res=>{\n        return res != empId\n      })\n      this.deleteDepartmentArray = this.deleteDepartmentArray.filter(res=>{\n        return res != empId\n      })\n      this.insertDepartmentArray.push(empId);\n    }\n    else if (event == false) {\n      this.deleteDepartmentArray = this.deleteDepartmentArray.filter(res=>{\n        return res != empId\n      })\n      this.insertDepartmentArray = this.insertDepartmentArray.filter(res=>{\n        return res != empId\n      })\n      this.deleteDepartmentArray.push(empId);\n    }\n    console.log('deleteDepartmentArray', this.deleteDepartmentArray);\n    console.log('insertDepartmentArray', this.insertDepartmentArray);\n    // console.log('this.question',this.question.perals.map(res=>res._id));\n  }\n\n\n  submit() {\n    const value = this.createDepartmentForm.value;\n\n    if (this.mode === 'add') {\n      const payload: any = {\n        uuid: uuid.v4(),\n        title: value.title,\n        employee: value.employee.map(res=>res._id),\n        hod: value.hod.map(res=>res._id),\n        createdOn: new Date(),\n        createdBy: {\n          uuid: localStorage.getItem('currentUserUuid'),\n          name: localStorage.getItem('currentUserName'),\n        },\n        flags: {\n          active: value.flags.active,\n        },\n      };\n      console.log(payload);\n      this.departmentsService.addDepartment(payload).subscribe(res => {\n        if (res) {\n          this.router.navigate(['/manage/department/list'])\n        }\n      })\n    } else {\n      this.insertDepartmentArray.map(e=>{\n        this.department.hod.map(res=>{\n          if( res._id == e){\n            this.insertDepartmentArray =  this.insertDepartmentArray.filter(d=>{\n              return res._id != d\n            })\n          }\n        })\n      })\n      this.deleteDepartmentArray.map(e=>{\n        this.department.hod.map(res=>{\n          if( res._id != e){\n            this.deleteDepartmentArray =  this.deleteDepartmentArray.filter(d=>{\n              return res._id != e\n            })\n          }\n        })\n      })\n      const payload: any = {\n        _id:this.department?._id,\n        uuid: this.department?.uuid,\n        title: value.title,\n        employee: value.employee,\n        hod: value.hod,\n        insertDepartmentArray:this.insertDepartmentArray,\n        deleteDepartmentArray:this.deleteDepartmentArray,\n        createdBy: this.department?.createdBy,\n        createdOn: this.department?.createdOn,\n        modifiedOn: new Date(),\n        modifiedBy: {\n          uuid: localStorage.getItem('currentUserUuid'),\n          name: localStorage.getItem('currentUserName'),\n        },\n        flags: {\n          active: value.flags.active,\n        },\n      };\n      console.log(payload)\n      this.departmentsService.editDepartmentByUuid(payload).subscribe(res => {\n        if (res) {\n          this.router.navigate(['/manage/department/list'])\n        }\n      })\n\n    }\n  }\n  resetForm() {\n    this.createDepartmentForm.reset();\n  }\n\n}\n","import { CreateDepartmentComponent } from './create-department/create-department.component';\nimport { DepartmentListComponent } from './department-list/department-list.component';\n\nexport const components = [\n    CreateDepartmentComponent,\n    DepartmentListComponent,\n];\n\nexport * from './create-department/create-department.component';\nexport * from './department-list/department-list.component';\n\n\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport * as fromComponents from './components';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { UiModule } from '@application/ui';\nimport { DepartmentRoutes } from './deparment-routing.module';\n\n\n@NgModule({\n  declarations: [ ...fromComponents.components,],\n  imports: [\n    CommonModule,\n    TranslateModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(DepartmentRoutes),\n    UiModule,\n  ]\n})\nexport class DeparmentModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { RoleModulesEnum, RoleSubModulesEnum } from '@application/api-interfaces';\nimport { CommandRemoveDialogComponent, DepartmentsService, HelperService } from '@application/ui';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'application-department-list',\n  templateUrl: './department-list.component.html',\n  styleUrls: ['./department-list.component.less']\n})\nexport class DepartmentListComponent implements OnInit {\n  isAddVisible: boolean;\n  isDeleteVisible: boolean;\n  isEditVisible: boolean;\n  departments: any;\n  // @Output() delete = new EventEmitter<TagInterface>();\n\n  search: string;\n  // filteredDepartments:  MatTableDataSource<TagInterface>;\n  filteredDepartments: any;\n\n  totalLength = [10, 25, 50, 100];\n  total: number;\n  errors: string[];\n  sub = new Subscription();\n  // p: number = 1;\n  @ViewChild(MatSort, { static: true }) sort?: MatSort;\n  @ViewChild(MatPaginator, { static: true }) paginator?: MatPaginator;\n  displayedColumns: string[] = [\n    'sno',\n    'title',\n    'hod',\n    'status',\n    'actions'\n  ];\n  today = new Date()\n\n  constructor(\n    private departmentsService: DepartmentsService,\n    private dialog: MatDialog,\n    private helper: HelperService,\n    private router: Router\n  ) {\n    // this.today.setDate(this.today.getDate() - 1)\n  }\n\n  loadData() {\n    this.departmentsService.getAllDepartments().subscribe(res => {\n      this.departments = this.filteredDepartments = res?.response;\n      this.filteredDepartments = new MatTableDataSource(this.filteredDepartments);\n      this.filteredDepartments.paginator = this.paginator;\n      this.filteredDepartments.sort = this.sort;\n    })\n  }\n\n  ngOnInit(): void {\n    this.loadPermissions();\n    this.loadData();\n  }\n\n  delete(data) {\n    const dialogRef = this.dialog.open(CommandRemoveDialogComponent, {\n      data: { payload: data },\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.sub.add(this.departmentsService.deleteEventByUuid(data._id).subscribe(\n          (res) => {\n            this.loadData();\n          },\n          (err) => {\n            this.errors = err.error.error;\n          }\n        ));\n      }\n    })\n  }\n\n\n  filterDepartments(department: Event) {\n    const filterValue = (department.target as HTMLInputElement).value.toLowerCase().trim();;\n    if (filterValue) {\n      this.filteredDepartments = this.departments.filter((tag) => {\n        return tag.title.toLowerCase().includes(filterValue)\n      });\n    } else {\n      this.filteredDepartments = this.departments;\n    }\n    this.filteredDepartments = new MatTableDataSource(this.filteredDepartments);\n    this.filteredDepartments.paginator = this.paginator;\n    this.filteredDepartments.sort = this.sort;\n  }\n\n  loadPermissions() {\n    let modules = this.helper.enumtoArray(RoleModulesEnum);\n    let subM = this.helper.enumtoArray(RoleSubModulesEnum);\n    let role = localStorage.getItem('role');\n    let roleData = JSON.parse(localStorage.getItem('roleData'));\n\n    if (role) {\n      // this.roleService.getRoleById(role).subscribe(r => {\n      roleData[0].rolePermissions.map(res => {\n        if (res.module[0].title === modules.type.DEPARTMENT)\n          res.subModules.map(e => {\n            if (e.title == subM.type.ADD) {\n              this.isAddVisible = true;\n            }\n            else if (e.title == subM.type.DELETE) {\n              this.isDeleteVisible = true;\n            }\n            else if (e.title == subM.type.EDIT) {\n              this.isEditVisible = true;\n            }\n          })\n      })\n      // })\n    }\n  }\n\n\n  \n\n  // addStudentsToEvents(department) {\n  //   this.router.navigate([`manage/departments/${department.uuid}/add/students`], {\n  //     queryParams: { eventTitle: department.title, event_id: department._id, course_id: department.course._id }\n  //   })\n  // }\n  // editStudentsToEvents(department) {\n  //   this.router.navigate([`manage/departments/${department.uuid}/edit/students`], {\n  //     queryParams: { eventTitle: department.title, event_id: department._id, course_id: department.course._id }\n  //   })\n  // }\n\n\n\n}\n","<div class=\"tag-list\">\n    <div class=\"page-title\">\n        <div class=\"title\">\n            <h2>Departments</h2>\n        </div>\n        <div class=\"action-buttons\">\n            <button *ngIf=\"isAddVisible\" mat-raised-button color=\"primary\" [routerLink]=\"['../', 'create']\">Create\n                Department</button>\n        </div>\n    </div>\n    <div class=\"search full-width\">\n        <mat-form-field class=\"example-full-width\">\n            <mat-label translate>COMMON.SEARCH</mat-label>\n            <input type=\"search\" matInput name=\"search\" [placeholder]=\"'PAGE.ORGANIZATION_LIST.SEARCH' | translate\"\n                (keyup)=\"filterDepartments($event)\" />\n        </mat-form-field>\n    </div>\n\n    <div class=\"mat-elevation-z1\">\n        <table mat-table [dataSource]=\"filteredDepartments\">\n            <ng-container matColumnDef=\"sno\">\n                <th mat-header-cell *matHeaderCellDef style=\"width: 20px;\">\n                    S.No\n                </th>\n                <td mat-cell *matCellDef=\"let row\">{{filteredDepartments.filteredData.indexOf(row)+1}}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"title\">\n                <th mat-header-cell *matHeaderCellDef>\n                    {{ 'COMMON.TITLE' | translate }}\n                </th>\n                <td mat-cell *matCellDef=\"let row\">{{ row.title }}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"hod\">\n                <th mat-header-cell *matHeaderCellDef>\n                    Head&nbsp;Of&nbsp;Department\n                </th>\n                <td mat-cell *matCellDef=\"let row\">\n                    <div *ngFor=\"let value of row?.hod;let i = index\" >\n                        <span>{{value.name}}\n                          {{row?.hod.length != i+1 ? ',':''}}\n                        </span>\n                      </div>\n                </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"status\">\n                <th mat-header-cell *matHeaderCellDef>\n                    {{ 'COMMON.ACTIVE' | translate }}\n                </th>\n                <td mat-cell *matCellDef=\"let row\">{{ row.flags.active }}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef>\n                    {{ 'COMMON.ACTIONS.TITLE' | translate }}\n                </th>\n                <td mat-cell *matCellDef=\"let row\">\n                    <!-- <mat-icon class=\"view\" [matMenuTriggerFor]=\"menu\">more_vert</mat-icon> -->\n                    <i class=\"material-icons\" [matMenuTriggerFor]=\"menu\" style=\"margin-left: 10px;\">more_vert</i>\n                    <mat-menu #menu=\"matMenu\">\n                        <a [routerLink]=\"['../', row.uuid, 'edit']\" *ngIf=\"isEditVisible\"\n                            style=\"text-decoration: none;\">\n                            <button mat-menu-item color=\"primary\">\n                                Edit&nbsp;Department\n                            </button>\n                        </a>\n                        <button mat-menu-item *ngIf=\"isDeleteVisible\" (click)=\"delete(row)\">\n                            Delete&nbsp;Department\n                        </button>\n                    </mat-menu>\n\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n            <tr class=\"mat-row\" *matNoDataRow style=\"text-align: center;\">\n                <td class=\"mat-cell\" colspan=\"5\">\n                    <h3 translate>COMMON.NO_DATA</h3>\n                </td>\n            </tr>\n        </table>\n\n        <mat-paginator [showFirstLastButtons]=\"true\" [pageSizeOptions]=\"totalLength\"></mat-paginator>\n\n    </div>\n\n</div>","import { Routes } from '@angular/router';\nimport { CreateGuard, EditGuard } from '@application/ui';\nimport { ManageAsideMenuComponent } from '../../components';\nimport * as fromComponents from './components';\n\nexport const DepartmentRoutes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: 'create',\n        canActivate:[CreateGuard],\n        component: fromComponents.CreateDepartmentComponent,\n        data: {\n          mode: 'add',\n        },\n      },\n      {\n        path: ':uuid/edit',\n        canActivate:[EditGuard],\n        component: fromComponents.CreateDepartmentComponent,\n        data: {\n          mode: 'edit',\n        },\n      },\n      {\n        path: 'list',\n        component: fromComponents.DepartmentListComponent,\n      },\n     \n     \n      {\n        path: '',\n        outlet: 'aside',\n        component: ManageAsideMenuComponent,\n      },\n      {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: '/manage/department/list',\n      },\n    ],\n  },\n];\n\n"]}
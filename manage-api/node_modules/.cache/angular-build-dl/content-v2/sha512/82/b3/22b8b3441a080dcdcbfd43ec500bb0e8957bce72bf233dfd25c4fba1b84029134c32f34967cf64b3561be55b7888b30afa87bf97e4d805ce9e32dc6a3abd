{"version":3,"sources":["./apps/manage-client/src/app/modules/master-advice/view-payments/view-payments.component.ts","./apps/manage-client/src/app/modules/master-advice/view-payments/view-payments.component.html","./apps/manage-client/src/app/modules/master-advice/master-advice-routing.module.ts","./apps/manage-client/src/app/modules/master-advice/master-advice.module.ts","./apps/manage-client/src/app/modules/master-advice/master-advice-payments/master-advice-payments.component.ts","./apps/manage-client/src/app/modules/master-advice/master-advice-payments/master-advice-payments.component.html","./apps/manage-client/src/app/modules/master-advice/print-receipt/print-receipt.component.ts","./apps/manage-client/src/app/modules/master-advice/print-receipt/print-receipt.component.html"],"names":[],"mappings":"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","file":"apps-manage-client-src-app-modules-master-advice-master-advice-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserTransactionsService } from '@application/ui';\n\n@Component({\n  selector: 'application-view-payments',\n  templateUrl: './view-payments.component.html',\n  styleUrls: ['./view-payments.component.less']\n})\nexport class ViewPaymentsComponent implements OnInit {\n\n  paymentUuid: string;\n  transactions?: any;\n\n  constructor(\n    private route: ActivatedRoute,\n    private userTransactionsService: UserTransactionsService,\n    private _location: Location,\n  ) { }\n\n  ngOnInit(): void {\n    this.paymentUuid = this.route.snapshot.paramMap.get('uuid');\n    this.userTransactionsService.getTransactionByUuid(this.paymentUuid).subscribe(res => {\n      this.transactions = res.response;\n    })\n    let currentYear = new Date().getFullYear();\n    let year = currentYear.toString().split('');\n    currentYear = parseInt(year[year.length - 2] + year[year.length - 1]);\n\n  }\n  backToPaymentsList() {\n    this._location.back();\n  }\n\n  // checkPaymentStatus(orderId) {\n  //   this.userTransactionsService.checkPaymentStatus({ razorpayOrderId: orderId }).subscribe(data => {\n  //     if (data) {\n  //       this._location.back();\n  //     }\n  //   })\n  // }\n\n}\n","<mat-card>\n    <h2 style=\"text-align: center;\">User Payment Details</h2>\n    <div class=\"flex-wrap\">\n        <div class=\"w-1-3\" *ngIf=\"transactions?.transactionId\">\n            <span><b> Transaction Id</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span> {{transactions?.transactionId}}</span>\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.userId.name\">\n            <span> <b>User Name</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{transactions?.userId.name}}</span>\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.userId.mobile\">\n            <span><b> User Mobile</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{transactions?.userId.mobile}}</span>\n        </div>\n\n        <div class=\"w-1-3\" *ngIf=\"transactions?.subscriptionId?.title\">\n            <span><b> Subscription</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{transactions?.subscriptionId.title}}</span>\n        </div>\n\n        <div class=\"w-1-3\" *ngIf=\"transactions?.couponId != null \">\n            <span> <b>Coupon</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{transactions?.couponId.code }}</span>&nbsp;\n            <span *ngIf=\"transactions?.couponId.discountType ==='flat'\">[&nbsp;{{transactions?.couponId.discount\n                |\n                currency:'INR'}}&nbsp;]</span>\n            <span\n                *ngIf=\"transactions?.couponId.discountType ==='percentage'\">[&nbsp;{{transactions?.couponId.discount}}%&nbsp;]</span>\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.actualPrice\">\n            <span><b> Actual Price</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{transactions?.actualPrice}}</span>\n        </div>\n        <div class=\"w-1-3\" >\n            <span> <b>Discount Price</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span style=\"color: red;font-weight: bold;\">{{transactions?.discountPrice}}</span>\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.finalPaidAmount\">\n            <span><b> Paid Amount</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span style=\"color: green;font-weight: bold;\">{{transactions?.finalPaidAmount?.toFixed(2) | currency:'INR'}}</span>\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.paymentType\">\n            <span><b> Payment Type</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{transactions?.paymentType}}</span>\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.paymentStatus\">\n            <span><b>Payment Status</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span style=\"color: green;font-weight: bold;\" *ngIf=\"transactions.paymentStatus == 'SUCCESS'\">{{transactions?.paymentStatus}}</span>\n            <span style=\"color: yellowgreen;font-weight: bold;\"  *ngIf=\"transactions.paymentStatus == 'PENDING'\">{{transactions?.paymentStatus}}</span>\n            <span style=\"color: red;font-weight: bold;\" *ngIf=\"transactions.paymentStatus == 'FAILED'\">{{transactions?.paymentStatus}}</span>\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.modeOfPayment\">\n            <span><b>Mode Of Payment</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{transactions?.modeOfPayment}}</span>\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.billNumber\">\n            <span><b>Bill Number</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{ transactions?.billNumber }}</span>&nbsp;\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.chequeNumber\">\n            <span><b>Cheque Number</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{ transactions?.chequeNumber}}</span>&nbsp;\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.chequeDate\">\n            <span><b>Cheque Date</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{ transactions?.chequeDate | date:\"mediumDate\" }}</span>&nbsp;\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.bankName\">\n            <span><b>Bank Name</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{ transactions?.bankName }}</span>&nbsp;\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.referenceNumber\">\n            <span><b>Reference&nbsp;Number</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{ transactions?.referenceNumber }}</span>&nbsp;\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.creditORdebitCard\">\n            <span><b>Credit/Debit Card</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{ transactions?.creditORdebitCard }}</span>&nbsp;\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.cardType\">\n            <span><b>Card Type</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{ transactions?.cardType }}</span>&nbsp;\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.upiId\">\n            <span><b>Upi Id</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{ transactions?.upiId }}</span>&nbsp;\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.mode_transactionNumber\">\n            <span><b>Transaction&nbsp;Number</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{ transactions?.mode_transactionNumber}}</span>&nbsp;\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.razorpayOrderId\">\n            <span><b>RazorPay&nbsp;OrderId</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{ transactions?.razorpayOrderId }}</span>&nbsp;\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.razorPayPaymentId\">\n            <span><b>RazorPay&nbsp;PaymentId</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{ transactions?.razorPayPaymentId }}</span>&nbsp;\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.razoraySignature\">\n            <span><b>RazorPay&nbsp;Signature</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{ transactions?.razoraySignature | slice:1:20  }}...</span>&nbsp;\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.dateOfPayment\">\n            <span><b>Date Of Payment</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{transactions?.dateOfPayment | date:\"mediumDate\"}}</span>\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.expiryDate\">\n            <span><b>Expiry Date</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{transactions?.expiryDate | date:\"mediumDate\"}}</span>\n        </div>\n        <div class=\"w-1-3\" *ngIf=\"transactions?.paymentMessage\">\n            <span><b>Payment Message</b></span>\n            <span>&nbsp;&nbsp;:&nbsp;&nbsp;</span>\n            <span>{{ transactions?.paymentMessage }}</span>&nbsp;\n        </div>\n    </div>\n\n\n   <br><br>\n    <button  mat-raised-button color=\"primary\" class=\"paymentsButton\" (click)=\"backToPaymentsList()\">Back</button>&nbsp;\n   <!-- <button  mat-stroked-button color=\"primary\" *ngIf=\"transactions?.paymentStatus == 'PENDING' && transactions?.modeOfPayment=='RAZORPAY'\"\n    (click)=\"checkPaymentStatus(transactions?.razorpayOrderId)\">Check Payment Status</button> -->\n</mat-card>","import { Routes } from '@angular/router';\nimport { ApplicationLayoutComponent, AuthGuard, MasterAdviceGuard, PaymentDashboardGuard } from '@application/ui';\nimport { MasterAdvicePaymentsComponent } from './master-advice-payments/master-advice-payments.component';\nimport { PrintReceiptComponent } from './print-receipt/print-receipt.component';\nimport { ViewPaymentsComponent } from './view-payments/view-payments.component';\n\nexport const MasterAdviceRoutes: Routes = [\n  {\n    path: '',\n    // component: ApplicationLayoutComponent,\n    runGuardsAndResolvers: 'always',\n    children: [\n      {\n        path: 'payments',\n        component: MasterAdvicePaymentsComponent,\n        canActivate: [AuthGuard,MasterAdviceGuard]\n      },\n      {\n        path: ':uuid/transaction',\n        component: ViewPaymentsComponent,\n        canActivate: [AuthGuard,MasterAdviceGuard]\n      },\n      {\n        path: ':uuid/receipt',\n        component: PrintReceiptComponent,\n        canActivate: [AuthGuard,MasterAdviceGuard]\n      },\n      \n      {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: '/master-advice',\n      },\n    ],\n  }\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MasterAdvicePaymentsComponent } from './master-advice-payments/master-advice-payments.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RouterModule } from '@angular/router';\nimport { UiModule } from '@application/ui';\nimport { GoogleChartsModule } from 'angular-google-charts';\nimport { MasterAdviceRoutes } from './master-advice-routing.module';\nimport { ViewPaymentsComponent } from './view-payments/view-payments.component';\nimport { PrintReceiptComponent } from './print-receipt/print-receipt.component';\n\n\n@NgModule({\n  declarations: [MasterAdvicePaymentsComponent, ViewPaymentsComponent, PrintReceiptComponent],\n  imports: [\n    CommonModule,\n    TranslateModule,\n    RouterModule.forChild(MasterAdviceRoutes),\n    UiModule,\n    GoogleChartsModule\n  ]\n})\nexport class MasterAdviceModule { }\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport * as XLSX from 'xlsx';\n\nimport 'jspdf-autotable';\nimport { jsPDF } from 'jspdf';\nimport { UserTransactonsInterface } from '@application/api-interfaces';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport {\n  HelperService,\n  NotificationService,\n  NotificationType,\n  UserTransactionsService,\n} from '@application/ui';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'application-master-advice-payments',\n  templateUrl: './master-advice-payments.component.html',\n  styleUrls: ['./master-advice-payments.component.less'],\n})\nexport class MasterAdvicePaymentsComponent implements OnInit {\n  @Input() userTransactions: UserTransactonsInterface;\n\n  paymentStatusArray = ['ALL', 'SUCCESS', 'PENDING', 'FAILED'];\n  modeOfPaymentArray = [\n    'ALL',\n    'RAZORPAY',\n    'CASH',\n    'POSMACHINE',\n    'UPI',\n    'OFFLINE',\n    'CHEQUE',\n  ];\n  PaymentStatus: string;\n  ModeOfPayment: string;\n\n  displayedColumns: string[] = [\n    'sno',\n    'transactionId',\n    // 'name',\n    'mobile',\n    'actualPrice',\n    'coupon',\n    'discountPrice',\n    'finalPaidAmount',\n    'paymentType',\n    'modeOfPayment',\n    'dateOfPayment',\n    'paymentStatus',\n    'actions',\n  ];\n  dataSource: MatTableDataSource<UserTransactonsInterface>;\n  @Output() delete = new EventEmitter<UserTransactonsInterface>();\n  @Output() resetPassword = new EventEmitter<UserTransactonsInterface>();\n  expandedElement: UserTransactonsInterface | null;\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  @ViewChild('fromDate') fromDate:ElementRef;\n  @ViewChild('toDate') toDate:ElementRef;\n\n  filteredList: any;\n  list: any;\n  totalAmount = 0;\n  length: number;\n  form = new FormGroup({\n    fromDate: new FormControl(''),\n    toDate: new FormControl(''),\n  });\n\n  constructor(\n    public helper: HelperService,\n    private router: Router,\n    private userTransactionsService: UserTransactionsService,\n    private notification: NotificationService\n  ) {}\n\n  ngOnInit() {\n    this.loadData();\n  }\n\n  loadData(): void {\n    // let dates = {\n    //   fromDate: new Date(),\n    //   toDate: new Date(),\n    // };\n    this.userTransactionsService.getMasterAdviceTransactions().subscribe((data) => {\n      console.log('data,',data);\n      this.filteredList = this.list = data.response;\n      this.dataSource = new MatTableDataSource(this.filteredList);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n      this.totalAmount = 0;\n      this.filteredList.forEach((res) => {\n        if (res.paymentStatus === 'SUCCESS') {\n          this.totalAmount += res.finalPaidAmount;\n        }\n      });\n      console.log('this.totalAmount', this.totalAmount.toFixed(2));\n    });\n  }\n\n  // ngOnChanges(changes: SimpleChanges) {\n  //   // Assign the data to the data source for the table to render\n  //   if (changes?.userTransactions?.currentValue) {\n  //     this.filteredList = this.list = changes?.userTransactions?.currentValue\n  //     // this.filteredList = changes?.userTransactions?.currentValue\n  //     this.dataSource = new MatTableDataSource(changes?.userTransactions?.currentValue);\n  //     this.dataSource.paginator = this.paginator;\n  //     this.dataSource.sort = this.sort;\n  //     this.totalAmount = 0\n  //     this.filteredList.forEach(res => {\n  //       if (res.paymentStatus === 'SUCCESS') {\n  //         this.totalAmount += res.finalPaidAmount;\n  //       }\n  //     })\n  //     console.log('this.totalAmount', this.totalAmount.toFixed(2));\n  //   }\n  // }\n\n  exportTable() {\n    if (this.dataSource.filteredData.length === 0) {\n      alert('No data available for ExportData');\n    } else {\n      const dataToExport = this.dataSource.filteredData.map((x) => ({\n        transactionId: x?.transactionId,\n        Name: x?.userId?.name ? x?.userId?.name : '---',\n        Mobile: x?.userId?.mobile ? x?.userId?.mobile : '---',\n        actualPrice: x?.actualPrice,\n        Coupon: x?.couponId?.code ? x?.couponId?.code : '---',\n        discountPrice: x?.discountPrice,\n        finalPaidAmount: x?.finalPaidAmount,\n        paymentType: x?.paymentType,\n        modeOfPayment: x?.modeOfPayment,\n        paymentStatus: x?.paymentStatus,\n        expiryDate: x?.expiryDate,\n        dateOfPayment: x?.dateOfPayment,\n        mode_transactionNumber: x?.mode_transactionNumber,\n        referenceNumber: x?.referenceNumber,\n        paymentMessage: x?.paymentMessage,\n        subscriptionId: x?.subscriptionId?.title,\n        billNumber: x?.billNumber,\n        chequeNumber: x?.chequeNumber,\n        chequeDate: x?.chequeDate,\n        bankName: x?.bankName,\n        creditORdebitCard: x?.creditORdebitCard,\n        cardType: x?.cardType,\n        upiId: x?.upiId,\n        razorPayPaymentId: x?.razorPayPaymentId,\n        razoraySignature: x?.razoraySignature,\n        razorpayOrderId: x?.razorpayOrderId,\n        createdBy: x?.createdBy.name,\n      }));\n\n      let workSheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(dataToExport, <\n        XLSX.Table2SheetOpts\n      >{ sheet: 'Sheet 1' });\n      let workBook: XLSX.WorkBook = XLSX.utils.book_new();\n\n      // Adjust column width\n      var wscols = [{ wch: 15 }];\n\n      workSheet['!cols'] = wscols;\n      XLSX.utils.book_append_sheet(workBook, workSheet, 'Sheet 1');\n      XLSX.writeFile(workBook, `MasterAdvicePayments.xlsx`);\n    }\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value.trim();\n    if (filterValue) {\n      this.filteredList = this.list.filter((trans) => {\n        return (\n          trans.transactionId\n            .toLowerCase()\n            .includes(filterValue.toLocaleLowerCase()) ||\n          trans.userId?.name\n            .toLowerCase()\n            .includes(filterValue.toLocaleLowerCase()) ||\n          trans.userId?.mobile\n            .toString()\n            .toLowerCase()\n            .includes(filterValue.toLocaleLowerCase()) ||\n          trans.couponId?.code\n            .toLowerCase()\n            .includes(filterValue.toLocaleLowerCase()) ||\n          trans.paymentType\n            .toLowerCase()\n            .includes(filterValue.toLocaleLowerCase()) ||\n          trans.paymentStatus\n            .toLowerCase()\n            .includes(filterValue.toLocaleLowerCase()) ||\n          trans.subscriptionId?.title\n            .toLowerCase()\n            .includes(filterValue.toLocaleLowerCase()) ||\n          trans.modeOfPayment\n            .toLowerCase()\n            .includes(filterValue.toLocaleLowerCase())\n        );\n      });\n      this.dataSource = new MatTableDataSource(this.filteredList);\n    } else {\n      this.dataSource = new MatTableDataSource(this.list);\n    }\n    this.dataSource.paginator = this.paginator;\n    this.totalAmount = 0;\n    this.filteredList.forEach((res) => {\n      if (res.paymentStatus === 'SUCCESS') {\n        this.totalAmount += res.finalPaidAmount;\n      }\n    });\n    console.log('this.totalAmountFilter', this.totalAmount.toFixed(2));\n  }\n\n  searchPayments() {\n   let toDate= new Date(this.toDate.nativeElement.value).setDate(\n        new Date(this.toDate.nativeElement.value).getDate() + 1\n      )\n    let dates = {\n      fromDate: new Date(this.fromDate.nativeElement.value),\n      toDate:new Date(toDate)\n    };\n    console.log('dates', dates);\n\n    this.userTransactionsService.getmasterAdviceDateFilter(dates).subscribe((data) => {\n      console.log(data);\n      this.filteredList = this.list = data.response;\n\n      this.dataSource = new MatTableDataSource(data.response);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n      this.length = this.dataSource.filteredData.length;\n      this.totalAmount = 0;\n      this.list.forEach((res) => {\n        if (res.paymentStatus === 'SUCCESS') {\n          this.totalAmount += res.finalPaidAmount;\n        }\n      });\n      console.log('this.totalAmountSearch', this.totalAmount.toFixed(2));\n      if (this.length) {\n        this.notification.showNotification({\n          type: NotificationType.SUCCESS,\n          payload: {\n            message: 'User payments fetched successfully',\n            statusCode: 200,\n            statusText: 'Successfully',\n            status: 201,\n          },\n        });\n      } else {\n        this.notification.showNotification({\n          type: NotificationType.ERROR,\n          payload: {\n            message: '',\n            statusCode: 200,\n            statusText: 'Successfully',\n            status: 201,\n          },\n        });\n      }\n    });\n  }\n\n  // selectModeOfPayment(event) {\n  //   this.ModeOfPayment = event;\n  //   if (event == 'ALL') {\n  //     if (this.PaymentStatus && this.PaymentStatus != 'ALL') {\n  //       let dataSource;\n  //       dataSource = this.list.filter((payment) => {\n  //         return payment.paymentStatus\n  //           .toLowerCase()\n  //           .includes(this.PaymentStatus.toLowerCase());\n  //       });\n  //       this.dataSource = new MatTableDataSource(dataSource);\n  //     } else {\n  //       this.dataSource = new MatTableDataSource(this.filteredList);\n  //     }\n  //   } else {\n  //     let dataSource;\n  //     if (event) {\n  //       if (this.PaymentStatus && this.PaymentStatus != 'ALL') {\n  //         dataSource = this.list.filter((payment) => {\n  //           return (\n  //             payment.modeOfPayment\n  //               .toLowerCase()\n  //               .includes(event.toLowerCase()) &&\n  //             payment.paymentStatus\n  //               .toLowerCase()\n  //               .includes(this.PaymentStatus.toLowerCase())\n  //           );\n  //         });\n  //       } else if (!this.PaymentStatus || this.PaymentStatus == 'ALL') {\n  //         dataSource = this.list.filter((payment) => {\n  //           return payment.modeOfPayment\n  //             .toLowerCase()\n  //             .includes(event.toLowerCase());\n  //         });\n  //       }\n  //       this.totalAmount = 0;\n  //       dataSource.forEach((res) => {\n  //         if (res.paymentStatus === 'SUCCESS') {\n  //           this.totalAmount += res.finalPaidAmount;\n  //         }\n  //       });\n  //       console.log('ModeOfPayment', this.totalAmount.toFixed(2));\n  //     }\n  //     this.dataSource = new MatTableDataSource(dataSource);\n  //   }\n  //   this.dataSource.paginator = this.paginator;\n  //   this.dataSource.sort = this.sort;\n  // }\n\n  // selectPaymentStatus(event) {\n  //   this.PaymentStatus = event;\n  //   if (event == 'ALL') {\n  //     if (this.ModeOfPayment && this.ModeOfPayment != 'ALL') {\n  //       let dataSource;\n  //       dataSource = this.list.filter((payment) => {\n  //         return payment.modeOfPayment\n  //           .toLowerCase()\n  //           .includes(this.ModeOfPayment.toLowerCase());\n  //       });\n  //       this.dataSource = new MatTableDataSource(dataSource);\n  //     } else {\n  //       this.dataSource = new MatTableDataSource(this.filteredList);\n  //     }\n  //   } else {\n  //     let dataSource;\n  //     if (event) {\n  //       if (this.ModeOfPayment && this.ModeOfPayment != 'ALL') {\n  //         dataSource = this.list.filter((payment) => {\n  //           return (\n  //             payment.paymentStatus\n  //               .toLowerCase()\n  //               .includes(event.toLowerCase()) &&\n  //             payment.modeOfPayment\n  //               .toLowerCase()\n  //               .includes(this.ModeOfPayment.toLowerCase())\n  //           );\n  //         });\n  //       } else if (!this.ModeOfPayment || this.ModeOfPayment == 'ALL') {\n  //         dataSource = this.list.filter((payment) => {\n  //           return payment.paymentStatus\n  //             .toLowerCase()\n  //             .includes(event.toLowerCase());\n  //         });\n  //       }\n  //     }\n  //     this.dataSource = new MatTableDataSource(dataSource);\n  //   }\n  //   this.dataSource.paginator = this.paginator;\n  //   this.dataSource.sort = this.sort;\n  // }\n\n  // viewTransaction(payment){\n  //  this.router.navigate([`manage/user/payments/${payment.uuid}/transaction`])\n  // }\n}\n","<div class=\"users-list mat-table-wrapper\">\n    <!-- <div class=\"flex-wrap\"> -->\n        <div class=\"row\">\n            <div class=\"col col-sm-8\">\n              <div class=\"title\">\n                <h2>Master&nbsp;Advice&nbsp;Transactions</h2>\n              </div>\n            </div>\n            <div class=\"col col-sm-4\"></div>\n          </div>\n      <div class=\"row\">\n        <div class=\"col-sm-6\">\n          <mat-form-field>\n            <mat-label translate>COMMON.SEARCH</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" [placeholder]=\"'COMMON.FILTER.BY_TITLE' | translate\" #input />\n          </mat-form-field>\n        </div>\n        <!-- <div class=\"col-sm-2\">\n          <mat-form-field>\n            <mat-label translate>Mode&nbsp;Of&nbsp;Payment</mat-label>\n            <mat-select>\n              <mat-option  *ngFor=\"let item of modeOfPaymentArray\" [value]=\"item\"  (click)=\"selectModeOfPayment(item)\">{{item}}</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n        <div class=\"col-sm-2\">\n          <mat-form-field >\n            <mat-label translate>Payment&nbsp;Status</mat-label>\n            <mat-select>\n              <mat-option *ngFor=\"let item of paymentStatusArray\" [value]=\"item\" (click)=\"selectPaymentStatus(item)\">{{item}}</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div> -->\n        <div class=\"col-sm-2\" >\n          <mat-form-field>\n            <mat-label>From Date</mat-label>\n            <input matInput [matDatepicker]=\"picker\" #fromDate>\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n          </mat-form-field>\n        </div>\n        <div class=\"col-sm-2\" >\n          <mat-form-field>\n            <mat-label>To Date</mat-label>\n            <input matInput [matDatepicker]=\"picker1\" #toDate>\n            <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n            <mat-datepicker #picker1></mat-datepicker>\n          </mat-form-field>\n        </div>\n        <div class=\"col-sm-1\">\n          <button mat-stroked-button color=\"primary\" type=\"button\" (click)=\"searchPayments()\">Search</button>&nbsp;\n        </div>\n        <div class=\"col-sm-1\">\n          <button mat-raised-button color=\"primary\" type=\"button\" (click)=\"exportTable()\">Excel</button>\n        </div>\n    </div>\n    <br>\n    <div class=\"mat-elevation-z1\">\n      <table mat-table [dataSource]=\"dataSource\" matSort>\n        <ng-container matColumnDef=\"sno\">\n          <th mat-header-cell *matHeaderCellDef>S.No</th>\n          <td mat-cell *matCellDef=\"let row;let i = index\">{{dataSource.filteredData.indexOf(row)+1 }}</td>\n        </ng-container>\n        <!-- <ng-container matColumnDef=\"name\">\n          <th mat-header-cell *matHeaderCellDef  style=\"width: 120px;\">\n            User&nbsp;Name\n          </th>\n          <td mat-cell *matCellDef=\"let row\">{{ row.userId?.name }}</td>\n        </ng-container> -->\n        <ng-container matColumnDef=\"mobile\">\n          <th mat-header-cell *matHeaderCellDef style=\"width: 100px;\">\n            User&nbsp;mobile\n          </th>\n          <td mat-cell *matCellDef=\"let row\">{{ row.userId?.mobile }}</td>\n        </ng-container>\n  \n        <ng-container matColumnDef=\"transactionId\">\n          <th mat-header-cell *matHeaderCellDef style=\"width: 120px;\">\n            Transaction ID\n          </th>\n          <td mat-cell *matCellDef=\"let row\">\n            {{ row.transactionId }}\n          </td>\n        </ng-container>\n  \n        <ng-container matColumnDef=\"actualPrice\">\n          <th mat-header-cell *matHeaderCellDef>\n            Actual&nbsp;Price\n          </th>\n          <td mat-cell *matCellDef=\"let row\">\n            {{ row?.actualPrice?.toFixed(2) }}\n          </td>\n        </ng-container>\n        <ng-container matColumnDef=\"coupon\">\n          <th mat-header-cell *matHeaderCellDef style=\"width: 120px;\">\n            Coupon\n          </th>\n          <td mat-cell *matCellDef=\"let row\">\n            {{ row.couponId?.code ?row.couponId.code:'----' }}&nbsp;\n            <span *ngIf=\"row.couponId?.discountType ==='flat'\">[&nbsp;{{row.couponId?.discount |\n              currency:'INR'}}&nbsp;]</span>\n            <span *ngIf=\"row.couponId?.discountType ==='percentage'\">[&nbsp;{{row.couponId?.discount}}%&nbsp;]</span>\n          </td>\n        </ng-container>\n        <ng-container matColumnDef=\"discountPrice\">\n          <th mat-header-cell *matHeaderCellDef style=\"width: 80px;\">\n            Discount Price\n          </th>\n          <td mat-cell *matCellDef=\"let row\">\n            <span style=\"color: red;\"> {{ row?.discountPrice?.toFixed(2) }}</span>\n          </td>\n        </ng-container>\n        <ng-container matColumnDef=\"finalPaidAmount\">\n          <th mat-header-cell *matHeaderCellDef>\n            Paid Amount\n          </th>\n          <td mat-cell *matCellDef=\"let row\">\n           <strong style=\"color: green;\"> {{ row?.finalPaidAmount?.toFixed(0) | currency:'INR' }}</strong>\n          </td>\n        </ng-container>\n  \n        <ng-container matColumnDef=\"paymentType\">\n          <th mat-header-cell *matHeaderCellDef>\n            Payment Type\n          </th>\n          <td mat-cell *matCellDef=\"let row\">{{ row.paymentType }}</td>\n        </ng-container>\n  \n        <ng-container matColumnDef=\"modeOfPayment\">\n          <th mat-header-cell *matHeaderCellDef>\n            Mode Of Payment\n          </th>\n          <td mat-cell *matCellDef=\"let row\">{{ row.modeOfPayment }}</td>\n        </ng-container>\n        <ng-container matColumnDef=\"paymentStatus\">\n          <th mat-header-cell *matHeaderCellDef>\n            Payment Status\n          </th>\n          <td mat-cell *matCellDef=\"let row\">\n            <span style=\"color: green;\" *ngIf=\"row.paymentStatus == 'SUCCESS'\">{{ row.paymentStatus }}</span>\n            <span style=\"color: yellowgreen;\" *ngIf=\"row.paymentStatus == 'PENDING'\">{{ row.paymentStatus }}</span>\n            <span style=\"color: red;\" *ngIf=\"row.paymentStatus == 'FAILED'\">{{ row.paymentStatus }}</span>\n  \n          </td>\n        </ng-container>\n  \n        <ng-container matColumnDef=\"dateOfPayment\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\n            Date Of Payment\n          </th>\n          <td mat-cell *matCellDef=\"let row\">{{row.dateOfPayment | date:'mediumDate' }}</td>\n        </ng-container>\n  \n        <ng-container matColumnDef=\"actions\">\n          <th mat-header-cell *matHeaderCellDef>\n            Actions\n          </th>\n          <td mat-cell *matCellDef=\"let row\">\n            <!-- <mat-icon class=\"view\" [matMenuTriggerFor]=\"menu\">more_vert</mat-icon> -->\n            <i class=\"material-icons\"  [matMenuTriggerFor]=\"menu\">more_vert</i>\n            <mat-menu #menu=\"matMenu\">\n              <a [routerLink]=\"['../', row.uuid, 'transaction']\">\n                <button mat-menu-item>\n                  <!-- <mat-icon color=\"primary\">visibility</mat-icon> -->\n                  <span class=\"btnSpan\">View Payment</span>\n                </button>\n              </a>\n              <a [routerLink]=\"['../', row.uuid, 'receipt']\" *ngIf=\"row.paymentStatus == 'SUCCESS'\">\n                <button mat-menu-item>\n                  <!-- <mat-icon color=\"primary\">print</mat-icon> -->\n                  <span class=\"btnSpan\">Print Receipt</span>\n                </button>\n              </a>\n            </mat-menu>\n          </td>\n        </ng-container>\n  \n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  \n        <tr class=\"mat-row\" *matNoDataRow>\n          <td class=\"mat-cell\" colspan=\"12\">\n            <img src=\"../../../../../../../assets/no_data_found.png\" alt=\"No Data Found\"\n              style=\"height: 150px;width: 150px;\">\n            <h2>No Data Found</h2>\n          </td>\n        </tr>\n      </table>\n      <mat-paginator [showFirstLastButtons]=\"true\" [pageSizeOptions]=\"[10,25,50, 100]\"></mat-paginator>\n      <!--  <table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows class=\"mat-elevation-z8\">\n  \n        <ng-container matColumnDef=\"{{ column }}\" *ngFor=\"let column of displayingColumns\">\n          <th mat-header-cell *matHeaderCellDef> {{ column }} </th>\n          <td mat-cell *matCellDef=\"let element\"> {{ element[column] }} </td>\n        </ng-container>\n  \n  \n        <ng-container matColumnDef=\"expandedDetail\">\n          <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"displayingColumns?.length\">\n            <div class=\"details\" [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n              <div class=\"my-1 full-width\">\n                <div class=\"flex-wrap\">\n                  <div class=\"w-1-1 child\">\n                    <strong translate> User Name </strong>\n                    <div class=\"bg-f8\"> {{ element.userId?.name }} </div>\n                  </div>\n                  <div class=\"w-1-1 child\">\n                    <strong translate> Mobile </strong>\n                    <div class=\"bg-f8\"> {{ element.userId?.mobile }} </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </td>\n        </ng-container>\n  \n  \n  \n  \n        <tr mat-header-row *matHeaderRowDef=\"displayingColumns\"></tr>\n        <tr mat-row *matRowDef=\"let element; columns: displayingColumns;\" class=\"example-element-row\"\n          [class.example-expanded-row]=\"expandedElement === element\"\n          (click)=\"expandedElement = expandedElement === element ? null : element\">\n        </tr>\n        <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n      </table> -->\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserTransactionsService } from '@application/ui';\n\n@Component({\n  selector: 'application-print-receipt',\n  templateUrl: './print-receipt.component.html',\n  styleUrls: ['./print-receipt.component.less']\n})\nexport class PrintReceiptComponent implements OnInit {\n\n  paymentUuid: string;\n  transactions?: any;\n  constructor(\n    private route: ActivatedRoute,\n    private userTransactionsService: UserTransactionsService,\n    private _location: Location,\n  ) { }\n\n  ngOnInit(): void {\n    this.paymentUuid = this.route.snapshot.paramMap.get('uuid');\n    this.userTransactionsService.getTransactionByUuid(this.paymentUuid).subscribe(res => {\n      this.transactions = res.response;\n    })\n  }\n  backToPaymentsList() {\n    this._location.back();\n  }\n\n  printComponent(cmpName) {\n    let printContents = document.getElementById(cmpName).innerHTML;\n    let originalContents = document.body.innerHTML;\n    document.body.innerHTML = printContents;\n    window.print();\n    document.body.innerHTML = originalContents;\n  }\n\n}\n","<div id=\"component1\">\n    <div class=\"receipt mat-elevation-z1\">\n        <table style=\"text-align: center;border-bottom: 1px dashed #909497;\">\n            <tr>\n                <td>\n                    <img src=\"../../../../../../../assets/plato-logo.png\" alt=\"plato-logo\" class=\"plato-img\">\n                </td>\n                <td>\n                    <h2>\n                        PLATO DIGI EDUCATIONS PVT LTD\n                    </h2>\n                    <p class=\"address\">H.No. 6-1-102, Padmarao Nagar, Musheerabad, Secunderabad, Telanagana-500025</p>\n                    <!-- <p class=\"address\">Mobile: +91 80999 99956; Website: www.platoonline.com</p> -->\n                </td>\n            </tr>\n        </table>\n        <h3 style=\"text-align: center;\">Pay&nbsp;Receipt</h3>\n        <table style=\"text-align: left;margin-left: 15px;\">\n            <tr style=\"height:40px;\">\n                <th>Transaction&nbsp;Id</th>\n                <th>:&nbsp;&nbsp;</th>\n                <td style=\"width: 350px;\">\n                    <span>{{transactions?.transactionId}}</span>\n                </td>\n                <th>Date&nbsp;Of&nbsp;Payment</th>\n                <th>:&nbsp;&nbsp;</th>\n                <td style=\"width: 250px;\">\n                    <span>{{transactions?.dateOfPayment | date:\"mediumDate\"}}</span>\n                </td>\n            </tr>\n            <tr style=\"height:40px;\">\n                <th>User&nbsp;Name</th>\n                <th>:&nbsp;&nbsp;</th>\n                <td style=\"width: 350px;\">\n                    <span>{{ transactions?.userId ?transactions?.userId.name:'---' }}</span>\n                </td>\n                <th>Mobile&nbsp;Number</th>\n                <th>:&nbsp;&nbsp;</th>\n                <td style=\"width: 250px;\">\n                    <span>{{transactions?.userId?.mobile}}</span>\n                </td>\n            </tr>\n            <tr style=\"height:40px;\">\n                <th>Subscription</th>\n                <th>:&nbsp;&nbsp;</th>\n                <td style=\"width: 350px;\">\n                    <span>{{transactions?.subscriptionId?.title}}</span>\n                </td>\n                <th>Mode&nbsp;Of&nbsp;Payment</th>\n                <th>:&nbsp;&nbsp;</th>\n                <td style=\"width: 250px;\">\n                    <span>{{transactions?.modeOfPayment}}</span>\n                </td>\n            </tr>\n            <tr style=\"height:40px;\" *ngIf=\"transactions?.modeOfPayment === 'cheque'\">\n                <th>Cheque&nbsp;Number</th>\n                <th>:&nbsp;&nbsp;</th>\n                <td style=\"width: 350px;\">\n                    <span>{{ transactions?.chequeNumber }}</span>&nbsp;\n                </td>\n                <th>Cheque&nbsp;Date</th>\n                <th>:&nbsp;&nbsp;</th>\n                <td style=\"width: 250px;\">\n                    <span *ngIf=\"transactions?.chequeDate\">{{ transactions?.chequeDate | date:\"mediumDate\" }}</span>&nbsp;\n                </td>\n            </tr>\n        </table>\n        <table border=\"1\" cellpadding=\"10\"\n            style=\"border-collapse: collapse;text-align: center;width: 96%;margin-left: 15px;\">\n            <tr>\n                <th>Actual&nbsp;Amount</th>\n                <th>Coupon&nbsp;Code</th>\n                <th>Discount&nbsp;Amount</th>\n                <th>Paid&nbsp;Amount</th>\n            </tr>\n            <tr>\n                <td>\n                    <span>{{transactions?.actualPrice.toFixed(2)}}</span>\n                </td>\n                <td>\n                    <span>{{transactions?.couponId == null ?'---':transactions?.couponId.code }}</span>&nbsp;\n                    <!-- <span *ngIf=\"transactions?.couponId != null\">\n                        <span *ngIf=\"transactions?.couponId.discountType ==='flat'\">[&nbsp;{{transactions?.couponId.discount\n                            | currency:'INR'}}&nbsp;]</span>\n                        <span\n                            *ngIf=\"transactions?.couponId.discountType ==='percentage'\">[&nbsp;{{transactions?.couponId.discount}}%&nbsp;]</span>\n                    </span> -->\n                </td>\n                <td>\n                    <span>{{transactions?.discountPrice.toFixed(2)}}</span>\n                </td>\n                <td>\n                    <span>{{transactions?.finalPaidAmount.toFixed(2)  }}</span>\n                </td>\n            </tr>\n        </table><br>\n        <h5 style=\"margin-left: 80%;\">Cashier&nbsp;/&nbsp;Manager</h5>\n        <div style=\"border-top: 1px dashed #909497;width: 95%;margin-left: 15px;\">\n            <p style=\"font-weight: bold;\">\n                Note : We are requesting you to keep this receipt with you for future clarifications in respect of fee paid\n                by you. Fee once paid will not be refunded or transferred.\n            </p>\n        </div>\n    </div>\n</div>\n<button mat-stroked-button color=\"warn\" class=\"paymentsButton\" (click)=\"backToPaymentsList()\">Back</button>&nbsp;\n<button  mat-raised-button color=\"primary\" (click)=\"printComponent('component1')\" class=\"primary printBtn\">Print</button>&nbsp;\n"],"sourceRoot":"webpack:///"}
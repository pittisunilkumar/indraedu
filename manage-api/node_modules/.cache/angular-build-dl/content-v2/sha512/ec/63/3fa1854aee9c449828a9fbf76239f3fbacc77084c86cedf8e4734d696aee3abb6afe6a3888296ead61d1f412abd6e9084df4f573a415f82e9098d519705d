{"version":3,"sources":["webpack:///apps/manage-client/src/app/modules/dashboard/dashboard.module.ts","webpack:///apps/manage-client/src/app/modules/dashboard/payments-dashboard/payments-dashboard.component.ts","webpack:///apps/manage-client/src/app/modules/dashboard/payments-dashboard/payments-dashboard.component.html","webpack:///apps/manage-client/src/app/modules/dashboard/dashboard-routing.module.ts","webpack:///apps/manage-client/src/app/modules/dashboard/dashboard/dashboard.component.html","webpack:///apps/manage-client/src/app/modules/dashboard/dashboard/dashboard.component.ts"],"names":["DashboardModule","forChild","declarations","imports","PaymentsDashboardComponent","breakpointObserver","userTransactionsService","notification","months","type","data","weeklyData","columnNames","isMobile","width","window","innerWidth","height","innerHeight","mobileWidth","value","yearwiseTransactions","subscribe","res","response","weeklyPayments","paymentsReports","payments","windowSize","showNotification","SUCCESS","payload","message","statusCode","statusText","status","columnOptions","is3D","responsive","legend","position","maxLines","bar","groupWidth","isStacked","animation","duration","easing","event","target","selector","templateUrl","styleUrls","host","DashboardRoutes","path","runGuardsAndResolvers","children","component","canActivate","pathMatch","redirectTo","DashboardComponent","roleService","helper","bannerRepo","cardsArray","currentUserType","localStorage","getItem","role","roleData","getRoleById","toPromise","setItem","JSON","stringify","location","reload","loadPermissions","basePath","modules","enumtoArray","subM","getDashboardCount","count","console","log","r","rolePermissions","map","module","title","COURSES","subModules","find","e","VIEW","push","icon","name","Course","link","active","getRoutePath","SYLLABUS","Syllabus","VIDEO_CYPHER","Videos","EMPLOYEE","Employee","USERS","Users","activeUsers","SubscribedUserCount","TESTS","Tests","SUBSCRIPTIONS","Subscription","COUPONS","Coupons","AGENTS","AGENT_COUPONS","sort","a","b","url","currentURL","pathName","split","join","routePath"],"mappings":"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","file":"apps-manage-client-src-app-modules-dashboard-dashboard-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RouterModule } from '@angular/router';\nimport { DashboardRoutes } from './dashboard-routing.module';\nimport { UiModule } from '@application/ui';\nimport { PaymentsDashboardComponent } from './payments-dashboard/payments-dashboard.component';\nimport { GoogleChartsModule } from 'angular-google-charts';\n\n\n@NgModule({\n  declarations: [DashboardComponent, PaymentsDashboardComponent],\n  imports: [\n    CommonModule,\n    TranslateModule,\n    RouterModule.forChild(DashboardRoutes),\n    UiModule,\n    GoogleChartsModule\n  ]\n})\nexport class DashboardModule { }\n","import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Component, OnInit } from '@angular/core';\nimport { UserTransactonsInterface } from '@application/api-interfaces';\nimport { NotificationService, NotificationType, UserTransactionsService } from '@application/ui';\nimport moment from 'moment';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'application-payments-dashboard',\n  templateUrl: './payments-dashboard.component.html',\n  styleUrls: ['./payments-dashboard.component.less'],\n  host: { \n    \"(window:resize)\": \"onWindowResize($event)\"\n  }\n})\nexport class PaymentsDashboardComponent implements OnInit {\n\n  public userTransactions: any;\n  totalAmount: number;\n  months = [3, 6, 9, 12];\n  payments: any\n\n\n  type = 'ColumnChart';\n  data = [['', 0]];\n  weeklyData = [['', 0]];\n  columnNames = ['', 'Income'];\n  columnOptions:any;\n  isMobile: boolean = false;\n  width: number = window.innerWidth;\n  height: number = window.innerHeight;\n  mobileWidth: number = 760;\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private userTransactionsService: UserTransactionsService,\n    private notification: NotificationService,\n  ) { }\n\n  ngOnInit(): void {\n    let value = 3\n    this.userTransactionsService.yearwiseTransactions({ months: value }).subscribe(res => {\n      this.data = res.response\n    })\n    this.userTransactionsService.weeklyPayments().subscribe(res => {\n      this.weeklyData = res.response\n    })\n    this.userTransactionsService.paymentsReports().subscribe(res => {\n      this.payments = res.response\n    })\n    this.windowSize();\n  }\n  selectMonths(value) {\n    this.userTransactionsService.yearwiseTransactions({ months: value }).subscribe(res => {\n      this.windowSize();\n      this.data = res.response;\n      this.notification.showNotification({\n        type: NotificationType.SUCCESS,\n        payload: {\n          message: 'User Payments Fetched Successfully',\n          statusCode: 200,\n          statusText: 'Successfully',\n          status: 201\n        },\n      });\n    })\n  }\n\n  windowSize() {\n    if (this.width < 760) {\n      this.columnOptions = {\n        is3D: true,\n        responsive: true,\n        width: 350,\n        height: 300,\n        // colors: ['#40C4FF', '#1E88E5', 'red'],\n        legend: { position: 'top', maxLines: 2 },\n        bar: { groupWidth: '50%' },\n        isStacked: false,\n        animation: {\n          duration: 2000,\n          easing: 'out',\n        },\n      };\n    }\n    else {\n      this.columnOptions = {\n        is3D: true,\n        responsive: true,\n        width: 600,\n        height: 350,\n        // colors: ['#40C4FF', '#1E88E5', 'red'],\n        legend: { position: 'top', maxLines: 2 },\n        bar: { groupWidth: '50%' },\n        isStacked: false,\n        animation: {\n          duration: 2000,\n          easing: 'out',\n        },\n      };\n    }\n  }\n\n  onWindowResize(event) {\n    this.width = event.target.innerWidth;\n    this.height = event.target.innerHeight;\n    this.isMobile = this.width < this.mobileWidth;\n    this.windowSize();\n  }\n\n\n}\n","<!-- <div class=\"grid-container\">\n  <mat-grid-list cols=\"4\" rowHeight=\"170px\" style=\"cursor: default;\">\n    <mat-grid-tile>\n      <mat-card class=\"dashboard-card  mat-elevation-z1\" style=\"background-color:#607D8B;color: white\">\n        <mat-card-header>\n          <mat-card-title>\n            <mat-icon>money</mat-icon>&nbsp;\n            <span>Today</span>\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <h1 style=\"text-align: center;font-weight: 500;\" *ngIf=\"payments?.today\">{{payments?.today| currency:'INR'}}</h1>\n          <h1 style=\"text-align: center;font-weight: 500;\"  *ngIf=\"!payments?.today\">0.00</h1>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile>\n      <mat-card class=\"dashboard-card  mat-elevation-z1\" style=\"background-color:  rgb(245, 101, 130);color: white\">\n        <mat-card-header>\n          <mat-card-title>\n            <mat-icon>payments</mat-icon> &nbsp;\n            <span>Current&nbsp;Week</span>\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <h1 style=\"text-align: center;font-weight: 500;\">{{payments?.this_week | currency:'INR'}}</h1>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile>\n      <mat-card class=\"dashboard-card  mat-elevation-z1\" style=\"background-color:  #2196F3;color: white\">\n        <mat-card-header>\n          <mat-card-title>\n            <mat-icon>account_balance_wallet</mat-icon> &nbsp;\n            <span>Current&nbsp;Month</span>\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <h1 style=\"text-align: center;font-weight: 500;\">{{payments?.this_month | currency:'INR'}}</h1>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile>\n      <mat-card class=\"dashboard-card  mat-elevation-z1\" style=\"background-color:mediumpurple;color: white\">\n        <mat-card-header>\n          <mat-card-title>\n            <mat-icon>local_atm</mat-icon> &nbsp;\n            <span>Current&nbsp;Year</span>\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <h1 style=\"text-align: center;font-weight: 500;\">{{payments?.this_year | currency:'INR'}}</h1>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n  <mat-card>\n    <mat-grid-list cols=\"2\" rowHeight=\"400px\">\n      <mat-grid-tile>\n        <mat-card class=\"mat-elevation-z0\">\n          <table>\n            <tr>\n              <td style=\"width: 8%;\">\n                <mat-form-field style=\"font-size: 13px;width: 50%;margin-left: 35px;\">\n                  <mat-label>Select Months</mat-label>\n                  <mat-select>\n                    <mat-option *ngFor=\"let item of months\" [value]=\"item\" (click)=\"selectMonths(item)\">\n                      {{item}}&nbsp;Months</mat-option>\n                  </mat-select>\n                </mat-form-field>\n              </td>\n              <td style=\"width: 20%;margin-left: -50px;\">\n                <h2 style=\"color: #5D6D7E;\">Monthly&nbsp;Payments</h2>\n              </td>\n            </tr>\n          </table>\n          <google-chart [type]=\"type\" [data]=\"data\" [columns]=\"columnNames\" [options]=\"columnOptions\"></google-chart>\n        </mat-card>\n      </mat-grid-tile>\n      <mat-grid-tile>\n        <mat-card class=\"mat-elevation-z0\">\n          <h2 style=\"text-align: center;color: #5D6D7E;\">Weekly&nbsp;Payments</h2>\n          <google-chart [type]=\"type\" [data]=\"weeklyData\" [columns]=\"columnNames\" [options]=\"columnOptions\">\n          </google-chart>\n        </mat-card>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </mat-card>\n</div>\n<br><br> -->\n<div style=\"overflow: hidden;\">\n  <div class=\"row\">\n    <div class=\"col-sm-3\">\n      <mat-card class=\"dashboard\" style=\"background-color:#607D8B;color: white\">\n        <mat-card-header>\n          <mat-card-title>\n            <mat-icon>money</mat-icon>&nbsp;\n            <span>Today</span>\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <h1 style=\"text-align: center;font-weight: 500;\" *ngIf=\"payments?.today\">{{payments?.today| currency:'INR'}}\n          </h1>\n          <h1 style=\"text-align: center;font-weight: 500;\" *ngIf=\"!payments?.today\">₹0.00</h1>\n        </mat-card-content>\n      </mat-card>\n    </div>\n    <div class=\"col-sm-3\">\n      <mat-card class=\"dashboard\" style=\"background-color:  rgb(245, 101, 130);color: white\">\n        <mat-card-header>\n          <mat-card-title>\n            <mat-icon>payments</mat-icon> &nbsp;\n            <span>Current&nbsp;Week</span>\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <h1 style=\"text-align: center;font-weight: 500;\" *ngIf=\"payments?.this_week\">{{payments?.this_week | currency:'INR'}}</h1>\n          <h1 style=\"text-align: center;font-weight: 500;\" *ngIf=\"!payments?.this_week\">₹0.00</h1>\n        </mat-card-content>\n      </mat-card>\n    </div>\n    <div class=\"col-sm-3\">\n      <mat-card class=\"dashboard\" style=\"background-color:  #2196F3;color: white\">\n        <mat-card-header>\n          <mat-card-title>\n            <mat-icon>account_balance_wallet</mat-icon> &nbsp;\n            <span>Current&nbsp;Month</span>\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <h1 style=\"text-align: center;font-weight: 500;\" *ngIf=\"payments?.this_month\">{{payments?.this_month | currency:'INR'}}</h1>\n          <h1 style=\"text-align: center;font-weight: 500;\" *ngIf=\"!payments?.this_month\">₹0.00</h1>\n        </mat-card-content>\n      </mat-card>\n    </div>\n    <div class=\"col-sm-3\">\n      <mat-card class=\"dashboard\" style=\"background-color:mediumpurple;color: white\">\n        <mat-card-header>\n          <mat-card-title>\n            <mat-icon>local_atm</mat-icon> &nbsp;\n            <span>Current&nbsp;Year</span>\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <h1 style=\"text-align: center;font-weight: 500;\" *ngIf=\"payments?.this_year\">{{payments?.this_year | currency:'INR'}}</h1>\n          <h1 style=\"text-align: center;font-weight: 500;\" *ngIf=\"!payments?.this_year\">₹0.00</h1>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </div>\n  <br><br>\n\n  <mat-card>\n    <div class=\"row\">\n      <div class=\"col-sm-4\">\n        <mat-form-field>\n          <mat-label>Select Months</mat-label>\n          <mat-select>\n            <mat-option *ngFor=\"let item of months\" [value]=\"item\" (click)=\"selectMonths(item)\">\n              {{item}}&nbsp;Months</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n      <div class=\"col-sm-4\">\n        <h2 style=\"color: #5D6D7E;\">Monthly&nbsp;Payments</h2>\n\n      </div>\n      <div class=\"col-sm-4\"></div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-sm-6\">\n        <google-chart [type]=\"type\" [data]=\"data\" [columns]=\"columnNames\" [options]=\"columnOptions\"></google-chart>\n      </div>\n      <div class=\"col-sm-6\">\n        <google-chart type=\"PieChart\" [data]=\"data\" [columns]=\"columnNames\" [options]=\"columnOptions\"></google-chart>\n      </div>\n    </div>\n    <br><br>\n    <div class=\"row\">\n      <div class=\"col-sm-4\"> </div>\n      <div class=\"col-sm-4\">\n        <h2 style=\"color: #5D6D7E;\">Weekly&nbsp;Payments</h2>\n      </div>\n      <div class=\"col-sm-4\"></div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-sm-6\">\n        <google-chart [type]=\"type\" [data]=\"weeklyData\" [columns]=\"columnNames\" [options]=\"columnOptions\">\n        </google-chart>\n      </div>\n      <div class=\"col-sm-6\">\n        <google-chart type=\"PieChart\" [data]=\"weeklyData\" [columns]=\"columnNames\" [options]=\"columnOptions\">\n        </google-chart>\n      </div>\n    </div>\n  </mat-card>\n</div>","import { Routes } from '@angular/router';\nimport { ApplicationLayoutComponent, AuthGuard, PaymentDashboardGuard } from '@application/ui';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { PaymentsDashboardComponent } from './payments-dashboard/payments-dashboard.component';\n\nexport const DashboardRoutes: Routes = [\n  {\n    path: '',\n    // component: ApplicationLayoutComponent,\n    runGuardsAndResolvers: 'always',\n    children: [\n      {\n        path: '',\n        component: DashboardComponent,\n        canActivate: [AuthGuard]\n      },\n      {\n        path: 'payments',\n        component: PaymentsDashboardComponent,\n        canActivate: [AuthGuard,PaymentDashboardGuard]\n      },\n      {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: '/dashboard',\n      },\n    ],\n  }\n];\n","\n  <div  style=\"overflow: hidden;\"><br>\n    <div class=\"row\">\n      <div class=\"col-sm-3\" *ngFor=\"let card of cardsArray;let i = index\">\n        <mat-card  routerLink=\"{{card.link}}\" (click)=\"getRouthPath(card.link)\"\n          *ngIf=\"cardsArray[i].active == true\">\n          <table>\n            <tr>\n              <td>\n                <mat-icon>{{card.icon}}</mat-icon>\n              </td>\n              <td>\n                <div class=\"vl\"></div>\n              </td>\n              <td class=\"titleHeading\">\n                <h5>{{card.name}}</h5>\n                <h4>{{card.count.toLocaleString('en-IN')}}</h4>\n              </td>\n            </tr>\n          </table>\n        </mat-card>\n      </div>\n    </div>\n  <!-- <application-spinner *ngIf=\"cardsArray?.length == 0\"></application-spinner> -->\n\n\n\n\n\n  <!-- <mat-grid-list cols=\"4\" rowHeight=\"2:1\" class=\"mainTable\">\n    <mat-grid-tile *ngFor=\"let card of cardsArray;let i = index\">\n      <mat-card class=\"mat-elevation-z6\"  routerLink=\"{{card.link}}\" *ngIf=\"cardsArray[i].active == true\">\n        <table>\n          <tr>\n            <td>\n              <mat-icon>{{card.icon}}</mat-icon>\n            </td>\n            <td>\n              <div class=\"vl\"></div>\n            </td>\n            <td class=\"titleHeading\">\n              <h2>{{card.name}}</h2>\n              <h1>{{card.count}}</h1>\n            </td>\n          </tr>\n        </table>\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list> -->\n\n\n\n\n  <!--  <mat-grid-list cols=\"4\" rowHeight=\"2:1\" class=\"mainTable\">\n    <mat-grid-tile>\n      <mat-card class=\"mat-elevation-z6\">\n        <table>\n          <tr>\n            <td>\n              <mat-icon>auto_stories</mat-icon>\n            </td>\n            <td>\n              <div class=\"vl\"></div>\n            </td>\n            <td class=\"titleHeading\">\n              <h2>Courses</h2>\n              <h1>100</h1>\n            </td>\n          </tr>\n        </table>\n      </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile>\n      <mat-card class=\"mat-elevation-z6\">\n        <table>\n          <tr>\n            <td>\n              <mat-icon>subject</mat-icon>\n            </td>\n            <td>\n              <div class=\"vl\"></div>\n            </td>\n            <td class=\"titleHeading\">\n              <h2>Subjects</h2>\n              <h1>89785</h1>\n            </td>\n          </tr>\n        </table>\n      </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile>\n      <mat-card class=\"mat-elevation-z6\">\n        <table>\n          <tr>\n            <td>\n              <mat-icon>play_circle_outline</mat-icon>\n            </td>\n            <td>\n              <div class=\"vl\"></div>\n            </td>\n            <td class=\"titleHeading\">\n              <h2>Videos</h2>\n              <h1>2566</h1>\n            </td>\n          </tr>\n        </table>\n      </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile>\n      <mat-card class=\"mat-elevation-z6\">\n        <table>\n          <tr>\n            <td>\n              <mat-icon>people</mat-icon>\n            </td>\n            <td>\n              <div class=\"vl\"></div>\n            </td>\n            <td class=\"titleHeading\">\n              <h2>Employee</h2>\n              <h1>48</h1>\n            </td>\n          </tr>\n        </table>\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n\n  <mat-grid-list cols=\"4\" rowHeight=\"2:1\" class=\"mainTable\">\n    <mat-grid-tile>\n      <mat-card class=\"mat-elevation-z6\">\n        <table>\n          <tr>\n            <td>\n              <mat-icon>people</mat-icon>\n            </td>\n            <td>\n              <div class=\"vl\"></div>\n            </td>\n            <td class=\"titleHeading\">\n              <h2>Users</h2>\n              <h1>1000000</h1>\n            </td>\n          </tr>\n        </table>\n      </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile>\n      <mat-card class=\"mat-elevation-z6\">\n        <table>\n          <tr>\n            <td>\n              <mat-icon>quiz</mat-icon>\n            </td>\n            <td>\n              <div class=\"vl\"></div>\n            </td>\n            <td class=\"titleHeading\">\n              <h2>Tests</h2>\n              <h1>10000</h1>\n            </td>\n          </tr>\n        </table>\n      </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile>\n      <mat-card class=\"mat-elevation-z6\">\n        <table>\n          <tr>\n            <td>\n              <mat-icon>subscriptions</mat-icon>\n            </td>\n            <td>\n              <div class=\"vl\"></div>\n            </td>\n            <td class=\"titleHeading\">\n              <h2>Subscriptions</h2>\n              <h1>500000</h1>\n            </td>\n          </tr>\n        </table>\n      </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile>\n      <mat-card class=\"mat-elevation-z6\">\n        <table>\n          <tr>\n            <td>\n              <mat-icon>sell</mat-icon>\n            </td>\n            <td>\n              <div class=\"vl\"></div>\n            </td>\n            <td class=\"titleHeading\">\n              <h2>Coupons</h2>\n              <h1>150</h1>\n            </td>\n          </tr>\n        </table>\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list> -->","import { Component, OnInit } from '@angular/core';\nimport { RoleModulesEnum, RoleSubModulesEnum } from '@application/api-interfaces';\nimport { BannersRepositoryService, HelperService, RolesService } from '@application/ui';\n\n@Component({\n  selector: 'application-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.less']\n})\nexport class DashboardComponent implements OnInit {\n\n  cardsArray = [];\n  courseEnable: boolean;\n  currentUserType: string;\n  roleData:any\n\n  constructor(\n    private roleService: RolesService,\n    private helper: HelperService,\n    private bannerRepo: BannersRepositoryService,\n  ) { }\n\n  async ngOnInit(): Promise<void> {\n    this.currentUserType = localStorage.getItem('currentUserType');\n    let role = localStorage.getItem('role');\n    this.roleData = localStorage.getItem('roleData');\n    if (!this.roleData) {\n     let data = await this.roleService.getRoleById(role).toPromise()\n      localStorage.setItem('roleData', JSON.stringify(data.response));\n      location.reload()\n    }\n\n    // this.roleService.getRoleById(role).subscribe(data => {\n    //   localStorage.setItem('roleData', JSON.stringify(data.response));\n    // })\n\n    await this.loadPermissions();\n\n    // this.cardsArray = [\n    //   { icon: \"auto_stories\", name: \"Courses\", count: 150, link: '/manage/courses/list', active: true },\n    //   { icon: \"subject\", name: \"Subjects\", count: 1800, link: '/bank/syllabus/list', active: true },\n    //   { icon: \"play_circle_outline\", name: \"Videos\", count: 6080, link: '/bank/videoCipher/list', active: true },\n    //   { icon: \"people\", name: \"Employee\", count: 64, link: '/manage/employee/list', active: true },\n    //   { icon: \"people\", name: \"Users\", count: 100000, link: '/manage/users/list', active: true },\n    //   { icon: \"quiz\", name: \"Tests\", count: 1000000, link: '/test-series/categories/list', active: true },\n    //   { icon: \"subscriptions\", name: \"Subscriptions\", count: 8978, link: '/manage/subscriptions/list', active: true },\n    //   { icon: \"sell\", name: \"Coupons\", count: 268, link: '/manage/coupons/list', active: true },\n    // ]\n\n  }\n  // loadPermissions(){\n  //   this.cardsArray.map(it => {\n  //     if (it.name.includes('Courses')) {\n  //       return it.active = false;\n  //     }\n  //   });\n  // }\n  getRoutePath(path, basePath) {\n    localStorage.setItem('basePath', basePath);\n    localStorage.setItem('routePath', path);\n    localStorage.setItem('guardRoutePath', path);\n    localStorage.setItem('guardBasePath', basePath);\n  }\n  async loadPermissions() {\n    let modules = this.helper.enumtoArray(RoleModulesEnum);\n    let subM = this.helper.enumtoArray(RoleSubModulesEnum);\n    let role = localStorage.getItem('role');\n    let count = await this.bannerRepo.getDashboardCount().toPromise();\n    console.log('count',count);\n    \n\n    if (role) {\n      let r = await this.roleService.getRoleById(role).toPromise()\n      r.response[0].rolePermissions.map(res => {\n        if (res.module[0].title == modules.type.COURSES) {\n          res.subModules.find(e => {\n            if (e.title == subM.type.VIEW) {\n              this.cardsArray.push({ icon: \"auto_stories\", name: \"Courses\", count: count.response[0].Course, link: '/manage/courses/list', active: true })\n              this.getRoutePath('courses','manage')\n            }\n          })\n        }\n        else if (res.module[0].title == modules.type.SYLLABUS) {\n          res.subModules.find(e => {\n            if (e.title == subM.type.VIEW) {\n              this.cardsArray.push({ icon: \"subject\", name: \"Subjects\", count: count.response[0].Syllabus, link: '/bank/syllabus/list', active: true })\n              this.getRoutePath('syllabus','bank')\n            }\n          })\n        }\n        else if (res.module[0].title == modules.type.VIDEO_CYPHER) {\n          res.subModules.find(e => {\n            if (e.title == subM.type.VIEW) {\n              this.cardsArray.push({ icon: \"play_circle_outline\", name: \"Videos\", count: count.response[0].Videos, link: '/bank/videoCipher/list', active: true })\n              this.getRoutePath('videoSubjects','videos')\n            }\n          })\n        }\n        else if (res.module[0].title == modules.type.EMPLOYEE) {\n          res.subModules.find(e => {\n            if (e.title == subM.type.VIEW) {\n              this.cardsArray.push({ icon: \"people\", name: \"Employee\", count: count.response[0].Employee, link: '/manage/employee/list', active: true })\n              this.getRoutePath('employee','manage')\n            }\n          })\n        }\n        else if (res.module[0].title == modules.type.USERS) {\n          res.subModules.find(e => {\n            if (e.title == subM.type.VIEW) {\n              this.cardsArray.push({ icon: \"people\", name: \"Users\", count: count.response[0].Users, link: '/manage/users/list', active: true });\n              this.cardsArray.push({ icon: \"people\", name: \"Active Users\", count: count.response[0].activeUsers, link: '/manage/users/list', active: true })\n              this.cardsArray.push({ icon: \"people\", name: \"SubscribedUsers\", count: count.response[0].SubscribedUserCount, link: '/manage/users/list', active: true })\n              this.getRoutePath('user','manage')\n            }\n          })\n        }\n        else if (res.module[0].title == modules.type.TESTS) {\n          res.subModules.find(e => {\n            if (e.title == subM.type.VIEW) {\n              this.cardsArray.push({ icon: \"quiz\", name: \"Tests\", count: count.response[0].Tests, link: '/test-series/categories/list', active: true })\n              this.getRoutePath('categories','test-series')\n            }\n          })\n        }\n        else if (res.module[0].title == modules.type.SUBSCRIPTIONS) {\n          res.subModules.find(e => {\n            if (e.title == subM.type.VIEW) {\n              this.cardsArray.push({ icon: \"subscriptions\", name: \"Packages\", count: count.response[0].Subscription, link: '/manage/subscriptions/list', active: true })\n              this.getRoutePath('subscriptions','manage')\n            }\n          })\n        }\n        else if (res.module[0].title == modules.type.COUPONS) {\n          res.subModules.find(e => {\n            if (e.title == subM.type.VIEW) {\n              this.cardsArray.push({ icon: \"sell\", name: \"Coupons\", count: count.response[0].Coupons, link: '/manage/coupons/list', active: true })\n              this.getRoutePath('coupons','manage')\n            }\n          })\n        }\n        else if (res.module[0].title == modules.type.AGENTS) {\n          res.subModules.find(e => {\n            if (e.title == subM.type.AGENT_COUPONS) {\n              if (this.currentUserType == 'AGENT') {\n                this.cardsArray.push({ icon: \"sell\", name: \"Agents\", count: 0, link: '/agent/coupons', active: true })\n                this.getRoutePath('faculty','manage')\n              }\n            }\n          })\n        }\n      });\n    }\n    this.cardsArray=this.cardsArray.sort((a,b) => (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0))\n\n  }\n\n\n  getRouthPath(url) {\n    let currentURL = url;\n    let pathName = currentURL.split(\"/\").join(\" \");\n    let basePath = pathName.split(\" \")[1];\n    let routePath = pathName.split(\" \")[2];\n    localStorage.setItem('basePath', basePath);\n    localStorage.setItem('routePath', routePath);\n  }\n\n}\n"]}
{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"tslib\"","webpack:///external \"@nestjs/common\"","webpack:///external \"@nestjs/mongoose\"","webpack:///external \"class-validator\"","webpack:///./libs/api-interfaces/src/index.ts","webpack:///external \"mongoose\"","webpack:///external \"@nestjs/swagger\"","webpack:///./libs/shared-api/src/index.ts","webpack:///./libs/auth/src/index.ts","webpack:///./libs/shared-api/src/lib/schema/index.ts","webpack:///./libs/shared-api/src/lib/schema/course.schema.ts","webpack:///./libs/shared-api/src/lib/schema/syllabus.schema.ts","webpack:///external \"bcrypt\"","webpack:///external \"uuid\"","webpack:///./libs/shared-api/src/lib/services/firebase-service.ts","webpack:///./libs/auth/src/lib/services/auth.service.ts","webpack:///external \"@nestjs/core\"","webpack:///./libs/shared-api/src/lib/schema/user.schema.ts","webpack:///external \"@nestjs/passport\"","webpack:///./libs/shared-api/src/lib/schema/subscription.schema.ts","webpack:///./libs/shared-api/src/lib/schema/organization.schema.ts","webpack:///./libs/shared-api/src/lib/helpers/index.ts","webpack:///./apps/manage-api/src/app/modules/organizations/services/index.ts","webpack:///./libs/shared-api/src/lib/schema/employee.schema.ts","webpack:///./apps/manage-api/src/app/modules/courses/courses.module.ts","webpack:///./libs/shared-api/src/lib/schema/qbank-subject.schema.ts","webpack:///./libs/shared-api/src/lib/schema/ts-categories.schema.ts","webpack:///./libs/shared-api/src/lib/schema/faculty.schema.ts","webpack:///./libs/shared-api/src/lib/schema/questions.schema.ts","webpack:///./libs/shared-api/src/lib/mobile-services/index.ts","webpack:///./libs/shared-api/src/lib/services/index.ts","webpack:///external \"rxjs\"","webpack:///external \"@nestjs/jwt\"","webpack:///./libs/shared-api/src/lib/helpers/move-documents-in-bulk/move-documents-in-bulk.service.ts","webpack:///./libs/shared-api/src/lib/helpers/user-status/user-status.service.ts","webpack:///./libs/shared-api/src/lib/mobile-services/home.service.ts","webpack:///./libs/shared-api/src/lib/mobile-services/qbank/qbank-subject.service.ts","webpack:///./libs/shared-api/src/lib/mobile-services/qbank/qbank.service.ts","webpack:///./libs/shared-api/src/lib/mobile-services/qbank/submit-topic-results/submit-topic-results.service.ts","webpack:///./libs/shared-api/src/lib/mobile-services/qbank/submit-topic/submit-topic.service.ts","webpack:///./libs/shared-api/src/lib/mobile-services/subscription.service.ts","webpack:///./libs/shared-api/src/lib/mobile-services/test-series/submit-test/submit-test.service.ts","webpack:///./libs/shared-api/src/lib/mobile-services/test-series/test-category.service.ts","webpack:///./libs/shared-api/src/lib/mobile-services/test-series/test-results/test-results.service.ts","webpack:///./libs/shared-api/src/lib/mobile-services/test-series/tests.service.ts","webpack:///./libs/shared-api/src/lib/mobile-services/users.service.ts","webpack:///./libs/shared-api/src/lib/schema/test.schema.ts","webpack:///./libs/shared-api/src/lib/schema/video-subject.schema.ts","webpack:///./libs/shared-api/src/lib/schema/roles.schema.ts","webpack:///./libs/shared-api/src/lib/schema/role-submodules.schema.ts","webpack:///./libs/shared-api/src/lib/schema/department.schema.ts","webpack:///./libs/shared-api/src/lib/mobile-services/video-subject.service.ts","webpack:///./libs/shared-api/src/lib/mobile-services/videos.service.ts","webpack:///./libs/shared-api/src/lib/services/about-us.service.ts","webpack:///./libs/shared-api/src/lib/services/banners.service.ts","webpack:///./libs/shared-api/src/lib/services/careers.service.ts","webpack:///./libs/shared-api/src/lib/services/coupons.service.ts","webpack:///./libs/shared-api/src/lib/services/courses.service.ts","webpack:///./libs/shared-api/src/lib/services/faculty.service.ts","webpack:///./libs/shared-api/src/lib/services/qbank-subject.service.ts","webpack:///./libs/shared-api/src/lib/services/qbank.service.ts","webpack:///./libs/shared-api/src/lib/services/questions.service.ts","webpack:///./libs/shared-api/src/lib/services/sample.service.ts","webpack:///./libs/shared-api/src/lib/services/subscription.service.ts","webpack:///./libs/shared-api/src/lib/services/syllabus.service.ts","webpack:///./libs/shared-api/src/lib/services/tags.service.ts","webpack:///./libs/shared-api/src/lib/services/test-series/test-category.service.ts","webpack:///./libs/shared-api/src/lib/services/test-series/tests.service.ts","webpack:///./libs/shared-api/src/lib/services/test-series/test-series.service.ts","webpack:///./libs/shared-api/src/lib/services/user-messages.service.ts","webpack:///./libs/shared-api/src/lib/services/users.service.ts","webpack:///./libs/shared-api/src/lib/services/video-cipher.service.ts","webpack:///./libs/shared-api/src/lib/services/video-subject.service.ts","webpack:///./libs/shared-api/src/lib/services/videos.service.ts","webpack:///./libs/shared-api/src/lib/services/pearls.service.ts","webpack:///./libs/shared-api/src/lib/services/employee.service.ts","webpack:///./libs/shared-api/src/lib/services/user-transactions.service.ts","webpack:///./libs/shared-api/src/lib/services/role-values.service.ts","webpack:///./libs/shared-api/src/lib/services/role-submodules.service.ts","webpack:///./libs/shared-api/src/lib/services/roles.service.ts","webpack:///./libs/shared-api/src/lib/services/agent-transaction.service.ts","webpack:///./libs/shared-api/src/lib/services/pearl-subjects.service.ts","webpack:///./libs/shared-api/src/lib/services/suggested-videos.service.ts","webpack:///./libs/shared-api/src/lib/services/suggested-tests.service.ts","webpack:///./libs/shared-api/src/lib/services/suggested-qbank.service.ts","webpack:///./libs/shared-api/src/lib/services/mcq-of-the-day.service.ts","webpack:///./libs/shared-api/src/lib/services/notification.service.ts","webpack:///./libs/shared-api/src/lib/services/logs.service.ts","webpack:///./libs/shared-api/src/lib/services/feedback.service.ts","webpack:///./libs/shared-api/src/lib/services/department.service.ts","webpack:///./libs/shared-api/src/lib/interceptors/transform/transform.interceptor.ts","webpack:///./apps/manage-api/src/app/modules/notifications/notifications.module.ts","webpack:///./libs/auth/src/lib/auth.controller.ts","webpack:///./libs/auth/src/lib/strategies/jwt-strategy.ts","webpack:///./libs/auth/src/lib/strategies/local-strategy.ts","webpack:///./libs/auth/src/lib/guards/jwt-auth.guard.ts","webpack:///./libs/auth/src/lib/guards/local-auth.guard.ts","webpack:///./apps/manage-api/src/app/modules/tags/tags.module.ts","webpack:///./apps/manage-api/src/app/modules/coupons/coupon.module.ts","webpack:///./apps/manage-api/src/app/modules/organizations/organizations.module.ts","webpack:///./apps/manage-api/src/app/modules/organizations/controllers/organizations.controller.ts","webpack:///./apps/manage-api/src/app/modules/organizations/services/organizations.service.ts","webpack:///./apps/manage-api/src/app/modules/organizations/services/courses.service.ts","webpack:///./apps/manage-api/src/app/modules/organizations/controllers/courses.controller.ts","webpack:///./apps/manage-api/src/app/modules/permissions/permissions.module.ts","webpack:///./apps/manage-api/src/app/modules/portal/portal.module.ts","webpack:///./apps/manage-api/src/app/modules/q-bank/q-bank.module.ts","webpack:///./apps/manage-api/src/app/modules/questions/questions.module.ts","webpack:///./apps/manage-api/src/app/modules/sample/sample.module.ts","webpack:///./apps/manage-api/src/app/modules/subscriptions/subscriptions.module.ts","webpack:///./apps/manage-api/src/app/modules/syllabus/syllabus.module.ts","webpack:///./apps/manage-api/src/app/modules/test-series/test-series.module.ts","webpack:///./apps/manage-api/src/app/modules/users/users.module.ts","webpack:///./apps/manage-api/src/app/modules/video-cipher/video-cipher.module.ts","webpack:///./apps/manage-api/src/app/modules/videos/videos.module.ts","webpack:///./apps/manage-api/src/app/modules/pearls/pearls.module.ts","webpack:///./apps/manage-api/src/app/modules/user-transactions/user-transactions.module.ts","webpack:///./apps/manage-api/src/app/modules/role-values/role-values.module.ts","webpack:///./apps/manage-api/src/app/modules/role-submodules/role-submodules.module.ts","webpack:///./apps/manage-api/src/app/modules/roles/roles.module.ts","webpack:///./apps/manage-api/src/app/modules/agent-transactions/agent-transactions.module.ts","webpack:///./apps/manage-api/src/app/modules/pearl-subjects/pearl-subjects.module.ts","webpack:///./apps/manage-api/src/app/modules/suggested-videos/suggested-videos.module.ts","webpack:///./apps/manage-api/src/app/modules/suggested-tests/suggested-tests.module.ts","webpack:///./apps/manage-api/src/app/modules/suggested-qbank/suggested-qbank.module.ts","webpack:///./apps/manage-api/src/app/modules/mcq-of-the-day/mcq-of-the-day.module.ts","webpack:///./apps/manage-api/src/app/modules/logs/logs.module.ts","webpack:///./apps/manage-api/src/app/modules/feedback/feedback.module.ts","webpack:///./apps/manage-api/src/app/modules/department/department.module.ts","webpack:///./config/firebase-configuration.js","webpack:///external \"firebase-admin\"","webpack:///external \"rxjs/operators\"","webpack:///external \"passport-jwt\"","webpack:///./libs/shared-api/src/lib/shared-api.module.ts","webpack:///./libs/api-interfaces/src/lib/api-interfaces.ts","webpack:///./libs/api-interfaces/src/lib/career-interface.ts","webpack:///./libs/api-interfaces/src/lib/question-interface.ts","webpack:///./libs/api-interfaces/src/lib/syllabus-interface.ts","webpack:///./libs/api-interfaces/src/lib/user-interface.ts","webpack:///./libs/api-interfaces/src/lib/students-old/index.ts","webpack:///./libs/api-interfaces/src/lib/students-old/form.interface.ts","webpack:///./libs/api-interfaces/src/lib/students-old/xquestion.interface.ts","webpack:///./libs/api-interfaces/src/lib/students-old/video.interface.ts","webpack:///./libs/api-interfaces/src/lib/video-interface.ts","webpack:///./libs/api-interfaces/src/lib/role-values-interface.ts","webpack:///./libs/shared-api/src/lib/schema/about-us.schema.ts","webpack:///./libs/shared-api/src/lib/schema/banner.schema.ts","webpack:///./libs/shared-api/src/lib/schema/career.schema.ts","webpack:///./libs/shared-api/src/lib/schema/coupon.schema.ts","webpack:///./libs/shared-api/src/lib/schema/user-message.schema.ts","webpack:///./libs/shared-api/src/lib/schema/qbank.schema.ts","webpack:///./libs/shared-api/src/lib/schema/qbank-question.schema.ts","webpack:///./libs/shared-api/src/lib/schema/report-error.schema.ts","webpack:///./libs/shared-api/src/lib/schema/sample.schema.ts","webpack:///./libs/shared-api/src/lib/schema/submitted-qbank-topic.schema.ts","webpack:///./libs/shared-api/src/lib/schema/submitted-test.schema.ts","webpack:///./libs/shared-api/src/lib/schema/tags.schema.ts","webpack:///./libs/shared-api/src/lib/schema/test-question.schema.ts","webpack:///./libs/shared-api/src/lib/schema/video.schema.ts","webpack:///./libs/shared-api/src/lib/schema/pearls.schema.ts","webpack:///./libs/shared-api/src/lib/schema/user-transactions.schema.ts","webpack:///./libs/shared-api/src/lib/schema/role-values.schema.ts","webpack:///./libs/shared-api/src/lib/schema/agent-transactions.schema.ts","webpack:///./libs/shared-api/src/lib/schema/pearl-subject.schema.ts","webpack:///./libs/shared-api/src/lib/schema/suggested-videos.schema.ts","webpack:///./libs/shared-api/src/lib/schema/suggested-tests.schema.ts","webpack:///./libs/shared-api/src/lib/schema/suggested-qbank.schema.ts","webpack:///./libs/shared-api/src/lib/schema/mcq-of-the-day.schema.ts","webpack:///./libs/shared-api/src/lib/schema/notifications.schema.ts","webpack:///./libs/shared-api/src/lib/schema/user-notifications.schema.ts","webpack:///./libs/shared-api/src/lib/schema/logs.schema.ts","webpack:///./libs/shared-api/src/lib/schema/daily-test-questions.schema.ts","webpack:///./libs/shared-api/src/lib/schema/disableuserfortestsubmits.schema.ts","webpack:///./libs/shared-api/src/lib/schema/feedback.sheema.ts","webpack:///./libs/shared-api/src/lib/schema/ticket.schema.ts","webpack:///external \"request\"","webpack:///external \"date-and-time\"","webpack:///./libs/shared-api/src/lib/dto/index.ts","webpack:///./libs/shared-api/src/lib/dto/create-about-us.dto.ts","webpack:///./libs/shared-api/src/lib/dto/create-banner.dto.ts","webpack:///./libs/shared-api/src/lib/dto/create-tags.dto.ts","webpack:///./libs/shared-api/src/lib/dto/create-sample.dto.ts","webpack:///./libs/shared-api/src/lib/dto/create-coupon.dto.ts","webpack:///./libs/shared-api/src/lib/dto/create-course.dto.ts","webpack:///./libs/shared-api/src/lib/dto/create-faculty.dto.ts","webpack:///./libs/shared-api/src/lib/dto/create-job.dto.ts","webpack:///./libs/shared-api/src/lib/dto/create-question.dto.ts","webpack:///./libs/shared-api/src/lib/dto/create-syllabus.dto.ts","webpack:///./libs/shared-api/src/lib/dto/create-user.dto.ts","webpack:///./libs/shared-api/src/lib/dto/register-user.dto.ts","webpack:///./libs/shared-api/src/lib/dto/create-ts-category.dto.ts","webpack:///./libs/shared-api/src/lib/dto/create-test.dto.ts","webpack:///./libs/shared-api/src/lib/dto/create-user-message.dto.ts","webpack:///./libs/shared-api/src/lib/dto/create-qbank.dto.ts","webpack:///./libs/shared-api/src/lib/dto/create-qbank-subject.dto.ts","webpack:///./libs/shared-api/src/lib/dto/create-subscription.dto.ts","webpack:///./libs/shared-api/src/lib/dto/submit-qbank-topic.dto.ts","webpack:///./libs/shared-api/src/lib/dto/submit-test.dto.ts","webpack:///./libs/shared-api/src/lib/dto/create-video.dto.ts","webpack:///./libs/shared-api/src/lib/dto/create-video-subject.dto.ts","webpack:///./libs/shared-api/src/lib/dto/report-error.dto.ts","webpack:///./libs/shared-api/src/lib/dto/start-test.dto.ts","webpack:///./libs/shared-api/src/lib/dto/start-topic.dto.ts","webpack:///./libs/shared-api/src/lib/dto/stop-test.dto.ts","webpack:///./libs/shared-api/src/lib/dto/stop-topic.dto.ts","webpack:///./libs/shared-api/src/lib/dto/create-pearls.dto.ts","webpack:///./libs/shared-api/src/lib/dto/create-employee.dto.ts","webpack:///./libs/shared-api/src/lib/dto/create-transactions.dto.ts","webpack:///./libs/shared-api/src/lib/dto/create-role-values.dto.ts","webpack:///./libs/shared-api/src/lib/dto/create-role-submodules.dto.ts","webpack:///./libs/shared-api/src/lib/dto/create-roles.dto.ts","webpack:///./libs/shared-api/src/lib/dto/create-agent-transactions.dto.ts","webpack:///./libs/shared-api/src/lib/dto/create-pearl-subjects.dto.ts","webpack:///./libs/shared-api/src/lib/dto/create-suggested-video.dto.ts","webpack:///./libs/shared-api/src/lib/dto/create-suggested-tests.dto.ts","webpack:///./libs/shared-api/src/lib/dto/create-suggested-qbank.dto.ts","webpack:///./libs/shared-api/src/lib/dto/create-mcq-of-the-day.dto.ts","webpack:///./libs/shared-api/src/lib/dto/create-logs.dto.ts","webpack:///./libs/shared-api/src/lib/dto/create-department.dto.ts","webpack:///./libs/shared-api/src/lib/interceptors/index.ts","webpack:///./libs/auth/src/lib/auth.module.ts","webpack:///./libs/auth/src/lib/guards/index.ts","webpack:///external \"body-parser\"","webpack:///external \"fs\"","webpack:///external \"helmet\"","webpack:///./apps/manage-api/src/app/app.module.ts","webpack:///./apps/manage-api/src/app/environments/environment.ts","webpack:///./apps/manage-api/src/app/modules/index.ts","webpack:///external \"@nestjs/config\"","webpack:///./libs/auth/src/lib/strategies/index.ts","webpack:///external \"passport-local\"","webpack:///./apps/manage-api/src/app/modules/notifications/notifications.controller.ts","webpack:///./apps/manage-api/src/app/modules/banners/banners.module.ts","webpack:///./apps/manage-api/src/app/modules/banners/banners.controller.ts","webpack:///./apps/manage-api/src/app/modules/tags/tags.controller.ts","webpack:///./apps/manage-api/src/app/modules/coupons/coupon.controller.ts","webpack:///./apps/manage-api/src/app/modules/courses/courses.controller.ts","webpack:///./apps/manage-api/src/app/modules/faculty/faculty.module.ts","webpack:///./apps/manage-api/src/app/modules/faculty/faculty.controller.ts","webpack:///./apps/manage-api/src/app/modules/organizations/controllers/index.ts","webpack:///./apps/manage-api/src/app/modules/portal/about-us.controller.ts","webpack:///./apps/manage-api/src/app/modules/portal/careers.controller.ts","webpack:///./apps/manage-api/src/app/modules/portal/contact-us.controller.ts","webpack:///./apps/manage-api/src/app/modules/q-bank/qbank-subjects.controller.ts","webpack:///./apps/manage-api/src/app/modules/q-bank/qbank.controller.ts","webpack:///./apps/manage-api/src/app/modules/questions/questions.controller.ts","webpack:///./apps/manage-api/src/app/modules/sample/sample.controller.ts","webpack:///./apps/manage-api/src/app/modules/subscriptions/subscriptions.controller.ts","webpack:///./apps/manage-api/src/app/modules/syllabus/syllabus.controller.ts","webpack:///./apps/manage-api/src/app/modules/test-series/test-category.controller.ts","webpack:///./apps/manage-api/src/app/modules/test-series/tests.controller.ts","webpack:///./apps/manage-api/src/app/modules/test-series/test-series.controller.ts","webpack:///./apps/manage-api/src/app/modules/users/users.controller.ts","webpack:///./apps/manage-api/src/app/modules/video-cipher/video-cipher.controller.ts","webpack:///./apps/manage-api/src/app/modules/videos/videos-subjects.controller.ts","webpack:///./apps/manage-api/src/app/modules/videos/videos.controller.ts","webpack:///./apps/manage-api/src/app/modules/pearls/pearls.controller.ts","webpack:///./apps/manage-api/src/app/modules/employee/employee.module.ts","webpack:///./apps/manage-api/src/app/modules/employee/employee.controller.ts","webpack:///./apps/manage-api/src/app/modules/user-transactions/user-transactions.controller.ts","webpack:///./apps/manage-api/src/app/modules/role-values/role-values.controller.ts","webpack:///./apps/manage-api/src/app/modules/role-submodules/role-submodules.controller.ts","webpack:///./apps/manage-api/src/app/modules/roles/roles.controller.ts","webpack:///./apps/manage-api/src/app/modules/agent-transactions/agent-transactions.controller.ts","webpack:///./apps/manage-api/src/app/modules/pearl-subjects/pearl-subjects.controller.ts","webpack:///./apps/manage-api/src/app/modules/suggested-videos/suggested-videos.controller.ts","webpack:///./apps/manage-api/src/app/modules/suggested-tests/suggested-tests.controller.ts","webpack:///./apps/manage-api/src/app/modules/suggested-qbank/suggested-qbank.controller.ts","webpack:///./apps/manage-api/src/app/modules/mcq-of-the-day/mcq-of-the-day.controller.ts","webpack:///./apps/manage-api/src/app/modules/logs/logs.controller.ts","webpack:///./apps/manage-api/src/app/modules/feedback/feedback.controller.ts","webpack:///./apps/manage-api/src/app/modules/department/department.controller.ts","webpack:///./apps/manage-api/src/main.ts","webpack:///external \"http\"","webpack:///external \"https\"","webpack:///./config sync ^\\.\\/.*\\-firebase\\.json$"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;AClFA,kC;;;;;;ACAA,2C;;;;;;ACAA,6C;;;;;;ACAA,4C;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;AACE;AACF;AACE;AACA;AACA;AACC;AACK;AACN;AACE;AACI;AACJ;AACJ;AACQ;AACV;AACG;AACM;AACN;AACkB;AACP;AACN;AACP;AACG;AACK;AACI;AACC;AACJ;;;;;;;AC1B7C,qwC;AACT;AACO;AACT;AACH;AACS;;;;;;;;ACLnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkkC;AACF;AACA;AACA;AACA;AACC;AACE;AACG;AACA;AACP;AACS;AACD;AACD;AACN;AACe;AACP;AACF;AACJ;AACJ;AACS;AACA;AACT;AACA;AACC;AACQ;AACP;AACE;AACU;AACP;AACI;AACT;AACa;AACN;AACG;AACD;AACA;AACD;AACD;AACK;AACd;AACgB;AA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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 297);\n","module.exports = require(\"tslib\");","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/mongoose\");","module.exports = require(\"class-validator\");","export * from './lib/api-interfaces';\nexport * from './lib/banner-interface';\nexport * from './lib/tags-interface';\nexport * from './lib/career-interface';\nexport * from './lib/coupon-interface';\nexport * from './lib/course-interface';\nexport * from './lib/faculty-interface';\nexport * from './lib/organization-interface';\nexport * from './lib/portal-interface';\nexport * from './lib/question-interface';\nexport * from './lib/subscription-interface';\nexport * from './lib/syllabus-interface';\nexport * from './lib/user-interface';\nexport * from './lib/user-message-interface';\nexport * from './lib/students-old';\nexport * from './lib/video-interface';\nexport * from './lib/test-series-interface';\nexport * from './lib/qbank-interface';\nexport * from './lib/submit-user-qbank-topic-interface';\nexport * from './lib/submit-user-test-interface';\nexport * from './lib/vdo-cipher-interface';\nexport * from './lib/tag-interface';\nexport * from './lib/pearls-interface';\nexport * from './lib/role-values-interface';\nexport * from './lib/role-submodules.interface';\nexport * from './lib/role-permissions-interface';\nexport * from './lib/transactions-interface';","module.exports = require(\"mongoose\");","module.exports = require(\"@nestjs/swagger\");","export * from './lib/shared-api.module';\nexport * from './lib/services';\nexport * from './lib/mobile-services';\nexport * from './lib/schema';\nexport * from './lib/dto';\nexport * from './lib/interceptors';\n","export * from './lib/auth.module';\nexport * from './lib/services/auth.service';\nexport * from './lib/auth.controller';\nexport * from './lib/guards';\n","export * from './about-us.schema';\nexport * from './banner.schema';\nexport * from './career.schema';\nexport * from './coupon.schema';\nexport * from './course.schema';\nexport * from './faculty.schema';\nexport * from './questions.schema';\nexport * from './organization.schema';\nexport * from './user-message.schema';\nexport * from './qbank.schema';\nexport * from './qbank-question.schema';\nexport * from './qbank-subject.schema';\nexport * from './report-error.schema';\nexport * from './sample.schema';\nexport * from './submitted-qbank-topic.schema';\nexport * from './submitted-test.schema';\nexport * from './subscription.schema';\nexport * from './syllabus.schema';\nexport * from './tags.schema';\nexport * from './ts-categories.schema';\nexport * from './test-question.schema';\nexport * from './test.schema';\nexport * from './user.schema';\nexport * from './video.schema';\nexport * from './video-subject.schema';\nexport * from './pearls.schema';\nexport * from './employee.schema';\nexport * from  './user-transactions.schema';\nexport * from './role-values.schema';\nexport * from './role-submodules.schema';\nexport * from  './roles.schema';\nexport * from  './agent-transactions.schema';\nexport * from './pearl-subject.schema';\nexport * from './suggested-videos.schema';\nexport * from './suggested-tests.schema';\nexport * from './suggested-qbank.schema';\nexport * from './mcq-of-the-day.schema';\nexport * from './notifications.schema';\nexport * from './user-notifications.schema';\nexport * from './logs.schema';\nexport * from './daily-test-questions.schema';\nexport * from './disableuserfortestsubmits.schema';\nexport * from './feedback.sheema';\nexport * from './department.schema';\nexport * from './ticket.schema';\n","import { CourseFlagsInterface, KeyInterface, UserKeyInterface } from '@application/api-interfaces';\nimport { Organization } from '@application/shared-api';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Syllabus } from './syllabus.schema';\nimport { User } from './user.schema';\n\n@Schema()\nexport class Course extends mongoose.Document {\n\n  @Prop({ required: true })\n  uuid: string;\n\n  @Prop()\n  id: string;\n\n  @Prop({ required: true })\n  title: string;\n\n  @Prop({ required: false })\n  imgUrl: string;\n\n  @Prop({ required: true })\n  order: number;\n\n  // @Prop([{ type: mongoose.Schema.Types.ObjectId, ref: User.name }])\n  // users: string[];\n\n  @Prop([{ type: mongoose.Schema.Types.ObjectId, ref: Syllabus.name }])\n  syllabus: string[];\n\n  @Prop([{ type: mongoose.Schema.Types.ObjectId }])\n  organizations: string[];\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  createdOn?: Date;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  modifiedOn?: Date;\n\n  @Prop({ required: true, type: Object })\n  createdBy: UserKeyInterface;\n\n  @Prop({ type: Object })\n  modifiedBy: UserKeyInterface;\n\n  @Prop({ required: true, type: Object })\n  flags: CourseFlagsInterface;\n}\n\nexport const CourseSchema = SchemaFactory.createForClass(Course);\nCourseSchema.set('validateBeforeSave', true);\n","import {\n  KeyInterface,\n  SyllabusFlagsInterface, UserKeyInterface,\n} from '@application/api-interfaces';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport * as mongoose from 'mongoose';\nimport { CourseSchema } from './course.schema';\n\n@Schema()\nexport class Syllabus extends mongoose.Document {\n\n  @Prop({ required: true })\n  uuid: string;\n\n  @Prop()\n  id: string;\n\n  @Prop({ required: true })\n  title: string;\n\n  @Prop({ required: true })\n  shortcut: string;\n\n  @Prop({ required: true })\n  order: number;\n\n  @Prop({ required: false })\n  totalVideos?: number;\n\n  @Prop({\n    required: true,\n    type: String,\n    enum: ['SUBJECT', 'CHAPTER', 'TOPIC', 'SUBTOPIC'],\n  })\n  type: string;\n\n  @Prop({ required: false })\n  imgUrlVideos: string;\n\n  @Prop()\n  imgUrlQbank?: string;\n\n  @Prop()\n  suggestedBanner?: string;\n\n  @Prop([{ type: mongoose.Schema.Types.ObjectId, ref: Syllabus.name }])\n  parents?: string[];\n\n  @Prop([{ type: mongoose.Schema.Types.ObjectId, ref: Syllabus.name }])\n  children?: string[];\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  createdOn?: Date;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  modifiedOn?: Date;\n\n  @Prop({ required: true, type: Object })\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user created it'\n  })\n  createdBy: UserKeyInterface;\n\n  @Prop({ type: Object })\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user modified it'\n  })\n  modifiedBy: UserKeyInterface;\n\n  @Prop({ required: true, type: Object })\n  flags: SyllabusFlagsInterface;\n}\n\nexport const SyllabusSchema = SchemaFactory.createForClass(Syllabus);\nSyllabusSchema.set('validateBeforeSave', true);\n","module.exports = require(\"bcrypt\");","module.exports = require(\"uuid\");","import * as admin from 'firebase-admin';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class FirebaseService {\n  private instances: Map<string, admin.app.App> = new Map();\n\n  getInstance(instanceName: string): admin.app.App {\n    if (!this.instances.has(instanceName)) {\n      const serviceAccount = require(`../../../../../config/${instanceName}-firebase.json`);\n      \n      const firebaseApp = admin.initializeApp({\n        credential: admin.credential.cert(serviceAccount),\n        databaseURL: `https://${instanceName}.firebaseio.com`\n      }, instanceName);\n      this.instances.set(instanceName, firebaseApp);\n    }\n    return this.instances.get(instanceName);\n  }\n}\n","import { ResponseInterface } from '@application/api-interfaces';\nimport { Employee, EmployeeService, User, UsersService } from '@application/shared-api';\nimport { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private employeeService: EmployeeService,\n    private jwtService: JwtService\n  ) {}\n\n  // async validateUser(request: any): Promise<User> {\n  //   return this.usersService.findByUuid(request.sub).then((val) => {\n  //     if (val) {\n  //       console.log('AuthService validateUser', val);\n\n  //       return val;\n  //     }\n      \n  //     return null;\n  //   });\n  // }\n\n  async validateUser(request: any): Promise<Employee> {\n    return this.employeeService.findByUuid(request.sub).then((val) => {\n      if (val) {\n        // console.log('AuthService validateUser', val);\n        return val;\n      }\n      return null;\n    });\n  }\n\n  async login(user: User): Promise<User> {\n    const payload = { username: user.mobile, sub: user.uuid };\n    user.accessToken = this.jwtService.sign(payload);\n    // user.save()\n    return user;\n  }\n\n\n  async loginCheck(user){\n\n      if(user.code === 2000){\n        const users = await this.usersService.findByMobile(user.data.mobile);\n        const payload = { username: users.mobile, sub: users.uuid };\n        users.accessToken = this.jwtService.sign(payload);\n        users.save()\n        return users;\n      }else{\n        return user;\n      }\n    return user;\n  }\n\n\n  async employeeLogin(user: any) {\n    // console.log('useruseruseruseruser',user);\n    \n    const payload = { username: user.mobile, sub: user.uuid };\n    if (user.flags.isActive) {\n      user.accessToken = this.jwtService.sign(payload);\n      user.save()\n      return user;\n    }\n  }\n  async verifyToken(request){\n\n    const user = this.jwtService.verify(request.token);\n\n\n    try{\n      if(user.username == request.mobile){\n        return {\"status\": true,\"code\" : 2000, 'data' : user}\n      }else{\n        return {\"status\": false,\"code\" : 2001, 'message' : 'expired'}\n      }\n    } catch (error) {\n      return {\"status\": false,\"code\" : 5000, 'message' : 'Server error'}\n    }\n    return user;\n}\n}\n","module.exports = require(\"@nestjs/core\");","import {\n  AddressInterface,\n  EntityInterface,\n  FlagsInterface,\n  KeyInterface,\n  QuestionEntityInterface,\n  SubscriptionInterface,\n  EntityStatusEnum,\n  UserBookmarkInterface,\n  UserDeviceInterface,\n  UserFlagsInterface,\n  UserKeyInterface,\n  UserQbTopicInterface,\n  UserSubmissionInterface,\n  UserTestInterface,\n  UserVideoInterface,\n  UserObjectSubscriptionInterface,\n\n} from '@application/api-interfaces';\nimport { QBankSubject, TSCategories, VideoSubject } from '@application/shared-api';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport * as mongoose from 'mongoose';\nimport { Course } from './course.schema';\nimport { Organization } from './organization.schema';\nimport { Subscription, SubscriptionSchema } from './subscription.schema';\n\n@Schema()\nexport class User extends mongoose.Document {\n\n  @Prop({ required: true })\n  @ApiProperty({ example: '0ba7596e-5087-4c72-887d-aaa730cdac23', description: 'Unique Identifier' })\n  uuid: string;\n\n  @Prop()\n  @ApiProperty({ example: '5fa90d866rttry3001021fd', description: 'Object ID' })\n  id: string;\n\n  @Prop({ required: false })\n  @ApiProperty({ example: 'Plato Architect', description: 'User name' })\n  name: string;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Course.name })\n  @ApiProperty({\n    example: [{ uuid: '3457596e-5087-4c72-887d-aaa730cdac23', title: 'Sample Course' }],\n    description: 'User Courses'\n  })\n  courses: Course;\n\n  // @Prop({\n  //   required: false,\n  //   type: String,\n  //   enum: ['STUDENT', 'ADMIN', 'SUPER', 'DATAENTRY'],\n  // })\n  // @ApiProperty({\n  //   example: 'STUDENT',\n  //   description: 'AWS S3/Cloudinary URL for the image'\n  // })\n  // type: string;\n\n  @Prop({\n    required: false,\n    type: String,\n    default:'STUDENT'\n  })\n  @ApiProperty({\n    example: 'STUDENT',\n    description: 'AWS S3/Cloudinary URL for the image'\n  })\n  type: string;\n\n  @Prop({\n    required: false,\n    type: Array,\n  })\n  @ApiProperty({ example: [{ id: 'device-1', isLoggedIn: true }], description: 'Mobile Device Id(IMEI (android) | UDID (ios) ) and its logged in status' })\n  devices: UserDeviceInterface[];\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  @ApiProperty({ example: '2020-11-09T19:53:53.032Z', description: 'User Date of Birth' })\n  dob?: Date;\n\n  @Prop({\n    required: false,\n    type: String,\n    enum: ['MALE', 'FEMALE', 'OTHER'],\n  })\n  @ApiProperty({ example: 'MALE', description: 'User Gender' })\n  gender: string;\n\n  @Prop({ required: true })\n  @ApiProperty({ example: 9999999990, description: 'User Mobile' })\n  mobile: number;\n\n  @Prop()\n  @ApiProperty({ example: 'Plato College', description: 'User College' })\n  college: string;\n\n  @Prop({ required: false })\n  @ApiProperty({\n    example: 'http://img-url',\n    description: 'AWS S3/Cloudinary URL for the image'\n  })\n  imgUrl: string;\n\n  // @Prop([{ type: mongoose.Schema.Types.ObjectId, ref: Course.name }])\n  // @ApiProperty({\n  //   example: [{ uuid: '3457596e-5087-4c72-887d-aaa730cdac23', title: 'Sample Course' }],\n  //   description: 'User Courses'\n  // })\n  // courses: Course;\n\n  // @Prop([{ type: mongoose.Schema.Types.ObjectId, ref: Organization.name }])\n  // @ApiProperty({\n  //   example: [{ uuid: '3457596e-5087-4c72-887d-aaa730cdac23', title: 'Sample Organization' }],\n  //   description: 'User Organizations'\n  // })\n  // organizations: Organization;\n\n  @Prop([{ type: mongoose.Schema.Types.ObjectId, ref: Organization.name }])\n  organizations: string[];\n\n\n  // @Prop([{ type: mongoose.Schema.Types.ObjectId, ref: Subscription.name }])\n  @Prop([{\n    subscription_id: { type: mongoose.Schema.Types.ObjectId, ref: Subscription.name },\n    expiry_date: { type: Date, required: false },\n    createdOn: { type: Date, required: false }\n  }])\n\n  subscriptions: UserObjectSubscriptionInterface[];\n\n  @Prop()\n  @ApiProperty({ example: 'Plato College', description: 'User Bookmarks' })\n  bookmarks: UserBookmarkInterface[];\n\n\n  // @Prop({ required: false, type: Array })\n  @Prop(\n    [{\n      category_id: { type: mongoose.Schema.Types.ObjectId },\n      expiry_date: { required: false, type: Date }\n    }])\n  tests?: any;\n\n    // @Prop({ required: false, type: Array })\n  @Prop(\n    [{\n     subject_id: { type: mongoose.Schema.Types.ObjectId },\n      expiry_date: { required: false, type: Date }\n    }])\n  qbanks?: any;\n\n  // @Prop({ required: false, type: Object })\n  @Prop(\n    [{\n      subject_id: { type: mongoose.Schema.Types.ObjectId },\n      expiry_date: { required: false, type: Date }\n    }])\n  @ApiProperty({\n    example: {\n      uuid: '221B ',\n      title: 'Video 1',\n      vdoCipherId: '12341231',\n    },\n    description: 'Video Entity array to keep track of user activity'\n  })\n  videos?: any;\n\n  \n\n  @Prop({ required: false, type: Object })\n  submissions?: UserSubmissionInterface;\n\n  @Prop({ required: false, type: Object })\n  @ApiProperty({\n    example: {\n      addressLine1: '221B ',\n      addressLine2: 'Baker Street',\n      state: 'CAMBRIDGE',\n      town: 'LONDON',\n      pincode: 123456\n    },\n    description: 'User Address'\n  })\n  address: AddressInterface;\n\n\n\n\n\n  @Prop({ required: false })\n  @ApiProperty({ example: 'user@platononline.com', description: 'User Email' })\n  email: string;\n\n  @Prop({ required: false })\n  @ApiProperty({ example: 'qwewqeqwe', description: 'User password' })\n  password: string;\n\n  @Prop({ required: false })\n  @ApiProperty({ example: '123456', description: 'OTP' })\n  otp: string;\n\n  @Prop({ required: false })\n  @ApiProperty({ example: 'Date', description: 'OTP Expiration' })\n  expiration_time: Date;\n\n\n  @Prop({ required: false })\n  @ApiProperty({ example: 'hash-key', description: 'Access Token' })\n  accessToken: string;\n\n  @Prop({\n    required: false,\n    type: Date,\n  })\n  @ApiProperty({ example: '2020-11-09T19:53:53.032Z', description: 'Created On' })\n  createdOn?: Date;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  @ApiProperty({ example: '2020-11-12T19:53:53.032Z', description: 'Modified On' })\n  modifiedOn?: Date;\n\n  @Prop({ required: false, type: Object })\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user created it'\n  })\n  createdBy: UserKeyInterface;\n\n  @Prop({ type: Object })\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user modified it'\n  })\n  modifiedBy: UserKeyInterface;\n\n  @Prop({ required: false, type: Object })\n  @ApiProperty({\n    example: { active: true, paid: true, isLoggedIn: true },\n    description: 'flags to operate on the entity'\n  })\n  flags?: UserFlagsInterface;\n\n  @Prop({ required: false})\n  @ApiProperty({\n    example: { isLoggedIn: true },\n    description: 'isLoggedIn'\n  })\n  isLoggedIn: boolean;\n\n  @Prop({ required: false, type: Object })\n  qbanksTestSubmissions?: any;\n\n  @Prop({ required: false, type: Object })\n  testSeriesSubmissions?: any;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\nUserSchema.set('validateBeforeSave', true);\n","module.exports = require(\"@nestjs/passport\");","import {\n  CouponInterface,\n  FlagsInterface, UserKeyInterface,\n} from '@application/api-interfaces';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport * as mongoose from 'mongoose';\nimport { Course } from './course.schema';\nimport { QBankSubject } from './qbank-subject.schema';\nimport { QBank } from './qbank.schema';\nimport { Test } from './test.schema';\nimport { VideoSubject } from './video-subject.schema';\nimport { Video } from './video.schema';\n\n@Schema()\nexport class Subscription extends mongoose.Document {\n\n  @Prop({ required: true })\n  uuid: string;\n\n  @Prop()\n  id: string;\n\n  @Prop({ required: true })\n  title: string;\n\n  @Prop({ required: false })\n  description: string;\n\n  @Prop({ required: true })\n  order: number;\n\n  @Prop({ required: false })\n  periodType: string;\n\n  @Prop({ required: false })\n  period: number;\n\n  @Prop({ required: true })\n  actual: number;\n\n  @Prop({ required: true })\n  originalPrice: number;\n\n  @Prop({ required: true })\n  count: number;\n\n  // @Prop({ required: true })\n  // discounted: number;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Course.name })\n  courses: string;\n\n  // @Prop({ required: true})\n  // courses: string;\n\n  @Prop([{ type: mongoose.Schema.Types.ObjectId, ref: Test.name }])\n  tests: string[];\n\n  @Prop([{ type: mongoose.Schema.Types.ObjectId, ref: QBankSubject.name }])\n  qbanks: string[];\n\n  @Prop([{ type: mongoose.Schema.Types.ObjectId, ref: VideoSubject.name }])\n  videos: string[];\n\n  //   @Prop({ type: Object })\n  //   coupon: CouponInterface;\n  //  @Prop({ required: false })\n  //   @Prop({ type: mongoose.Schema.Types.ObjectId })\n  //   coupons: string;\n\n  @Prop({\n    required: false,\n  })\n  validFrom: Date;\n\n  @Prop({\n    required: false,\n  })\n  validTo: Date;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  createdOn?: Date;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  modifiedOn?: Date;\n\n  @Prop({ required: true, type: Object })\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user created it'\n  })\n  createdBy: UserKeyInterface;\n\n  @Prop({ type: Object })\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user modified it'\n  })\n  modifiedBy: UserKeyInterface;\n\n  @Prop({ required: true, type: Object })\n  flags: FlagsInterface;\n\n}\n\nexport const SubscriptionSchema = SchemaFactory.createForClass(Subscription);\nSubscriptionSchema.set('validateBeforeSave', true);","import {\n  KeyInterface,\n  UserKeyInterface,\n} from '@application/api-interfaces';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nimport {\n  AddressInterface,\n  BranchInterface,\n  OrganizationEntitlementsInterface,\n  OrganizationFlagsInterface,\n} from '@application/api-interfaces';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Schema()\nexport class Organization extends Document {\n  @Prop({ required: true })\n  uuid: string;\n\n  @Prop()\n  id: string;\n\n  @Prop({ required: true })\n  title: string;\n\n  // @Prop({ required: true })\n  // type: string;\n\n  // @Prop({ required: false })\n  // imgUrl: string;\n\n  // @Prop()\n  // entitlements?: OrganizationEntitlementsInterface;\n\n  @Prop({type:Object})\n  address: AddressInterface;\n\n  // @Prop({ required: false })\n  // phone: string;\n\n  @Prop({ required: false })\n  mobile: number;\n\n  @Prop({ required: true })\n  email: string;\n\n  @Prop({ required: true })\n  firebase: string;\n\n  // @Prop()\n  // branches: BranchInterface[];\n\n  // @Prop()\n  // subscriptions: KeyInterface[];\n\n  // @Prop()\n  // courses: KeyInterface[];\n\n  // @Prop()\n  // users: KeyInterface[];\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  createdOn?: String;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  modifiedOn?: String;\n\n  @Prop({  type: Object })\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user created it'\n  })\n  createdBy: any;\n\n  @Prop({ type: Object })\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user modified it'\n  })\n  modifiedBy: any;\n\n  @Prop({ required: true, type: Object })\n  flags: any;\n}\n\nexport const OrganizationSchema = SchemaFactory.createForClass(Organization);\nOrganizationSchema.set('validateBeforeSave', true);\n","import { MoveDocumentsInBulkService } from './move-documents-in-bulk/move-documents-in-bulk.service';\nimport { UserStatusService } from './user-status/user-status.service';\n\nexport const apiHelpers = [\n  MoveDocumentsInBulkService,\n  UserStatusService\n];\n\nexport * from './move-documents-in-bulk/move-documents-in-bulk.service';\nexport * from './user-status/user-status.service';\n","import { OrganizationsService } from './organizations.service';\nimport { CoursesService } from './courses.service';\n\nexport const services = [OrganizationsService, CoursesService];\n\nexport * from './organizations.service';\nexport * from './courses.service';\n","import {\n  AddressInterface,\n  UserBookmarkInterface,\n  UserDeviceInterface,\n  UserFlagsInterface,\n  UserKeyInterface,\n  UserSubmissionInterface,\n} from '@application/api-interfaces';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport * as mongoose from 'mongoose';\nimport { Organization } from './organization.schema';\nimport { Roles } from './roles.schema'\n\n@Schema()\nexport class Employee extends mongoose.Document {\n\n  @Prop({ required: true })\n  @ApiProperty({ example: '0ba7596e-5087-4c72-887d-aaa730cdac23', description: 'Unique Identifier' })\n  uuid: string;\n\n  @Prop()\n  @ApiProperty({ example: '5fa90d866rttry3001021fd', description: 'Object ID' })\n  id: string;\n\n  @Prop({ required: true })\n  @ApiProperty({ example: 'Plato Architect', description: 'User name' })\n  name: string;\n\n  @Prop([{ required: false, type: mongoose.Schema.Types.ObjectId }])\n  department: any;\n\n  // @Prop({\n  //   required: true,\n  //   type: String,\n  //   enum: [ 'ADMIN', 'SUPER', 'DATAENTRY'],\n  // })\n  // @ApiProperty({\n  //   example: 'ADMIN',\n  //   description: 'AWS S3/Cloudinary URL for the image'\n  // })\n  // type: string;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Roles.name })\n  @ApiProperty({\n    example: [{ uuid: '3457596e-5087-4c72-887d-aaa730cdac23', title: 'Sample Course' }],\n    description: 'User Courses'\n  })\n  role: string;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  @ApiProperty({ example: [{ id: 'device-1', isLoggedIn: true }], description: 'Mobile Device Id(IMEI (android) | UDID (ios) ) and its logged in status' })\n  devices: UserDeviceInterface[];\n\n  @Prop({\n    required: true,\n    type: String,\n  })\n  @ApiProperty({ example: '2020-11-09T19:53:53.032Z', description: 'User Date of Birth' })\n  dob?: Date;\n\n  @Prop({\n    required: true,\n    type: String,\n    enum: ['MALE', 'FEMALE', 'OTHER'],\n  })\n  @ApiProperty({ example: 'MALE', description: 'User Gender' })\n  gender: string;\n\n  @Prop({ required: true })\n  @ApiProperty({ example: 9999999990, description: 'User Mobile' })\n  mobile: number;\n\n  @Prop()\n  @ApiProperty({ example: 'Plato College', description: 'User College' })\n  college: string;\n\n  @Prop({ required: false })\n  @ApiProperty({\n    example: 'http://img-url',\n    description: 'AWS S3/Cloudinary URL for the image'\n  })\n  imgUrl: string;\n\n  @Prop([{ type: mongoose.Schema.Types.ObjectId, ref: Organization.name }])\n  @ApiProperty({\n    example: [{ uuid: '3457596e-5087-4c72-887d-aaa730cdac23', title: 'Sample Organization' }],\n    description: 'User Organizations'\n  })\n  organizations: Organization;\n\n  @Prop()\n  @ApiProperty({ example: 'Plato College', description: 'User Bookmarks' })\n  bookmarks: UserBookmarkInterface[];\n\n  @Prop({ required: false, type: Object })\n  submissions?: UserSubmissionInterface;\n\n  @Prop({ required: false, type: Object })\n  @ApiProperty({\n    example: {\n      addressLine1: '221B ',\n      addressLine2: 'Baker Street',\n      state: 'CAMBRIDGE',\n      town: 'LONDON',\n      pincode: 123456\n    },\n    description: 'User Address'\n  })\n  address: AddressInterface;\n\n\n\n  @Prop({ required: true })\n  @ApiProperty({ example: 'user@platononline.com', description: 'User Email' })\n  email: string;\n\n  @Prop({ required: true })\n  @ApiProperty({ example: 'qwewqeqwe', description: 'User password' })\n  password: string;\n\n  @Prop({ required: false })\n  @ApiProperty({ example: 'hash-key', description: 'Access Token' })\n  accessToken: string;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  @ApiProperty({ example: '2020-11-09T19:53:53.032Z', description: 'Created On' })\n  createdOn?: Date;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  @ApiProperty({ example: '2020-11-12T19:53:53.032Z', description: 'Modified On' })\n  modifiedOn?: Date;\n\n  @Prop({ required: true, type: Object })\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user created it'\n  })\n  createdBy: UserKeyInterface;\n\n  @Prop({ type: Object })\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user modified it'\n  })\n  modifiedBy: UserKeyInterface;\n\n  @Prop({ required: true, type: Object })\n  @ApiProperty({\n    example: { active: true, paid: true, isLoggedIn: true },\n    description: 'flags to operate on the entity'\n  })\n  flags: UserFlagsInterface;\n}\n\nexport const EmployeeSchema = SchemaFactory.createForClass(Employee);\nEmployeeSchema.set('validateBeforeSave', true);\n","import { AuthModule } from '@application/auth';\nimport { CourseSchema, SharedApiModule } from '@application/shared-api';\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { CoursesController } from './courses.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: 'Course',\n        schema: CourseSchema,\n      },\n    ]),\n    SharedApiModule,\n    AuthModule,\n  ],\n  controllers: [CoursesController],\n})\nexport class CoursesModule {}\n","import { FlagsInterface, QBankFlagsInterface, QBankSubjectChapterInterface, UserKeyInterface } from '@application/api-interfaces';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport * as mongoose from 'mongoose';\nimport { Course } from './course.schema';\nimport { Syllabus } from './syllabus.schema';\n\n\n@Schema()\nexport class QBankSubject extends mongoose.Document {\n\n  @Prop({ required: true })\n  uuid: string;\n\n  @Prop()\n  id: string;\n\n  @Prop({ required: false })\n  title: string;\n\n  @Prop({ required: true })\n  order: number;\n\n  @Prop({ required: false })\n  count?: number;\n\n  @Prop({ required: true})\n  chapters: QBankSubjectChapterInterface[];\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Course.name })\n  courses: string;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Syllabus.name })\n  syllabus: string;\n\n  @Prop({ required: true })\n  imgUrl: string;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  createdOn?: Date;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  modifiedOn?: Date;\n\n  @Prop({ required: true, type: Object })\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user created it'\n  })\n  createdBy: UserKeyInterface;\n\n  @Prop({ type: Object })\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user modified it'\n  })\n  modifiedBy: UserKeyInterface;\n\n  @Prop({ required: true, type: Object })\n  flags: QBankFlagsInterface;\n\n}\n\nexport const QBankSubjectSchema = SchemaFactory.createForClass(QBankSubject);\nQBankSubjectSchema.set('validateBeforeSave', true);\n\n\n//courses\n//subject id // syllabus id\n//order\n//chapters[\n  // id,\n  // order,\n  // topics\n      //questions\n// ]\n\n\n","import {\n  FlagsInterface, TestCategoryInterface, TestSeriesCategoryInterface, UserKeyInterface,\n} from '@application/api-interfaces';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport * as mongoose from 'mongoose';\nimport { Course } from './course.schema';\n\n@Schema()\nexport class TSCategories extends mongoose.Document {\n\n  @Prop({ required: true })\n  uuid: string;\n\n  @Prop()\n  id: string;\n\n  // @Prop({ required: true })\n  // title: string;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Course.name })\n  courses: string;\n\n  // @Prop([{ type: mongoose.Schema.Types.ObjectId, ref: Course.name }])\n  // @ApiProperty({ example: [Course], description: 'Courses' })\n  // courses: string[];\n\n  // @Prop({ required: true })\n  // order: number;\n\n  // @Prop({ required: false })\n  // tests: string[];\n\n  // @Prop({ required: false })\n  // count: number;\n\n  // @Prop({ required: false })\n  // userCompletedCount: number;\n\n  // @Prop({ required: true })\n  // schedulePdf: string;\n\n  // @Prop({ required: true})\n  // categories: TestCategoryInterface;\n\n  \n  @Prop({ required: true,type: Object })\n  categories: TestSeriesCategoryInterface;\n\n  @Prop({\n    required: false,\n  })\n  scheduledDate: Date;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  createdOn?: Date;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  modifiedOn?: Date;\n\n  @Prop({ required: true, type: Object })\n  createdBy: UserKeyInterface;\n\n  @Prop({ type: Object })\n  modifiedBy: UserKeyInterface;\n\n  @Prop({ required: true, type: Object })\n  flags: FlagsInterface;\n}\n// export class TSCategories extends mongoose.Document {\n\n  // @Prop({ required: true })\n  // uuid: string;\n\n  // @Prop()\n  // id: string;\n\n  // @Prop({ required: true })\n  // title: string;\n\n  // @Prop([{ type: mongoose.Schema.Types.ObjectId, ref: Course.name }])\n  // @ApiProperty({ example: [Course], description: 'Courses' })\n  // courses: string[];\n\n  // @Prop({ required: true })\n  // order: number;\n\n  // @Prop({ required: false })\n  // tests: string[];\n\n  // @Prop({ required: false })\n  // count: number;\n\n  // @Prop({ required: false })\n  // userCompletedCount: number;\n\n  // @Prop({ required: true })\n  // schedulePdf: string;\n\n  // @Prop({\n  //   required: false,\n  //   type: String,\n  // })\n  // createdOn?: Date;\n\n  // @Prop({\n  //   required: false,\n  //   type: String,\n  // })\n  // modifiedOn?: Date;\n\n  // @Prop({ required: true, type: Object })\n  // createdBy: UserKeyInterface;\n\n  // @Prop({ type: Object })\n  // modifiedBy: UserKeyInterface;\n\n  // @Prop({ required: true, type: Object })\n  // flags: FlagsInterface;\n// }\n\nexport const TSCategoriesSchema = SchemaFactory.createForClass(TSCategories);\nTSCategoriesSchema.set('validateBeforeSave', true);\n","import {\n  BankInterface,\n  FlagsInterface,\n  KeyInterface,\n  UserKeyInterface,\n  AgentsFlagsInterface\n} from '@application/api-interfaces';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Course } from './course.schema';\nimport { Syllabus } from './syllabus.schema';\n\n@Schema()\nexport class Faculty extends mongoose.Document {\n  @Prop({ required: true })\n  uuid: string;\n\n  @Prop()\n  id: string;\n\n  @Prop({ required: true })\n  name: string;\n\n  @Prop({ required: true })\n  mobile: number;\n\n  @Prop({ required: true })\n  password: string;\n\n  @Prop({ required: false })\n  accessToken: string;\n\n  @Prop({\n    required: true,\n    type: String,\n    enum: ['MALE', 'FEMALE', 'OTHER'],\n  })\n  gender: string;\n\n  @Prop({ required: false })\n  designation: string;\n\n  @Prop({ required: true })\n  specialization: string;\n\n  /*@Prop([{ type: mongoose.Schema.Types.ObjectId, ref: Course.name }])\n  courses: KeyInterface[];\n\n  @Prop([{ type: mongoose.Schema.Types.ObjectId, ref: Syllabus.name }])\n  syllabus: KeyInterface[];*/\n  \n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Course.name })\n  courses: string;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Syllabus.name })\n  syllabus: string;\n\n  @Prop({ required: false })\n  imgUrl: string;\n\n  @Prop({ required: true, type: Object })\n  bank: BankInterface;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  createdOn?: Date;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  modifiedOn?: Date;\n\n  @Prop({ required: true, type: Object })\n  createdBy: UserKeyInterface;\n\n  @Prop({ type: Object })\n  modifiedBy: UserKeyInterface;\n\n  @Prop({ required: true, type: Object })\n  flags: AgentsFlagsInterface;\n}\n\nconst CourseSchema = SchemaFactory.createForClass(Course);\nexport const FacultySchema = SchemaFactory.createForClass(Faculty);\nconst SyllabusSchema = SchemaFactory.createForClass(Syllabus);\nFacultySchema.set('validateBeforeSave', true);\n","import { SyllabusInterface, UserKeyInterface } from '@application/api-interfaces';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\n\nimport {\n  QuestionAnswerInterface,\n  QuestionFlagsInterface,\n  QuestionOptionsInterface,\n  matchLeftOptionsInterface,\n  matchRightOptionsInterface\n} from '@application/api-interfaces';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Syllabus } from './syllabus.schema';\nimport { Pearls } from './pearls.schema';\n// import { QBankSubject } from './qbank-subject.schema';\n\n@Schema()\nexport class Question extends mongoose.Document {\n\n  @Prop({ required: true })\n  uuid: string;\n\n  @Prop()\n  id: string;\n\n  @Prop({ required: true })\n  title: string;\n\n  @Prop({ required: false })\n  shortTitle: string;\n\n  @Prop({ required: true })\n  questionId: string;\n\n  @Prop({\n    required: false,\n  })\n  descriptionImgUrl?: string;\n\n  @Prop({\n    required: true,\n  })\n  mathType?: string;\n\n  @Prop({\n    required: true,\n    type: String,\n    enum: ['MULTIPLE', 'SINGLE', 'ESSAY', 'FIB', 'IMG','FILL_IN_THE_BLANK','TRUE_OR_FALSE','MATCH_THE_FOLLOWING'],\n  })\n  type: string;\n\n  @Prop({\n    required: false,\n  })\n  options?: QuestionOptionsInterface[];\n\n  @Prop({\n    required: false,\n  })\n  matchLeftSideOptions?: matchLeftOptionsInterface[];\n\n  @Prop({\n    required: false,\n  })\n  matchRightSideOptions?: matchRightOptionsInterface[];\n\n  @Prop({\n    required: false,\n  })\n  imgUrl?: string;\n\n  @Prop({\n    required: false,\n  })\n  previousAppearances: string;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId,required: false })\n  tags: any;\n\n  // @Prop({\n  //   required: false,\n  // })\n  // tags: string;\n\n  @Prop({\n    required: true,\n    type: String,\n    enum: ['EASY', 'MEDIUM', 'HARD'],\n  })\n  difficulty: string;\n\n  @Prop([{ type: mongoose.Schema.Types.ObjectId, ref: Syllabus.name }])\n  syllabus: string[];\n\n  @Prop([{ type: mongoose.Schema.Types.ObjectId }])\n  perals: string[];\n\n  // @Prop([{ type: mongoose.Schema.Types.ObjectId, ref: QBankSubject.name }])\n  // Syllabus: string[];\n\n  @Prop({ required: false, type: Object })\n  answer: QuestionAnswerInterface;\n  \n  @Prop({ required:false, type: Array })\n  matchAnswer: [];\n\n  @Prop({ required: true })\n  description: string;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  createdOn?: Date;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  modifiedOn?: Date;\n\n  @Prop({ required: true, type: Object })\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user created it'\n  })\n  createdBy: UserKeyInterface;\n\n  @Prop({ type: Object })\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user modified it'\n  })\n  modifiedBy: UserKeyInterface;\n\n  @Prop({ required: true, type: Object })\n  flags: QuestionFlagsInterface;\n\n}\n\nexport const QuestionSchema = SchemaFactory.createForClass(Question);\nQuestionSchema.set('validateBeforeSave', true);\n","import { MobileHomeService } from './home.service';\nimport { MobileQbankSubjectService } from './qbank/qbank-subject.service';\nimport { MobileQbankService } from './qbank/qbank.service';\nimport { SubmitTopicResultsService } from './qbank/submit-topic-results/submit-topic-results.service';\nimport { SubmitQbankTopicService } from './qbank/submit-topic/submit-topic.service';\nimport { MobileSubscriptionService } from './subscription.service';\nimport { SubmitTestService } from './test-series/submit-test/submit-test.service';\nimport { MobileTestCategoryService } from './test-series/test-category.service';\nimport { TestResultsService } from './test-series/test-results/test-results.service';\nimport { MobileTestsService } from './test-series/tests.service';\nimport { MobileUsersService } from './users.service';\nimport { MobileVideoSubjectService } from './video-subject.service';\nimport { MobileVideosService } from './videos.service';\n\nexport const mobileServices = [\n  MobileHomeService,\n  MobileQbankService,\n  MobileQbankSubjectService,\n  SubmitQbankTopicService,\n  SubmitTopicResultsService,\n  MobileVideosService,\n  MobileVideoSubjectService,\n  MobileSubscriptionService,\n  MobileTestCategoryService,\n  MobileTestsService,\n  MobileUsersService,\n  SubmitTestService,\n  TestResultsService,\n];\n\nexport * from './home.service';\nexport * from './qbank/qbank-subject.service';\nexport * from './qbank/qbank.service';\nexport * from './qbank/submit-topic/submit-topic.service';\nexport * from './qbank/submit-topic-results/submit-topic-results.service';\nexport * from './subscription.service';\nexport * from './test-series/submit-test/submit-test.service';\nexport * from './test-series/test-category.service';\nexport * from './test-series/test-results/test-results.service';\nexport * from './test-series/tests.service';\nexport * from './users.service';\nexport * from './video-subject.service';\nexport * from './videos.service';\n","import { AboutUsService } from './about-us.service';\nimport { BannersService } from './banners.service';\nimport { CareersService } from './careers.service';\nimport { CouponsService } from './coupons.service';\nimport { CoursesService } from './courses.service';\nimport { FacultyService } from './faculty.service';\nimport { QbankSubjectService } from './qbank-subject.service';\nimport { QbankService } from './qbank.service';\nimport { QuestionsService } from './questions.service';\nimport { SampleService } from './sample.service';\nimport { SubscriptionService } from './subscription.service';\nimport { SyllabusService } from './syllabus.service';\nimport { TagsService } from './tags.service';\nimport { TestCategoryService } from './test-series/test-category.service';\nimport { TestsService } from './test-series/tests.service';\nimport { TestSeriesService } from './test-series/test-series.service';\nimport { UserMessagesService } from './user-messages.service';\nimport { UsersService } from './users.service';\nimport { VideoCipherService } from './video-cipher.service';\nimport { VideoSubjectService } from './video-subject.service';\nimport { VideosService } from './videos.service';\nimport { PearlsService } from './pearls.service';\nimport { EmployeeService } from './employee.service';\nimport { UserTransactionsService } from './user-transactions.service';\nimport { RoleValuesService } from './role-values.service';\nimport { RoleSubModulesService } from './role-submodules.service';\nimport { RolesService } from './roles.service';\nimport { AgentTransactionsService } from './agent-transaction.service';\nimport { PearlSubjectsService } from './pearl-subjects.service';\nimport { SuggestedVideosService } from './suggested-videos.service';\nimport { SuggestedTestsService } from './suggested-tests.service';\nimport { SuggestedQbankService } from './suggested-qbank.service';\nimport { MCQOfTheDayService } from './mcq-of-the-day.service';\nimport { NotificationService } from './notification.service';\nimport { LogsService } from './logs.service';\nimport { FeedbackService } from './feedback.service';\n\nimport { DepartmentService } from './department.service';\n\nimport { FirebaseService } from './firebase-service';\n\nexport const services = [\n  AboutUsService,\n  BannersService,\n  CareersService,\n  CouponsService,\n  CoursesService,\n  FacultyService,\n  QbankService,\n  QbankSubjectService,\n  QuestionsService,\n  SampleService,\n  SubscriptionService,\n  SyllabusService,\n  TagsService,\n  TestCategoryService,\n  TestsService,\n  TestSeriesService,\n  UsersService,\n  EmployeeService,\n  UserMessagesService,\n  VideoCipherService,\n  VideosService,\n  VideoSubjectService,\n  PearlsService,\n  UserTransactionsService,\n  RoleValuesService,\n  RoleSubModulesService,\n  RolesService,\n  AgentTransactionsService,\n  PearlSubjectsService,\n  SuggestedVideosService,\n  SuggestedTestsService,\n  SuggestedQbankService,\n  MCQOfTheDayService,\n  NotificationService,\n  LogsService,\n  FirebaseService,\n  FeedbackService,\n  DepartmentService\n\n];\n\nexport * from './about-us.service';\nexport * from './banners.service';\nexport * from './careers.service';\nexport * from './coupons.service';\nexport * from './courses.service';\nexport * from './faculty.service';\nexport * from './qbank-subject.service';\nexport * from './qbank.service';\nexport * from './questions.service';\nexport * from './sample.service';\nexport * from './subscription.service';\nexport * from './syllabus.service';\nexport * from './tags.service';\nexport * from './test-series/tests.service';\nexport * from './test-series/test-category.service';\nexport * from './test-series/test-series.service';\nexport * from './user-messages.service';\nexport * from './users.service';\nexport * from './video-cipher.service';\nexport * from './video-subject.service';\nexport * from './videos.service';\nexport * from './pearls.service';\nexport * from './employee.service';\nexport * from './user-transactions.service';\nexport * from './role-values.service';\nexport * from './role-submodules.service';\nexport * from './roles.service';\nexport * from './agent-transaction.service';\nexport  * from './pearl-subjects.service';\nexport * from './suggested-videos.service';\nexport * from './suggested-tests.service';\nexport * from './suggested-qbank.service';\nexport * from './mcq-of-the-day.service';\nexport * from './notification.service';\nexport * from './logs.service';\nexport * from './feedback.service';\n\nexport * from './department.service';\nexport * from './firebase-service';\n\n","module.exports = require(\"rxjs\");","module.exports = require(\"@nestjs/jwt\");","import { Injectable } from '@nestjs/common';\nimport { ObjectID } from 'mongodb';\n\n@Injectable()\nexport class MoveDocumentsInBulkService {\n\n  insertBatch(collection, documents) {\n\n    const bulkInsert = collection.initializeUnorderedBulkOp();\n    const insertedIds = [];\n    let id: ObjectID;\n    documents.forEach(function(doc) {\n      id = doc._id;\n      // Insert without raising an error for duplicates\n      bulkInsert.find({_id: id}).upsert().replaceOne(doc);\n      insertedIds.push(id);\n    });\n    bulkInsert.execute();\n    return insertedIds;\n\n  }\n\n  deleteBatch(collection, documents) {\n\n    const bulkRemove = collection.initializeUnorderedBulkOp();\n    documents.forEach(function(doc) {\n      bulkRemove.find({_id: doc._id}).removeOne();\n    });\n    bulkRemove.execute();\n\n  }\n\n  moveDocuments(sourceCollection, targetCollection, filter, batchSize) {\n\n    console.log(\"Moving \" + sourceCollection.find(filter).count() + \" documents from \" + sourceCollection + \" to \" + targetCollection);\n    let count;\n    while ((count = sourceCollection.find(filter).count()) > 0) {\n      console.log(count + \" documents remaining\");\n      const sourceDocs = sourceCollection.find(filter).limit(batchSize);\n      const idsOfCopiedDocs = this.insertBatch(targetCollection, sourceDocs);\n\n      const targetDocs = targetCollection.find({_id: {$in: idsOfCopiedDocs}});\n      this.deleteBatch(sourceCollection, targetDocs);\n    }\n    console.log(\"Done!\");\n\n  }\n\n}\n","import { QBankInterface, SubmitUserQBankTopicInterface, SubmitUserTestInterface, EntityStatusEnum } from '@application/api-interfaces';\nimport { Injectable } from '@nestjs/common';\nimport { QBank, Test, User } from '../../schema';\n\n@Injectable()\nexport class UserStatusService {\n\n  getUserTestStatus(\n    user: User,\n    test?: Test,\n  ) {\n\n    let testStatus: string,\n      submittedTests: SubmitUserTestInterface[] | SubmitUserQBankTopicInterface[],\n      inProgressTests;\n\n      submittedTests = user?.submissions?.tests?.filter(it => {\n        // console.log('submittedTest', { it });\n        return it.test.uuid === test.uuid &&\n          test?.categories?.filter(cat => cat.uuid === it.category.uuid)?.length;\n      });\n\n      inProgressTests = user?.tests?.filter(it => {\n        console.log('inProgressTest', { it });\n\n        return it.test.uuid === test.uuid &&\n        test?.categories?.filter(cat => cat.uuid === it.category.uuid)?.length;\n\n      });\n\n    // console.log({ submittedTests, inProgressTests });\n\n    testStatus = submittedTests?.length ? EntityStatusEnum.SUBMITTED :\n      inProgressTests?.length ? inProgressTests[0].status :\n      EntityStatusEnum.YET_TO_START;\n\n    // console.log({ submittedTest, inProgressTest, testStatus });\n\n    return {\n      testStatus,\n      startedAt: inProgressTests?.length ? inProgressTests[0]?.startedAt : null,\n      stoppedAt: inProgressTests?.length ? inProgressTests[0]?.stoppedAt : null\n    }\n\n  }\n\n  getUserTopicStatus(\n    user: User,\n    qbTopic?: QBankInterface,\n  ) {\n\n    let testStatus: string,\n      submittedTests: SubmitUserTestInterface[] | SubmitUserQBankTopicInterface[],\n      inProgressTests;\n\n      submittedTests = user?.submissions?.qbanks?.filter(it => {\n        // console.log('submittedTest', { it });\n        return it.topic.uuid === qbTopic.uuid &&\n        qbTopic?.subject?.uuid === it.subject.uuid;\n      });\n\n      inProgressTests = user?.qbanks?.filter(it => {\n        console.log('inProgressTest', { it });\n\n        return it.topic.uuid === qbTopic.uuid &&\n        qbTopic?.subject?.uuid === it.subject.uuid;\n\n      });\n\n    // console.log({ submittedTests, inProgressTests });\n\n    testStatus = submittedTests?.length ? EntityStatusEnum.SUBMITTED :\n      inProgressTests.length ? inProgressTests[0].status :\n      EntityStatusEnum.YET_TO_START;\n\n    // console.log({ submittedTest, inProgressTest, testStatus });\n\n    return {\n      testStatus,\n      startedAt: inProgressTests[0] ? inProgressTests[0].startedAt : null,\n      stoppedAt: inProgressTests[0] ? inProgressTests[0].stoppedAt : null\n    }\n\n  }\n\n}\n","import { AboutInterface, QBankInterface, VideoInterface } from '@application/api-interfaces';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Banner, Course, QBank, QBankSubject, Test, Video, VideoSubject } from '../schema';\nimport { QuestionsService } from '../services/questions.service';\n\nexport interface HomePageDataInterface {\n  banners: {imgUrl: string; link: string }[];\n  suggested: {\n    qbanks: QBankInterface[];\n    videos: VideoInterface[];\n    tests: Test[];\n  }\n}\n\nexport interface HomePageCourseInterface {\n  uuid: string;\n  id: string;\n  title: string;\n  imgUrl: string;\n}\n\n@Injectable()\nexport class MobileHomeService {\n\n  constructor(\n    @InjectModel('Banner') private bannersModel: Model<Banner>,\n    @InjectModel('Course') private courseModel: Model<Course>,\n    @InjectModel('Test') private testModel: Model<Test>,\n    @InjectModel('VideoSubject') private videoSubjectModel: Model<VideoSubject>,\n    @InjectModel('QBankSubject') private qbankSubjectModel: Model<QBankSubject>\n  ) {}\n\n  async getData(courseId: string): Promise<HomePageDataInterface> {\n\n    const banners = await this.bannersModel\n      .find({ courses: courseId }, { imgUrl: 1, link: 1, order: 1})\n      .exec();\n\n    const qbanks = await this.qbankSubjectModel\n      .find(\n        { courses: courseId, 'flags.suggested': true },\n      ).exec()\n      .then(res => {\n        console.log({ res });\n        const topics = [];\n        res.map(subject => {\n          subject.chapters.forEach(chp => {\n            chp.topics.forEach(it => {\n              topics.push(\n                {\n                  uuid: it.uuid,\n                  _id: it._id,\n                  title: it.title,\n                  imgUrl: it.imgUrl,\n                  subject: {\n                    uuid: it.subject.uuid,\n                    _id: it.subject._id,\n                    title: it.subject.title,\n                  },\n                  chapter: {\n                    title: it.chapter.title,\n                  },\n                  // chapter: it.chapter,\n                  description: it.description,\n                  count: it.count,\n                  order: it.order,\n                  flags: it.flags\n                }\n              );\n            })\n          })\n        });\n        return topics;\n      })\n      .catch(err => err);\n\n    const videos = await this.videoSubjectModel\n      .find(\n        { courses: courseId, 'flags.suggested': true },\n      ).exec()\n      .then(res => {\n        console.log({ res });\n        const videosList = [];\n        res.map(subject => {\n          subject.chapters.forEach(chp => {\n            chp.videos.forEach(it => {\n              videosList.push(\n                {\n                  uuid: it.uuid,\n                  title: it.title,\n                  totalTime: it.totalTime,\n                  faculty: {\n                    uuid: it.faculty.uuid,\n                    name: it.faculty.name\n                  },\n                  subject: {\n                    uuid: it.videoSubjectUuid,\n                    // uuid: it.subject.uuid,\n                    // _id: it.subject._id,\n                    // title: it.subject.title,\n                  },\n                  chapter: it.chapter,\n                  order: it.order,\n                  flags: it.flags\n                }\n              );\n            })\n          })\n        });\n        return videosList;\n      })\n      .catch(err => err);\n\n    /**\n     * test_name\n        questions_count\n        user_test_attempt_status\n        test_image\n        test_id\n        test_category_id\n        user_subscription_status\n        test_content_type\n        test_time\n        test_description\n     */\n\n    const tests = await this.testModel\n      .find(\n        { courses: courseId, 'flags.suggested': true },\n        { title: 1, count: 1, imgUrl: 1, uuid: 1, description: 1, categories: 1, time: 1  })\n      .exec();\n\n    return {\n      banners,\n      suggested: { qbanks, videos, tests }\n    };\n\n  }\n\n  async findAllCourses(): Promise<HomePageCourseInterface[]> {\n    return this.courseModel\n    .find({ 'flags.active': true },{ title: 1, uuid: 1, id: 1, imgUrl: 1 })\n    .exec();\n  }\n\n\n\n}\n","import { QBankInterface } from '@application/api-interfaces';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateQBankSubjectDto } from '../../dto';\nimport { UserStatusService } from '../../helpers';\nimport { Course, QBank, QBankSubject, User } from '../../schema';\n\n@Injectable()\nexport class MobileQbankSubjectService {\n\n  constructor(\n    private userStatus: UserStatusService,\n    @InjectModel('QBankSubject') private qbankSubjectModel: Model<QBankSubject>,\n    @InjectModel('User') private userModel: Model<User>,\n  ) {}\n\n  async findByCourse(courseId: string) {\n\n    /*return this.qbankSubjectModel\n      .find({ courses: courseId }, { id: 1, uuid: 1, title: 1, count: 1, imgUrl: 1 })\n      .exec();*/\n     let sub = [];\n\n    return this.qbankSubjectModel\n      //.find({ courses: courseId }, { id: 1, uuid: 1, title: 1, count: 1, imgUrl: 1 })\n      //.exec();\n      .find({ courses: courseId }, { id: 1, uuid: 1, imgUrl: 1, count: 1, courses: 1 })\n      .populate({\n        path: 'syllabus',\n        match: {\n          \"type\": \"SUBJECT\",\n          \"flags.active\": true,\n          \"flags.questionBank\": true,\n        },\n\n        select: {\n          \"title\": 1,\n        }\n      }).exec()\n      .then(result => {\n\n        result.forEach(syl => {\n          let new_syl: any = syl.syllabus;\n\n          sub.push(\n            {\n              \"id\": syl._id,\n              \"uuid\": syl.uuid,\n              \"subject_name\": new_syl.title,\n              \"image\": syl.imgUrl,\n              \"quiz_topic_completed_count\": 0,\n              \"exam_id\": syl.courses,\n              \"total_qbankTopics_count\": syl.count,\n\n            },\n\n          );\n\n        });\n\n\n        return sub;\n      });\n\n  }\n\n  async findAllChaptersBySubjectUuid(subjectUuid: string): Promise<{ title: string }[]> {\n    return this.qbankSubjectModel\n      .find({ 'uuid': subjectUuid }, { chapters: 1 })\n      .exec();\n  }\n\n  async findAll(): Promise<QBankSubject[]> {\n    return this.qbankSubjectModel\n      .find()\n      .exec();\n  }\n\n  async findSubjectChaptersByUuid(uuid: string, query): Promise<any> {\n\n    return this.userModel.findOne(\n      { uuid: query.user },\n    )\n    .populate(\n      {\n        path: 'subscriptions',\n        select: '_id uuid title courses videos tests qbanks createdOn modifiedOn',\n        // deep population method\n        populate: {\n          path: 'courses videos tests qbanks',\n          select: '_id uuid title categories flags',\n          populate: {\n            path: 'categories',\n            select: '_id uuid title',\n          }\n        },\n      }\n    ).exec().then(\n\n      res => {\n\n        // console.log('tests', res?.submissions.tests);\n\n        let filteredQbankSubjects =  [];\n        res?.subscriptions.map(it => {\n\n          filteredQbankSubjects = it.qbanks.filter(qbSubject => {\n            return qbSubject.uuid === uuid;\n            // if(qbSubject.chapters.length) {\n              // qbSubject.chapters.map(chapter => {\n              //   if(chapter.topics.length) {\n              //     chapter.topics.map(topic => {\n              //       if(topic.uuid === uuid) {\n              //         filteredTopics.push(topic);\n              //       }\n              //     });\n              //   }\n              // });\n            // }\n          });\n        });\n\n        return this.qbankSubjectModel\n        .find(\n          { uuid  },\n          { courses:0, questions: 0, createdBy: 0, createdOn: 0, modifiedBy: 0, modifiedOn: 0 }\n        )\n        .exec().then(\n\n          (result) => {\n\n            result.map(subject => {\n\n              // console.log('result', ft);\n\n              // ft.status = this.userStatus.getUserTestStatus(res, 'test', ft);\n\n              filteredQbankSubjects.map(fqSubject => {\n\n                if(subject.uuid === fqSubject.uuid) {\n\n                  subject.flags = {\n                    active: subject.flags.active,\n                    subscribed: true,\n                    suggested: subject.flags.suggested,\n                  }\n\n                }\n              });\n\n              subject.chapters.map(chapter => {\n                chapter.topics.map(topic => {\n                  topic.status = this.userStatus.getUserTopicStatus(res, topic).testStatus;\n                  console.log({ topic });\n                });\n\n              });\n            });\n\n            return result[0];\n\n          }\n        )\n\n      }\n\n        // console.log({ filteredTests });\n    );\n      // return this.qbankSubjectModel\n      //   .findOne({ uuid },\n      //     { courses: 0, createdOn: 0, modifiedOn: 0, createdBy: 0, modifiedBy: 0,\n      //     \"chapters.topics.subject\": 0, \"chapters.topics.questions\": 0, \"chapters.topics.chapter\": 0 }\n      //   )\n      //   .exec();\n  }\n\n  async findTopicsByUuid(topicUuid: string): Promise<QBankSubject> {\n\n    return this.qbankSubjectModel\n    .aggregate([\n      { $match: { \"chapters.topics.uuid\": topicUuid } },\n      { $unwind: \"$chapters\" },\n      { $addFields: { \"chapters.topics\": {\n        $filter: {\n          input: \"$chapters.topics\",\n          cond: {\n            $eq: [\n              \"$$this.uuid\",\n              topicUuid\n            ]\n          }\n        },\n      }}},\n      { $match: {\n        \"chapters\": {\n          $ne: []\n        }\n      }},\n      { $project: {\n        \"chapters.topics.subject\": 0,\n        \"chapters.topics.chapter\": 0,\n        \"chapters.topics.createdOn\": 0,\n        \"chapters.topics.modifiedOn\": 0,\n        \"chapters.topics.createdBy\": 0,\n        \"chapters.topics.modifiedBy\": 0,\n        \"chapters.topics.questions.que.syllabus\": 0,\n        \"chapters.topics.questions.que.createdOn\": 0,\n        \"chapters.topics.questions.que.modifiedOn\": 0,\n        \"chapters.topics.questions.que.createdBy\": 0,\n        \"chapters.topics.questions.que.modifiedBy\": 0,\n        \"chapters.topics.questions.que.flags\": 0,\n      }},\n      {\n        $addFields: {\n          chapters: [\n            \"$chapters\"\n          ],\n        }\n      },\n    ])\n    .exec()\n    .then(res => {\n      return res[0].chapters[0].topics[0];\n    })\n    .catch(err => err);\n\n  }\n\n  async findSubjectChapterTopicsByChapterUuid(\n    subjectUuid: string, chapterUuid: string, topicUuid: string\n  ) {\n\n    // .findOne(\n    //     { uuid: subjectUuid, \"chapters.uuid\": chapterUuid },\n    //     {\n    //       \"chapters.topics\": 1, \"chapters.topics.uuid\": 1, \"chapters.topics.title\": 1,\n    //       \"chapters.topics.imgUrl\": 1, \"chapters.topics.questions\": 1,\n    //       \"chapters.topics.que\": 1,\n\n    //     }\n    //   )\n    //   .exec();\n  }\n\n  async deleteByUuid(uuid: string) {\n\n    // this.findCategoryByUuid(uuid).then(result => {\n      // result.children.forEach(child => {\n      //   if(child){\n      //     this.qbankSubjectModel.findByIdAndUpdate(\n      //       {_id: child},\n      //       { $pull: { parents: result._id } }\n      //     ).exec();\n      //   }\n      // });\n      // result.parents.forEach(parent => {\n      //   if(parent){\n      //     this.qbankSubjectModel.findByIdAndUpdate(\n      //       {_id: parent},\n      //       { $pull: { children: result._id } }\n      //     ).exec();\n      //   }\n      // });\n\n    // });\n\n    return this.qbankSubjectModel.findOneAndDelete({ uuid }).exec();\n\n  }\n\n  async create(createQBankDTO: CreateQBankSubjectDto): Promise<QBankSubject> {\n    const createdQBank = new this.qbankSubjectModel(createQBankDTO);\n    const result = createdQBank.save();\n    return result;\n  }\n\n  async editByUuid(request: QBankInterface): Promise<QBankSubject> {\n    const result = this.qbankSubjectModel.findOneAndUpdate(\n      { uuid: request.uuid },\n      request\n    ).exec();\n    // result.then(QBankSeries => {\n    //   this.updateAssignments(QBankSeries);\n    // })\n\n    return result;\n  }\n}\n","import { QBankInterface } from '@application/api-interfaces';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateQBankDTO, StartTopicDTO, StopTopicDTO } from '../../dto';\nimport { Course, QBank, QBankSubject, Syllabus, User } from '../../schema';\n\n@Injectable()\nexport class MobileQbankService {\n\n  constructor(\n    @InjectModel('Course') private courseModel: Model<Course>,\n    @InjectModel('QBank') private qbankModel: Model<QBank>,\n    @InjectModel('QBankSubject') private qbankSubjectModel: Model<QBankSubject>,\n    @InjectModel('Syllabus') private syllabus: Model<Syllabus>,\n    @InjectModel('User') private userModel: Model<User>,\n  ) {}\n\n  async findAllTopicsBySubjectUuid(subjectUuid: string): Promise<QBank[]> {\n    return this.qbankModel\n      .find({ 'subject.uuid': subjectUuid })\n      .exec();\n  }\n\n  async findByUuid(uuid: string): Promise<QBank> {\n    return this.qbankModel.findOne({ uuid })\n    .exec();\n  }\n\n  async findSubjectsByCourse(courseId: string): Promise<any> {\n\n    return this.courseModel\n      .find({ _id: courseId, 'flags.qBank': true }, { syllabus: 1, count: 1 })\n      .populate({\n        path: 'syllabus',\n        select: '_id uuid title type',\n        match: {\n          type: { $eq: 'SUBJECT' },\n          'flags.questionBank':  { $eq: true }\n        }\n      })\n      .exec();\n\n  }\n\n  //============ START TOPIC ============\n\n  async startTopic(testUuid: string, userUuid: string, startTopicDTO: StartTopicDTO): Promise<any> {\n\n    return this.userModel.findOneAndUpdate(\n      { uuid: userUuid },\n      {\n        $addToSet: {\n          \"qbanks\":  {\n            topic: startTopicDTO.topic,\n            chapter: startTopicDTO.chapter,\n            course: startTopicDTO.course,\n            subject: startTopicDTO.subject,\n            status: startTopicDTO.status,\n            startedAt: startTopicDTO.startedAt,\n          }\n        }\n      },\n    ).exec().then(\n      (res) => {\n        return res.qbanks;\n      },\n      (err) => {\n        return err;\n      }\n    )\n\n  }\n\n  //============ STOP TOPIC ============\n\n  async stopTopic(topicUuid: string, userUuid: string, stopTopicDTO: StopTopicDTO): Promise<any> {\n\n    return this.userModel.findOneAndUpdate(\n      { uuid: userUuid,  },\n      // filter and replace the object\n      {\n        $set : { \"qbanks.$[elem]\": stopTopicDTO },\n      },\n      { arrayFilters: [ { \"elem.topic.uuid\": { $eq: topicUuid } } ] },\n    ).exec().then(\n      (res) => {\n        return res.qbanks;\n      },\n      (err) => {\n        return err;\n      }\n    )\n\n  }\n\n}\n","import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\n\nimport { SubmittedQBankTopic, User } from '../../../schema';\n\n@Injectable()\nexport class SubmitTopicResultsService {\n\n  constructor(\n    @InjectModel('SubmittedQBankTopic') private submittedQBankTopicModel: Model<SubmittedQBankTopic>,\n    @InjectModel('User') private userModel: Model<User>,\n  ) {}\n\n  async getLeaderBoard(uuid: string, userUuid: string, query) {\n    console.log({ query });\n\n    const ranks = await this.submittedQBankTopicModel\n      .find(\n        { 'topic.uuid': uuid, 'subject.uuid': query.subject, 'course.uuid': query.course },\n        { uuid: 1, stats: 1, user: 1, test: 1, submittedOn: 1, count: 1, rank: 1, totalUsers: 1,\n          \"answers.flags.correct\": 1, \"answers.flags.wrong\": 1 }\n      )\n      .sort([ ['stats.total', 'desc'] ])\n      .exec();\n\n    const analysis = ranks.filter((it, index) => {\n      it.rank = index + 1;\n      // return it.user.uuid === userUuid\n    });\n\n    return { analysis: analysis[0] }\n\n  }\n\n  async getReview(uuid: string, userUuid: string) {\n\n    return this.userModel.aggregate([\n      { $match: { uuid: userUuid } },\n      { $addFields: { \"submissions\": {\n        $filter: {\n          input: \"$submissions.qbanks\",\n          cond: {\n            $eq: [ \"$$this.topic.uuid\", uuid ]\n          }\n        }\n      }}},\n      { $match: {\n        \"submissions.qbanks\": {\n          $ne: []\n        }\n      }},\n      {\n        $addFields: {\n          submissions: {\n            tests: \"$submissions.qbanks\",\n          }\n        }\n      }\n    ]).exec()\n    .then(res => {\n      return res[0].submissions;\n    })\n    .catch(err => err);\n\n  }\n\n  async getReviewQuestionDetails(uuid: string, userUuid: string, questionUuid: string, query) {\n\n    return this.userModel\n      .aggregate([\n        {\n          $match: {\n            uuid: userUuid,\n            \"submissions.qbanks.topic.uuid\": uuid,\n            \"submissions.qbanks.answers.question.uuid\": questionUuid,\n          }\n        },\n        {\n          $addFields: {\n            \"submissions.qbanks\": {\n              $filter: {\n                input: \"$submissions.qbanks\",\n                cond: {\n                  $eq: [ \"$$this.topic.uuid\", uuid ]\n                },\n              }\n            }\n          }\n        },\n        { $unwind: \"$submissions.qbanks\" },\n        {\n          $addFields: {\n            \"submissions.qbanks.answers\": {\n              $filter: {\n                input: \"$submissions.qbanks.answers\",\n                cond: {\n                  $eq: [ \"$$this.question.uuid\", questionUuid ]\n                },\n              }\n            }\n          }\n        },\n      ])\n      .exec()\n      .then(res => {\n        return res[0].submissions.qbanks.answers[0];\n      })\n      .catch(err => err);\n\n  }\n\n}\n","import { SubmitUserQBankTopicInterface } from '@application/api-interfaces';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport * as Uuid from 'uuid';\nimport { SubmitUserQBankTopicDTO } from '../../../dto';\nimport { SubmittedQBankTopic, User } from '../../../schema';\n\n@Injectable()\nexport class SubmitQbankTopicService {\n\n  payload: SubmitUserQBankTopicInterface;\n\n  constructor(\n    @InjectModel('SubmittedQBankTopic') private submittedQBankTopicModel: Model<SubmittedQBankTopic>,\n    @InjectModel('User') private userModel: Model<User>,\n  ) {}\n\n  async SubmittedTest(submitQBankTopicDTO: SubmitUserQBankTopicDTO): Promise<any> {\n\n    this.payload = submitQBankTopicDTO;\n    this.payload.uuid = Uuid.v4();\n    this.payload.count = submitQBankTopicDTO.answers.length;\n    this.compute();\n    const submittedTest = new this.submittedQBankTopicModel(this.payload);\n    await submittedTest.save();\n\n    return await this.changeTestState().then(() => {\n\n      return this.computeRanks().then((res) => {\n        return res;\n      });\n\n    });\n\n  }\n\n  compute() {\n\n    this.buildStats();\n\n    this.payload.answers.map((obj, index) => {\n\n      if(obj.answer === obj.question.answer) {\n        // increment correct marks count\n        this.payload.answers[index].flags.correct = true;\n        ++this.payload.stats.correct;\n      }\n\n      if(obj.answer !== obj.question.answer) {\n        // increment wrong marks count\n        ++this.payload.stats.wrong;\n        this.payload.answers[index].flags.wrong = true;\n      }\n\n    });\n\n    this.payload.stats.percentages = {\n      correct: (this.payload.stats.correct / this.payload.count) * 100,\n      wrong: (this.payload.stats.wrong / this.payload.count) * 100,\n    }\n\n  }\n\n  buildStats() {\n\n    this.payload.stats = {\n      total: 0,\n      correct: 0,\n      wrong: 0,\n      percentages: {\n        correct: 0,\n        wrong: 0,\n      }\n    };\n\n  }\n\n  async computeRanks() {\n\n    const sorted = await this.submittedQBankTopicModel.find(\n      {\n        'topic.uuid': this.payload.topic.uuid,\n        'subject.uuid': this.payload.subject.uuid,\n        'course.uuid': this.payload.course.uuid,\n      }\n    ).sort([ ['stats.total', 'desc'] ])\n    .exec();\n\n      const userSubmission = await this.submittedQBankTopicModel.findOne(\n        {\n          'topic.uuid': this.payload.topic.uuid,\n          'subject.uuid': this.payload.subject.uuid,\n          'course.uuid': this.payload.course.uuid,\n          'user.uuid': this.payload.user.uuid,\n        }\n      ).exec();\n\n    const userTest = await this.userModel.findOneAndUpdate(\n      { uuid: this.payload.user.uuid },\n      { $push: { \"submissions.qbanks\": userSubmission } },\n    )\n    .exec();\n\n    return { sorted, userSubmission, userTest };\n\n  }\n\n  changeTestState() {\n\n    return this.userModel.findOneAndUpdate(\n      { uuid: this.payload.user.uuid },\n      { $pull: {\n        qbanks: { topic: {\n          uuid: this.payload.topic.uuid,\n          title: this.payload.topic.title\n        } }\n      } },\n    );\n\n  }\n\n}\n","import { SubscriptionInterface } from '@application/api-interfaces';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model, Query } from 'mongoose';\nimport { CreateSubscriptionDto } from '../dto';\nimport { Subscription } from '../schema/subscription.schema';\n\n@Injectable()\nexport class MobileSubscriptionService {\n  constructor(\n    @InjectModel('Subscription') private subscriptionModel: Model<Subscription>\n  ) {}\n\n  async findAll(): Promise<Subscription[]> {\n    return this.subscriptionModel\n      .find()\n      .select({ createdOn: 0, modifiedOn: 0, createdBy: 0, modifiedBy: 0 })\n      .populate({\n        path: 'courses',\n        select: '_id uuid title'\n      })\n      .populate({\n        path: 'videos',\n        select: '_id uuid title'\n      })\n      .populate({\n        path: 'tests',\n        select: '_id uuid title'\n      })\n      .populate({\n        path: 'qbanks',\n        select: '_id uuid title'\n      })\n      .exec();\n  }\n\n  async findByUuid(uuid: string, query): Promise<Subscription> {\n\n    console.log(query);\n\n    return this.subscriptionModel\n      .findOne({ uuid })\n      .select({ createdOn: 0, modifiedOn: 0, createdBy: 0, modifiedBy: 0 })\n      .populate({\n        path: 'videos',\n        select: '_id uuid title',\n        match: { courses: query?.courseId }\n      })\n      .populate({\n        path: 'tests',\n        select: '_id uuid title'\n      })\n      .populate({\n        path: 'qbanks',\n        select: '_id uuid title'\n      })\n      .exec();\n  }\n\n  // async updateAssignments(result: Subscription) {\n  //   result?.parents?.forEach(par => {\n  //     if(par){\n  //       this.subscriptionModel.findByIdAndUpdate(\n  //         {_id: par},\n  //         { $push: { children: result._id } }\n  //       ).exec();\n  //     }\n  //   });\n  //   result?.children?.forEach(chi => {\n  //     if(chi){\n  //       this.subscriptionModel.findByIdAndUpdate(\n  //         {_id: chi},\n  //         { $push: { parents: result._id } }\n  //       ).exec();\n  //     }\n  //   });\n  // }\n}\n","import { SubmitUserTestInterface } from '@application/api-interfaces';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport * as Uuid from 'uuid';\nimport { SubmitUserTestDTO } from '../../../dto';\nimport { SubmittedTest, User } from '../../../schema';\nimport { TestResultsService } from '../test-results/test-results.service';\n\n@Injectable()\nexport class SubmitTestService {\n\n  payload: SubmitUserTestInterface;\n\n  constructor(\n    @InjectModel('SubmittedTest') private submittedTestModel: Model<SubmittedTest>,\n    @InjectModel('User') private userModel: Model<User>,\n  ) {}\n\n  async SubmittedTest(submitTestDTO: SubmitUserTestDTO): Promise<any> {\n\n    this.payload = submitTestDTO;\n    this.payload.uuid = Uuid.v4();\n    this.payload.count = submitTestDTO.answers.length;\n    this.compute();\n    const submittedTest = new this.submittedTestModel(this.payload);\n    await submittedTest.save();\n\n    return await this.changeTestState().then(() => {\n\n      return this.computeRanks().then((res) => {\n        return res;\n      });\n\n    });\n\n  }\n\n  compute() {\n\n    this.buildStats();\n\n    this.payload.answers.map((obj, index) => {\n\n      if(obj.answer) {\n        this.payload.answers[index].flags.attempted = true;\n      }\n\n      if(obj.answer === obj.question.answer) {\n        // increment correct marks count\n        this.payload.answers[index].flags.correct = true;\n        ++this.payload.stats.correct;\n        if(obj.flags.markAsGuessed) {\n          // increment correct guessed marks count\n        this.payload.answers[index].flags.markAsGuessed = true;\n        this.payload.answers[index].flags.guessedCorrect = true;\n          ++this.payload.stats.guessed.correct;\n          ++this.payload.stats.guessed.total;\n        }\n        // compute total marks by each question positive marks\n        if(obj.question.positive) {\n          this.payload.stats.total\n            = this.payload.stats.total + (this.payload.stats.correct * obj.question.positive);\n        } else {\n          this.payload.stats.total = this.payload.stats.correct;\n        }\n      }\n\n      if(obj.answer !== obj.question.answer) {\n        // increment wrong marks count\n        ++this.payload.stats.wrong;\n        this.payload.answers[index].flags.wrong = true;\n        if(obj.flags.markAsGuessed) {\n          // increment wrong guessed marks count\n        this.payload.answers[index].flags.markAsGuessed = true;\n        this.payload.answers[index].flags.guesssedWrong = true;\n          ++this.payload.stats.guessed.wrong;\n          ++this.payload.stats.guessed.total;\n        }\n        // compute total marks by each question negative marks\n        if(obj.question.negative) {\n          this.payload.stats.total\n            = this.payload.stats.total - (this.payload.stats.wrong * obj.question.negative);\n        }\n      }\n\n      if(obj.flags.skipped) {\n        // increment skipped count\n        this.payload.answers[index].flags.skipped = true;\n        ++this.payload.stats.skipped;\n      }\n\n    });\n\n    this.payload.stats.percentages = {\n      correct: (this.payload.stats.correct / this.payload.count) * 100,\n      wrong: (this.payload.stats.wrong / this.payload.count) * 100,\n      skipped: (this.payload.stats.skipped / this.payload.count) * 100,\n      guessedTotal: (this.payload.stats.guessed.total / this.payload.count) * 100,\n    }\n\n  }\n\n  buildStats() {\n\n    this.payload.stats = {\n      total: 0,\n      correct: 0,\n      wrong: 0,\n      skipped: 0,\n      guessed: {\n        total: 0,\n        correct: 0,\n        wrong: 0,\n      },\n      percentages: {\n        correct: 0,\n        wrong: 0,\n        skipped: 0,\n        guessedTotal: 0,\n      }\n    };\n\n  }\n\n  async computeRanks() {\n\n    const sorted = await this.submittedTestModel.find(\n      {\n        'test.uuid': this.payload.test.uuid,\n        'category.uuid': this.payload.category.uuid,\n        'course.uuid': this.payload.course.uuid,\n      }\n    ).sort([ ['stats.total', 'desc'] ])\n    .exec();\n\n    const ranks = await this.submittedTestModel\n      .updateMany(\n        {\n          'test.uuid': this.payload.test.uuid,\n          'category.uuid': this.payload.category.uuid,\n          'course.uuid': this.payload.course.uuid,\n        },\n        { $set: {\n          totalUsers: sorted.length,\n        } }\n      )\n      .exec();\n\n      const userSubmission = await this.submittedTestModel.findOne(\n        {\n          'test.uuid': this.payload.test.uuid,\n          'category.uuid': this.payload.category.uuid,\n          'course.uuid': this.payload.course.uuid,\n          'user.uuid': this.payload.user.uuid,\n        }\n      ).exec();\n\n    const userTest = await this.userModel.findOneAndUpdate(\n      { uuid: this.payload.user.uuid },\n      { $push: { \"submissions.tests\": userSubmission } },\n    )\n    .exec();\n\n    return { sorted, ranks, userSubmission, userTest };\n\n  }\n\n  changeTestState() {\n\n    return this.userModel.findOneAndUpdate(\n      { uuid: this.payload.user.uuid },\n      { $pull: {\n        tests: { test: {\n          uuid: this.payload.test.uuid,\n          title: this.payload.test.title\n        } }\n      } },\n    );\n\n  }\n\n}\n","import { TestCategoryInterface } from '@application/api-interfaces';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { TSCategories, User } from '../../schema';\n\n@Injectable()\nexport class MobileTestCategoryService {\n  constructor(\n    @InjectModel('TSCategories') private TSCategoriesModel: Model<TSCategories>,\n    @InjectModel('User') private userModel: Model<User>\n  ) {}\n\n  async findAll(): Promise<TSCategories[]> {\n    return this.TSCategoriesModel\n      .find()\n      .populate('courses')\n      .exec();\n  }\n\n  async findAllByCourseId(courseId: string, query): Promise<TSCategories[]> {\n\n    return this.userModel.findOne(\n      { uuid: query.user },\n    ).exec().then(\n      (res: User) => {\n        return this.TSCategoriesModel\n        .find({ courses: courseId  }, { _id: 1, uuid: 1, title: 1, order: 1, schedulePdf: 1, userCompletedCount: 1, count: 1 })\n        .exec().then(\n          (result) => {\n            result.map(it => {\n\n              // res?.submissions.tests.map(test => {\n              //   console.log(it.uuid, test.category.uuid, it.uuid === test.category.uuid);\n              //   if(it.uuid === test.category.uuid) {\n              //     ++it.userCompletedCount;\n              //   }\n              // })\n            })\n\n            return result;\n          }\n        )\n      }\n    )\n\n  }\n\n  async findByUuid(uuid: string): Promise<TSCategories> {\n    return this.TSCategoriesModel\n      .findOne({ uuid })\n      .populate('courses')\n      .exec();\n  }\n\n  async deleteByUuid(uuid: string) {\n\n    // this.findCategoryByUuid(uuid).then(result => {\n      // result.children.forEach(child => {\n      //   if(child){\n      //     this.TSCategoriesModel.findByIdAndUpdate(\n      //       {_id: child},\n      //       { $pull: { parents: result._id } }\n      //     ).exec();\n      //   }\n      // });\n      // result.parents.forEach(parent => {\n      //   if(parent){\n      //     this.TSCategoriesModel.findByIdAndUpdate(\n      //       {_id: parent},\n      //       { $pull: { children: result._id } }\n      //     ).exec();\n      //   }\n      // });\n\n    // });\n\n    return this.TSCategoriesModel.findOneAndDelete({ uuid }).exec();\n\n  }\n\n  // async create(createTSCategoriesDTO: CreateTSCategoriesDTO): Promise<TSCategories> {\n  //   const createdTSCategories = new this.TSCategoriesModel(createTSCategoriesDTO);\n  //   const result = createdTSCategories.save();\n  //   return result;\n  // }\n\n  // async editByUuid(request: TestCategoryInterface): Promise<TSCategories> {\n\n  //   return this.TSCategoriesModel.findOneAndUpdate({ uuid: request.uuid }, request).exec();\n\n  // }\n\n}\n","import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\n\nimport { SubmittedTest, User } from '../../../schema';\n\n@Injectable()\nexport class TestResultsService {\n\n  constructor(\n    @InjectModel('SubmittedTest') private submittedTestModel: Model<SubmittedTest>,\n    @InjectModel('User') private userModel: Model<User>,\n  ) {}\n\n  async getLeaderBoard(uuid: string, userUuid: string, query) {\n    console.log({ query });\n\n    const ranks = await this.submittedTestModel\n      .find(\n        { 'test.uuid': uuid, 'category.uuid': query.category, 'course.uuid': query.course },\n        { uuid: 1, stats: 1, user: 1, test: 1, submittedOn: 1, count: 1, rank: 1, totalUsers: 1,\n          \"answers.question.postive\": 1, \"answers.question.negative\": 1,\n          \"answers.flags.correct\": 1, \"answers.flags.wrong\": 1 }\n      )\n      .sort([ ['stats.total', 'desc'] ])\n      .exec();\n\n    const analysis = ranks.filter((it, index) => {\n      it.rank = index + 1;\n      return it.user.uuid === userUuid\n    });\n\n    return { analysis: analysis[0], ranks: ranks.slice(0, 50) }\n\n  }\n\n  async getReview(uuid: string, userUuid: string) {\n\n    return this.userModel.aggregate([\n      { $match: { uuid: userUuid } },\n      { $addFields: { \"submissions\": {\n        $filter: {\n          input: \"$submissions.tests\",\n          cond: {\n            $eq: [ \"$$this.test.uuid\", uuid ]\n          }\n        }\n      }}},\n      { $match: {\n        \"submissions.tests\": {\n          $ne: []\n        }\n      }},\n      {\n        $addFields: {\n          submissions: {\n            tests: \"$submissions.tests\",\n          }\n        }\n      }\n    ]).exec()\n    .then(res => {\n      return res[0].submissions;\n    })\n    .catch(err => err);\n\n  }\n\n  async getReviewQuestionDetails(uuid: string, userUuid: string, questionUuid: string) {\n\n    return this.userModel\n      .aggregate([\n        {\n          $match: {\n            uuid: userUuid,\n            \"submissions.tests.test.uuid\": uuid,\n            \"submissions.tests.answers.question.uuid\": questionUuid,\n          }\n        },\n        {\n          $addFields: {\n            \"submissions.tests\": {\n              $filter: {\n                input: \"$submissions.tests\",\n                cond: {\n                  $eq: [ \"$$this.test.uuid\", uuid ]\n                },\n              }\n            }\n          }\n        },\n        { $unwind: \"$submissions.tests\" },\n        {\n          $addFields: {\n            \"submissions.tests.answers\": {\n              $filter: {\n                input: \"$submissions.tests.answers\",\n                cond: {\n                  $eq: [ \"$$this.question.uuid\", questionUuid ]\n                },\n              }\n            }\n          }\n        },\n      ])\n      .exec()\n      .then(res => {\n        return res[0].submissions.tests.answers[0];\n      })\n      .catch(err => err);\n\n  }\n\n}\n","import { EntityStatusEnum } from '@application/api-interfaces';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { ReportErrorDTO, StartTestDTO } from '../../dto';\nimport { StopTestDTO } from '../../dto/stop-test.dto';\nimport { UserStatusService } from '../../helpers';\nimport { ReportError, Test, User } from '../../schema';\n\n@Injectable()\nexport class MobileTestsService {\n\n  constructor(\n    private userStatus: UserStatusService,\n    @InjectModel('Test') private testModel: Model<Test>,\n    @InjectModel('User') private userModel: Model<User>,\n    @InjectModel('ReportError') private reportErrorModel: Model<ReportError>\n  ) {}\n\n  async findAll(): Promise<Test[]> {\n    return this.testModel\n      .find()\n      .populate('courses')\n      .populate('categories')\n      .populate('syllabus')\n      .exec();\n  }\n\n  async findAllTestsByCatId(catId: string, query) : Promise<any> {\n\n    return this.userModel.findOne(\n      { uuid: query.user },\n    )\n    .populate(\n      {\n        path: 'subscriptions',\n        select: '_id uuid title courses videos tests qbanks createdOn modifiedOn',\n        // deep population method\n        populate: {\n          path: 'courses videos tests qbanks',\n          select: '_id uuid title categories flags',\n          populate: {\n            path: 'categories',\n            select: '_id uuid title',\n          }\n        },\n      }\n    )\n    .exec().then(\n\n      res => {\n\n        // console.log('tests', res?.submissions.tests);\n\n        const filteredTests =  [];\n        res?.subscriptions.map(it => {\n\n          return it.tests.map(test => {\n            if(test.categories.filter(cat => {\n              // console.log(cat._id, catId, cat._id == catId);\n              // == since we are comparing ObjectId\n              // tslint:disable-next-line: triple-equals\n              return cat._id == catId; }).length) {\n              filteredTests.push(test);\n            }\n          });\n        });\n\n        // console.log({ filteredTests });\n\n        return this.testModel\n        .find(\n          { categories: catId  },\n          { courses:0, questions: 0, createdBy: 0, createdOn: 0, modifiedBy: 0, modifiedOn: 0 }\n        )\n        .populate({\n          path: 'categories',\n          select: '_id uuid title'\n        })\n        .exec().then(\n\n          (result) => {\n\n            result.map(ft => {\n\n              // console.log('result', ft);\n              const userStatus = this.userStatus.getUserTestStatus(res, ft);\n\n              ft.status = userStatus.testStatus;\n              ft.startedAt = userStatus.startedAt;\n              ft.stoppedAt = userStatus.stoppedAt;\n\n              filteredTests.map(ftt => {\n                if(ft.uuid === ftt.uuid) {\n                  ft.flags = {\n                    active: ft.flags.active,\n                    subscribed: true,\n                    suggested: ft.flags.suggested,\n                    editable: ft.flags.editable,\n                  }\n\n                }\n              })\n            });\n\n            return result;\n\n          }\n        )\n      }\n    );\n\n  }\n\n  async findByUuid(uuid: string): Promise<Test> {\n    return this.testModel\n    .findOne(\n      { uuid },\n      { uuid: 1, title: 1, imgUrl: 1, description: 1, time: 1, count: 1, pdf: 1,\n        'questions.que.answer': 1,\n        'questions.que.options': 1,\n        'questions.que._id': 1,\n        'questions.que.uuid': 1,\n        'questions.que.title': 1,\n        'questions.que.difficulty': 1,\n        'questions.que.previousAppearances': 1,\n        'questions.que.tags': 1,\n        'questions.isSelected': 1,\n        'questions.positive': 1,\n        'questions.negative': 1,\n        'questions.order': 1\n      }\n    )\n    .exec();\n  }\n\n  async findByCourse(courseId: string): Promise<Test[]> {\n    return this.testModel\n    .find({ courses: courseId }, { id: 1, uuid: 1, title: 1})\n    .exec();\n  }\n\n  //============ START TEST ============\n\n  async startTest(testUuid: string, userUuid: string, startTestDTO: StartTestDTO): Promise<any> {\n\n    return this.userModel.findOneAndUpdate(\n      { uuid: userUuid },\n      {\n        $addToSet: {\n          \"tests\":  {\n            test: startTestDTO.test,\n            category: startTestDTO.category,\n            course: startTestDTO.course,\n            subject: startTestDTO.subject,\n            totalTime: startTestDTO.totalTime,\n            expiryDate: startTestDTO.expiryDate,\n            status: startTestDTO.status,\n            startedAt: startTestDTO.startedAt,\n          }\n        }\n      },\n    ).exec().then(\n      (res) => {\n        return res.tests;\n      },\n      (err) => {\n        return err;\n      }\n    )\n\n  }\n\n  //============ CALCULATE TEST ELAPSED MINUTES ============\n\n  async calculateUserTestElapsedtime(testUuid: string, userUuid: string): Promise<any> {\n\n    return this.userModel\n    .aggregate([\n      { $match: { uuid: userUuid } },\n      { $unwind: \"$tests\" },\n      {\n        $match: {\n          \"tests.test.uuid\": testUuid\n        }\n      },\n      {\n        $project: {\n          \"tests\": 1,\n        }\n      },\n    ])\n    .exec()\n    .then(\n      (res) => {\n\n        if(res[0]?.tests) {\n\n          const startDate = new Date(res[0].tests?.startedAt);\n          const today = new Date();\n\n          const timeDiff = today.getTime() - startDate.getTime();\n          const mins = Math.floor(timeDiff / (1000 * 60));\n\n          // Debugging\n          // console.log(hours+':'+mins);\n          // console.log(res[0].tests?.totalTime / 60);\n          // console.log(today.getTime() > startDate.getTime());\n\n          let leftOverTime;\n\n          if(mins > res[0].tests?.totalTime) {\n            leftOverTime = 0;\n          } else {\n            leftOverTime = res[0].tests?.totalTime - mins;\n          }\n\n          return { leftOverTime }\n\n        } else {\n          return 'Test not found';\n        }\n      },\n      (err) => {\n        return err;\n      }\n    )\n\n  }\n\n  //============ STOP TEST ============\n\n  async stopTest(testUuid: string, userUuid: string, stopTestDTO: StopTestDTO): Promise<any> {\n\n    return this.userModel.findOneAndUpdate(\n      { uuid: userUuid,  },\n      // filter and replace the object\n      {\n        $set : { \"tests.$[elem]\": stopTestDTO },\n      },\n      { arrayFilters: [ { \"elem.test.uuid\": { $eq: testUuid } } ] },\n    ).exec().then(\n      (res) => {\n        return res.tests;\n      },\n      (err) => {\n        return err;\n      }\n    )\n\n  }\n\n  //============ REPORT ERROR =====================\n\n  async reportError(reportErrorDTO: ReportErrorDTO): Promise<ReportError> {\n\n    const reportError = new this.reportErrorModel(reportErrorDTO);\n    const result = reportError.save();\n    return result;\n\n  }\n\n}\n","import { UserBookmarkInterface, UserInterface  } from '@application/api-interfaces';\nimport { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport bcrypt from 'bcrypt';\nimport { Model } from 'mongoose';\nimport * as itUuid from 'uuid';\nimport { RegisterUserDto } from '../dto';\nimport { Question, User } from '../schema';\n\n@Injectable()\nexport class MobileUsersService {\n\n  constructor(\n    @InjectModel('User') private userModel: Model<User>,\n  ) {}\n\n  async registerUser(registerUserDto: RegisterUserDto): Promise<User | Error> {\n\n    const createdUser = new this.userModel(registerUserDto);\n    createdUser.password = await bcrypt.hash(createdUser.password, 10);\n    const uniqueMobile = await this.findByMobile(createdUser.mobile).then(\n      (res) => res\n    );\n    const uniqueEmail = await this.findByEmail(createdUser.email).then(\n      (res) => res\n    );\n\n    if (!uniqueEmail && !uniqueMobile) {\n      return createdUser.save();\n    } else if (uniqueEmail) {\n      throw new HttpException(\n        'The input email is already taken, please enter a new one',\n        HttpStatus.BAD_REQUEST\n      );\n    } else if (uniqueMobile) {\n      throw new HttpException(\n        'The input mobile is already taken, please enter a new one',\n        HttpStatus.BAD_REQUEST\n      );\n    }\n\n  }\n\n  async login(request: { mobile: number; password: string }): Promise<User> {\n\n    const user = await this.findByMobile(request.mobile);\n\n    if (!user) {\n      throw new HttpException('User not found', HttpStatus.UNAUTHORIZED);\n    }\n\n    // compare passwords\n    return bcrypt.compare(request.password, user.password).then((val) => {\n\n      if (!val) {\n        throw new HttpException('Invalid credentials', HttpStatus.UNAUTHORIZED);\n      }\n      user.flags.isLoggedIn = true;\n\n      return user;\n\n    });\n\n  }\n\n  deviceLogout(uuid: string, deviceId?: string) {\n\n    const user = this.userModel.findOne({ uuid }).exec().then(res => {\n\n      res.devices?.forEach(dev => {\n        if(dev?.id === deviceId) {\n          dev.isLoggedIn = false;\n        }\n      });\n\n      const deviceIsLoggedIn = (device) => device.isLoggedIn;\n\n      if(!res.devices?.some(deviceIsLoggedIn)) {\n        res.flags.isLoggedIn = false;\n      }\n\n      return res;\n\n    })\n\n    return this.userModel.findOneAndUpdate({ uuid }, user).exec();\n\n  }\n\n  async findByMobile(mobile): Promise<User> {\n\n    return this.userModel.findOne({ mobile }).populate(\n      {\n        path: 'subscriptions',\n        select: '_id uuid title courses videos tests qbanks createdOn modifiedOn',\n        // deep population method\n        populate: {\n          path: 'courses videos tests qbanks',\n          select: '_id uuid title categories',\n          populate: {\n            path: 'categories',\n            select: '_id uuid title',\n          }\n        },\n      }\n    ).exec();\n\n  }\n\n  async findByEmail(email: string): Promise<User> {\n    return this.userModel.findOne({ email }).exec();\n  }\n\n  async findStudentByUuid(uuid: string): Promise<User> {\n    return this.userModel.findOne({ uuid })\n      .populate(\n        {\n          path: 'subscriptions',\n          select: '_id uuid title courses videos tests qbanks createdOn modifiedOn',\n          // deep population method\n          populate: {\n            path: 'courses videos qbanks tests',\n            select: '_id uuid title categories',\n            populate: {\n              path: 'categories',\n              select: '_id uuid title',\n            }\n          },\n        }\n      )\n      .exec();\n  }\n\n  async changePassword(\n    uuid: string,\n    oldPassword: string,\n    newPassword: string\n  ): Promise<{ message: string; result: User }> {\n    const hashOldPassword = await bcrypt.hash(oldPassword, 10);\n    const hashNewPassword = await bcrypt.hash(newPassword, 10);\n\n    const user = await this.userModel.findOne({ uuid });\n\n    if(user) {\n      return bcrypt.compare(oldPassword, user.password).then((val) => {\n        if(val) {\n          return this.userModel.findOneAndUpdate(\n            { uuid },\n            { password: hashNewPassword })\n          .exec().then(result => {\n            return { message: 'Password reset success!!', result };\n          })\n        }else {\n          throw new HttpException('Old Password Validation Failed. Please try again.', HttpStatus.UNAUTHORIZED);\n        }\n      });\n    } else {\n      throw new HttpException('User not found', HttpStatus.UNAUTHORIZED);\n    }\n  }\n\n  async assignSubscriptionsByUserUuid(\n    uuid: string,\n    request: any\n  ) {\n    return this.userModel.findOneAndUpdate({ uuid }, request).exec();\n  }\n\n  async toggleBookMarksByUserUuid(\n    uuid: string,\n    request: UserBookmarkInterface\n  ) {\n\n    request.createdOn = new Date();\n    request.uuid = itUuid.v4();\n\n    const userBookMarks = await this.userModel.findOneAndUpdate(\n      { uuid, type: 'STUDENT' },\n      { $push: {\n        bookmarks: {\n          uuid: request.uuid,\n          question: request.question,\n          metadata: request.metadata,\n          createdOn: request.createdOn,\n        }\n      }\n    }).exec();\n\n    return userBookMarks.bookmarks;\n\n  }\n\n  async removeBookMark(uuid: string, bookMarkUuid: string) {\n\n    console.log({ uuid, bookMarkUuid });\n\n    const userBookMarks = await this.userModel.findOneAndUpdate(\n      { uuid },\n      { $pull: {\n        bookmarks: { uuid: bookMarkUuid }\n      },\n    })\n    .exec();\n\n    return userBookMarks.bookmarks;\n\n  }\n\n  async getAllBookMarksByUserUuid(uuid: string) {\n\n    return this.userModel\n      .findOne({ uuid })\n      .populate({\n        path: 'bookmarks.question',\n        model: Question,\n        select: '_id uuid title options description imgUrl tags previousAppearances'\n      })\n      .select({\n        bookmarks: 1,\n      })\n      .exec()\n\n  }\n\n  async loginWithOtp(requests): Promise<any> {\n\n    const users = await this.findByMobile(requests.mobile);\n    const otp = this.generateOTP();\n    const now = new Date();\n    const expiration_time = this.AddMinutesToDate(now,10);\n\n    if (!users) {\n    // throw new HttpException('User not found', HttpStatus.UNAUTHORIZED);\n      const users = new this.userModel();\n      users.mobile = requests.mobile;\n      users.uuid = requests.uuid;\n      users.otp = otp;\n      users.expiration_time = expiration_time;\n      // users.flags = { active:false, paid: false,isLoggedIn:false};\n      users.save()\n    }else{\n      users.otp = otp;\n      users.expiration_time = expiration_time;\n      users.save()\n    }\n    var url = 'http://www.bulksmsapps.com/api/apismsv2.aspx?apikey=e10df577-740e-4f74-96ac-12193192c152&sender=PLATOS&number='+requests.mobile+'&message=Dear User, '+otp+' is One time password (OTP) for PLATO. Thank You.';\n    await this.getScript(url)\n\n    console.log(url)\n    return {\"status\": true,\"code\" : 2000,'otp':otp}\n  }\n\n\n  async verifyOtp(requests){\n    try {\n      const users = await this.findByMobile(requests.mobile);\n      // users\n      const uuid = users.uuid;\n      var now = new Date();\n      if(users.otp == requests.otp){\n        if(now <= users.expiration_time){\n          users.otp = '';\n          users.isLoggedIn = true;\n          const devices = this.userModel.findOneAndUpdate(\n              { uuid, type: 'STUDENT' },\n              { $addToSet: {\n                devices: {\n                  id: requests.device_id ,isLoggedIn:true\n                }\n              }\n            }).exec();\n          //  return users.save();\n            // const payload = { username: users.mobile, sub: users.uuid };\n            // console.log(payload)\n          return {\"status\": true,\"code\" : 2000, 'data' : users}\n        }else{\n          return {\"status\": false,\"code\" : 2001, 'message' : 'inputs'}\n        }\n      }else{\n        return {\"status\": false,\"code\" : 2002, 'message' : 'invalid inputs'}\n      }\n    } catch (error) {\n      return {\"status\": false,\"code\" : 5000, 'message' : 'Server error'}\n    }\n  }\n\n\n  generateOTP() {\n    var digits = '0123456789';\n    let OTP = '';\n      for (let i = 0; i < 6; i++ ) {\n          OTP += digits[Math.floor(Math.random() * 10)];\n      }\n    return OTP;\n  }\n\n  AddMinutesToDate(date, minutes) {\n    return new Date(date.getTime() + minutes*60000);\n  }\n\n  getScript = (url) => {\n    return new Promise((resolve, reject) => {\n      const http      = require('http'),\n            https     = require('https');\n\n      let client = http;\n\n      if (url.toString().indexOf(\"https\") === 0) {\n          client = https;\n      }\n\n      client.get(url, (resp) => {\n          let data = '';\n\n          // A chunk of data has been recieved.\n          resp.on('data', (chunk) => {\n              data += chunk;\n          });\n\n          // The whole response has been received. Print out the result.\n          resp.on('end', () => {\n              resolve(data);\n          });\n\n      }).on(\"error\", (err) => {\n          reject(err);\n      });\n    });\n  }\n}\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport * as mongoose from 'mongoose';\n\nimport { TestFlagsInterface, TestQuestionInterface, UserKeyInterface } from '@application/api-interfaces';\nimport { Course } from './course.schema';\nimport { Syllabus } from './syllabus.schema';\nimport { TSCategories } from './ts-categories.schema';\n\n@Schema()\nexport class Test extends Document {\n\n  @Prop({ required: true })\n  uuid: string;\n\n  @Prop()\n  id: string;\n\n  @Prop({ required: true })\n  title: string;\n\n  @Prop({ required: true })\n  description: string;\n\n  @Prop({ required: true })\n  imgUrl: string;\n\n  @Prop([{ type: mongoose.Schema.Types.ObjectId, ref: Course.name }])\n  courses: string[];\n\n  @Prop([{ type: mongoose.Schema.Types.ObjectId, ref: TSCategories.name }])\n  categories: any;\n\n  @Prop([{ type: mongoose.Schema.Types.ObjectId, ref: Syllabus.name }])\n  subjects: string[];\n\n  @Prop({ required: true })\n  order: number;\n\n  @Prop({ required: true })\n  time: string;\n\n  @Prop({ required: true })\n  scheduledDate: Date;\n\n  @Prop({ required: true })\n  expiryDate: Date;\n\n  @Prop({ required: true })\n  pdf: string;\n\n  @Prop({ required: true })\n  count: number;\n\n  @Prop({\n    required: false,\n    type: String,\n    enum: ['PAUSED', 'SUBMITTED', 'YET_TO_START'],\n  })\n  status: string;\n\n  @Prop({ required: false })\n  startedAt: Date;\n\n  @Prop({ required: false })\n  stoppedAt: Date;\n\n  @Prop({ required: true })\n  questions: TestQuestionInterface[];\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  createdOn?: Date;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  modifiedOn?: Date;\n\n  @Prop({ required: true, type: Object })\n  createdBy: UserKeyInterface;\n\n  @Prop({ type: Object })\n  modifiedBy: UserKeyInterface;\n\n  @Prop({ required: true, type: Object })\n  flags: TestFlagsInterface;\n\n}\n\nexport const TestSchema = SchemaFactory.createForClass(Test);\nTestSchema.set('validateBeforeSave', true);\n","import { FlagsInterface, UserKeyInterface, VideoFlagsInterface, VideoInterface, VideoSubjectChapterInterface } from '@application/api-interfaces';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport * as mongoose from 'mongoose';\nimport { Course } from './course.schema';\nimport { Syllabus } from './syllabus.schema';\nimport { Video } from './video.schema';\n\n@Schema()\nexport class VideoSubject extends mongoose.Document {\n\n  @Prop({ required: true })\n  uuid: string;\n\n  @Prop()\n  id: string;\n\n  @Prop({ required: false })\n  title: string;\n\n  @Prop({ required: true })\n  order: number;\n\n  @Prop({ required: false })\n  count?: number;\n\n  @Prop({ required: true })\n  chapters: VideoSubjectChapterInterface[];\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Course.name })\n  courses: string;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Syllabus.name })\n  syllabus: string;\n\n  // @Prop({ required:false })\n  // videos: video;\n\n  @Prop({ required: true })\n  imgUrl: string;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  createdOn?: Date;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  modifiedOn?: Date;\n\n  @Prop({ required: true, type: Object })\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user created it'\n  })\n  createdBy: UserKeyInterface;\n\n  @Prop({ type: Object })\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user modified it'\n  })\n  modifiedBy: UserKeyInterface;\n\n  @Prop({ required: true, type: Object })\n  flags: VideoFlagsInterface;\n\n}\n\nexport const VideoSubjectSchema = SchemaFactory.createForClass(VideoSubject);\nVideoSubjectSchema.set('validateBeforeSave', true);\n","import {\n    FlagsInterface,\n    UserKeyInterface,\n  } from '@application/api-interfaces';\n  // import { Subscription } from '@application/shared-api';\n  import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n  import { ApiProperty } from '@nestjs/swagger';\n  import * as mongoose from 'mongoose';\n\n@Schema()\nexport class Roles extends mongoose.Document {\n\n  // @Prop({type: mongoose.Schema.Types.ObjectId})\n  // _id?: any;\n\n  @Prop({ required: true })\n  @ApiProperty({ example: '0ba7596e-5087-4c72-887d-aaa730cdac23', description: 'Unique Identifier' })\n  uuid: string;\n\n\n  @Prop({ required: true })\n  @ApiProperty({ example: 'New title', description: 'Title' })\n  title: string;\n\n  \n  @Prop([{\n    module: { type: mongoose.Schema.Types.ObjectId },\n    subModules: [{ type: mongoose.Schema.Types.ObjectId }],\n    \n  }])\n  @ApiProperty({ example: 'Role Permissions', description: 'Role Permissions' })\n  rolePermissions: [];\n\n\n  @Prop({\n    required: true,\n   // type: String,\n  })\n  @ApiProperty({ example: '2020-11-09T19:53:53.032Z', description: 'Created On' })\n  createdOn?: Date;\n\n  @Prop({\n    required: false,\n    type: Date,\n  })\n  @ApiProperty({ example: '2020-11-12T19:53:53.032Z', description: 'Modified On' })\n  modifiedOn?: Date;\n\n  @Prop({ required: true, type: Object })\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user created it'\n  })\n  createdBy: UserKeyInterface;\n\n  @Prop({ type: Object })\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user modified it'\n  })\n  modifiedBy: UserKeyInterface;\n\n  @Prop({ required: true, type: Object })\n  @ApiProperty({\n    example: { active: true, paid: true, },\n    description: 'flags to operate on the entity'\n  })\n  flags: FlagsInterface;\n\n}\n\nexport const RolesSchema = SchemaFactory.createForClass(Roles);\nRolesSchema.set('validateBeforeSave', true);\n\n","import {\n    FlagsInterface,\n    UserKeyInterface,\n  } from '@application/api-interfaces';\n  // import { Subscription } from '@application/shared-api';\n  import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n  import { ApiProperty } from '@nestjs/swagger';\n  import * as mongoose from 'mongoose';\n\n  @Schema()\nexport class RoleSubModules extends mongoose.Document {\n\n  @Prop({ required: true })\n  @ApiProperty({ example: '0ba7596e-5087-4c72-887d-aaa730cdac23', description: 'Unique Identifier' })\n  uuid: string;\n\n  @Prop()\n  @ApiProperty({ example: '5fa90d866rttry3001021fd', description: 'Object ID' })\n  id: string;\n\n  @Prop({ required: false })\n  @ApiProperty({ example: 'New Tag', description: 'Tag Title' })\n  title: string;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  @ApiProperty({ example: '2020-11-09T19:53:53.032Z', description: 'Created On' })\n  createdOn?: Date;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  @ApiProperty({ example: '2020-11-12T19:53:53.032Z', description: 'Modified On' })\n  modifiedOn?: Date;\n\n  @Prop({ required: true, type: Object })\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user created it'\n  })\n  createdBy: UserKeyInterface;\n\n  @Prop({ type: Object })\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user modified it'\n  })\n  modifiedBy: UserKeyInterface;\n\n  @Prop({ required: true, type: Object })\n  @ApiProperty({\n    example: { active: true, paid: true, },\n    description: 'flags to operate on the entity'\n  })\n  flags: FlagsInterface;\n\n}\n\nexport const RoleSubModulesSchema = SchemaFactory.createForClass(RoleSubModules);\nRoleSubModulesSchema.set('validateBeforeSave', true);","import {\n    UserKeyInterface,\n} from '@application/api-interfaces';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Employee } from './employee.schema';\n\n@Schema()\nexport class Department extends mongoose.Document {\n\n    @Prop({ required: true })\n    uuid: string;\n\n    @Prop()\n    id: string;\n\n    @Prop({ required: true })\n    title: string;\n\n    @Prop([{ type: mongoose.Schema.Types.ObjectId, ref: Employee.name }])\n    employee: string[];\n\n    @Prop([{ type: mongoose.Schema.Types.ObjectId, ref: Employee.name }])\n    hod: string;\n\n    @Prop({\n        required: false,\n        type: String,\n    })\n    createdOn?: Date;\n\n    @Prop({\n        required: false,\n        type: String,\n    })\n    modifiedOn?: Date;\n\n    @Prop({ required: true, type: Object })\n    createdBy: UserKeyInterface;\n\n    @Prop({ type: Object })\n    modifiedBy: UserKeyInterface;\n\n    @Prop({ required: true, type: Object })\n    flags: any;\n}\n\nexport const DepartmentSchema = SchemaFactory.createForClass(Department);\nDepartmentSchema.set('validateBeforeSave', true);\n","import { QBankInterface, UserVideoInterface, UserVideoStatusEnum, VideoPlaybackInfoInterface } from '@application/api-interfaces';\nimport { HttpService, Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { AxiosResponse } from 'axios';\nimport { Model } from 'mongoose';\nimport { Observable } from 'rxjs';\nimport { CreateVideoSubjectDto } from '../dto';\nimport { User, VideoSubject } from '../schema';\n\n@Injectable()\nexport class MobileVideoSubjectService {\n\n  constructor(\n    @InjectModel('VideoSubject') private videoSubjectModel: Model<VideoSubject>,\n    @InjectModel('User') private userModel: Model<User>,\n    private httpService: HttpService\n  ) {}\n\n  async findByCourse(courseId: string) {\n\n    return this.videoSubjectModel\n      .find({ courses: courseId }, { id: 1, uuid: 1, title: 1, count: 1, imgUrl: 1 })\n      .exec();\n\n  }\n\n  async findAllChaptersBySubjectUuid(subjectUuid: string): Promise<{ title: string }[]> {\n    return this.videoSubjectModel\n      .find({ 'uuid': subjectUuid }, { chapters: 1 })\n      .exec();\n  }\n\n  async findAll(): Promise<VideoSubject[]> {\n    return this.videoSubjectModel\n      .find()\n      .exec();\n  }\n\n  async findSubjectChaptersByUuid(uuid: string): Promise<VideoSubject> {\n    return this.videoSubjectModel\n      .findOne({ uuid },\n        { courses: 0, createdOn: 0, modifiedOn: 0, createdBy: 0, modifiedBy: 0,\n        \"chapters.videos.subject\": 0, \"chapters.videos.chapter\": 0 }\n      )\n      .exec();\n  }\n\n  async findVideosByUuid(videoUuid: string): Promise<VideoSubject> {\n\n    return this.videoSubjectModel\n    .aggregate([\n      { $match: { \"chapters.videos.uuid\": videoUuid } },\n      { $unwind: \"$chapters\" },\n      { $addFields: { \"chapters.videos\": { $filter: {\n        input: \"$chapters.videos\",\n        cond: {\n          $eq: [\n            \"$$this.uuid\",\n            videoUuid\n          ]\n        }\n      }}}},\n      { $match: {\n        \"chapters\": {\n          $ne: []\n        }\n      }},\n      {\n        $addFields: {\n          chapters: [\n            \"$chapters\"\n          ]\n        }\n      }\n    ])\n    .exec()\n    .then(res => {\n      return res[0].chapters[0].topics[0];\n    })\n    .catch(err => err);\n\n  }\n\n  getPlaybackInfo(videoUuid: string, payload: VideoPlaybackInfoInterface) {\n\n    return this.httpService.post(`https://dev.vdocipher.com/api/videos/${payload.vdoCipherId}/otp`)\n      .toPromise()\n      .then(res => {\n        const video: UserVideoInterface = {\n          uuid: videoUuid,\n          vdoCipherId: payload.vdoCipherId,\n          title: payload.title,\n          status: UserVideoStatusEnum.PAUSED,\n          remainingTime: payload.totalTime,\n        }\n        return this.userModel.findOneAndUpdate(\n          { uuid: payload.userUuid },\n          { $push: { videos: video } }\n        ).exec()\n          .then(result => {\n            return res.data;\n          })\n      })\n      .catch(err => err);\n\n  }\n\n  async deleteByUuid(uuid: string) {\n\n    // this.findCategoryByUuid(uuid).then(result => {\n      // result.children.forEach(child => {\n      //   if(child){\n      //     this.videoSubjectModel.findByIdAndUpdate(\n      //       {_id: child},\n      //       { $pull: { parents: result._id } }\n      //     ).exec();\n      //   }\n      // });\n      // result.parents.forEach(parent => {\n      //   if(parent){\n      //     this.videoSubjectModel.findByIdAndUpdate(\n      //       {_id: parent},\n      //       { $pull: { children: result._id } }\n      //     ).exec();\n      //   }\n      // });\n\n    // });\n\n    return this.videoSubjectModel.findOneAndDelete({ uuid }).exec();\n\n  }\n\n  async create(createVideoSubjectDTO: CreateVideoSubjectDto): Promise<VideoSubject> {\n    const createdVideoSubject = new this.videoSubjectModel(createVideoSubjectDTO);\n    const result = createdVideoSubject.save();\n    return result;\n  }\n\n  async editByUuid(request: QBankInterface): Promise<VideoSubject> {\n    const result = this.videoSubjectModel.findOneAndUpdate(\n      { uuid: request.uuid },\n      request\n    ).exec();\n    // result.then(QBankSeries => {\n    //   this.updateAssignments(QBankSeries);\n    // })\n\n    return result;\n  }\n}\n","import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Syllabus, Video } from '../schema';\n\nexport interface VideoSubjectsInterface {\n  id: string;\n  uuid: string;\n  order: number;\n  imgUrlVideos: string;\n  title: string;\n  totalVideos: number;\n}\n\n@Injectable()\nexport class MobileVideosService {\n\n  constructor(\n    @InjectModel('Syllabus') private syllabusModel: Model<Syllabus>,\n    @InjectModel('Video') private videoModel: Model<Video>,\n  ) {}\n\n  async getVideoSubjectsByCourseId(courseId: string): Promise<any> {\n\n    const subjects = await this.videoModel\n      .find({ courses: courseId }, { subjects: 1, _id: 0 })\n      .populate({\n        path: 'subjects',\n        select: 'imgUrlVideos totalVideos _id uuid title order ',\n      })\n      .exec();\n\n      return subjects.filter(sub => !!sub.subject );\n\n  }\n\n  async getSubjectVideos(subjectId) {\n\n    const chapters = await this.videoModel\n    .find(\n      { subjects: subjectId },\n      {\n        chapter: 1,\n      },\n    ).populate({\n      path: 'chapters',\n      select: '_id uuid title'\n    })\n\n    const videos = await this.videoModel\n      .find(\n        { subjects: subjectId },\n        {\n          chapter: 1,\n          title: 1,\n          totalTime: 1,\n          videoId: 1,\n          'faculty.name': 1,\n          notes: 1,\n          'flags.paid': 1,\n          publishOn: 1\n        })\n      .populate({\n        path: 'chapters',\n        select: '_id uuid title'\n      })\n      .exec();\n\n    // const chapters = videos.map(vid => vid.chapters);\n    // // chapters.videos = videos;\n    console.log({ chapters });\n\n    return videos;\n\n    // subject.children.map((chapter) => {\n    //   console.log({ chapter });\n\n    //   videos = this.videoModel\n    //     .find({ syllabus: chapter.id }).exec().then(res => res);\n    //     sub.totalVideos = videos.length;\n    // });\n\n\n\n      // .find({ courses: courseId, type: { $eq: 'SUBJECT' } }\n    // [\n    //   {\n    //     chapterid, chapteruuid, title, order,\n    //     videos [\n    //       { videoId, videoUuid, title, facultyImage, faculty_name, totalTime, materialPdf, flags,  }\n    //     ]\n    //   }\n    // ]\n  }\n\n  // needs video cipher\n  // getVideoByUuid(uuid: string) {\n  //   videoUuid, videoid, title, facultyImage, faculty_name, totalTime, notespdf, plaubackOtp, playbackInfo, topics: [\n  //     { title, time }\n  //   ]\n  // }\n  // needs video cipher\n  // downloadVideo(videoId, userId) {\n  //   offlineplaubackOtp,\n  //   offlineplaybackInfo\n  // }\n\n\n\n  // async findAllCourses(): Promise<HomePageCourseInterface[]> {\n  //   return this.courseModel\n  //   .find({ \"flags.active\": true },{ title: 1, uuid: 1, id: 1, imgUrl: 1 })\n  //   .exec();\n  // }\n\n\n\n}\n","import { AboutInterface } from '@application/api-interfaces';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { AboutUs } from '../schema/about-us.schema';\n\n@Injectable()\nexport class AboutUsService {\n\n  constructor(\n    @InjectModel('AboutUs') private aboutUsModel: Model<AboutUs>\n  ) {}\n\n  async createAboutUsPage(payload: AboutInterface): Promise<AboutUs> {\n    const result = new this.aboutUsModel(payload);\n    console.log({ result });\n\n    return result.save();\n  }\n\n  async updateAboutUsPage(\n    request: AboutInterface\n  ): Promise<AboutUs> {\n    return this.aboutUsModel.findOneAndUpdate({ uuid: request.uuid }, request).exec();\n  }\n\n  async getAboutUs(): Promise<AboutUs[]> {\n    return this.aboutUsModel.find().exec();\n  }\n\n\n\n}\n","import { BannerInterface } from '@application/api-interfaces';\nimport { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateBannerDTO } from '../dto';\nimport {\n  Coupon,\n  Course,\n  Subscription,\n  Syllabus,\n  TSCategories,\n  VideoSubject,\n} from '../schema';\nimport { Banner } from '../schema/banner.schema';\nimport { Employee } from '../schema/employee.schema';\nimport { User } from '../schema/user.schema';\n@Injectable()\nexport class BannersService {\n  constructor(\n    @InjectModel('Banner') private bannersModel: Model<Banner>,\n    @InjectModel('Employee') private employeeModel: Model<Employee>,\n    @InjectModel('User') private userModel: Model<User>,\n    @InjectModel('Syllabus') private syllabusModel: Model<Syllabus>,\n    @InjectModel('Subscription') private subscriptionModel: Model<Subscription>,\n    @InjectModel('Course') private courseModel: Model<Course>,\n    @InjectModel('VideoSubject') private videoSubjectModel: Model<VideoSubject>,\n    @InjectModel('TSCategories')\n    private testCategoriesModel: Model<TSCategories>,\n    @InjectModel('Coupon') private couponModel: Model<Coupon>\n  ) {}\n\n  async create(createBannersDTO: CreateBannerDTO): Promise<Banner> {\n    const createdBanner = new this.bannersModel(createBannersDTO);\n    return createdBanner.save();\n    // let uniqueOrder = await this.bannersModel.findOne({ order: createBannersDTO.order }).then(\n    //   (res) => res\n    // );\n    // if (!uniqueOrder) {\n    //   return createdBanner.save();\n    // }\n    // else {\n    //   throw new HttpException(\n    //     'The input Order is already taken, please enter a new one',\n    //     HttpStatus.BAD_REQUEST\n    //   );\n    // }\n  }\n\n  async findAll(employee): Promise<Banner[]> {\n\n    const courseListIds = [];\n    const empCourses = await this.courseModel.find({organizations:{$in:employee.organizations}},{_id:true})\n    empCourses.forEach(element => {\n      courseListIds.push(element._id)\n    });\n    return this.bannersModel\n      .find({courses:{$in:courseListIds}})\n      .populate({\n        path: 'courses',\n        select: {\n          uuid: 1,\n          title: 1,\n          _id: 1,\n        },\n      })\n      .sort({ order: 'ASC' })\n      .exec();\n  }\n\n  async findByUuid(uuid: string): Promise<Banner> {\n    return this.bannersModel\n      .findOne({ uuid })\n      .populate({\n        path: 'courses',\n\n        select: {\n          uuid: 1,\n          title: 1,\n          _id: 1,\n        },\n      })\n      .populate({\n        path: 'subscriptions',\n\n        select: {\n          uuid: 1,\n          title: 1,\n          _id: 1,\n        },\n      })\n      .exec();\n    //  .populate('courses').exec();\n  }\n\n  async deleteByUuid(uuid: string) {\n    return this.bannersModel.findOneAndDelete({ uuid }).exec();\n  }\n\n  // async deleteBannersByUuid(uuid: string, bannerUuid: string): Promise<Banner> {\n  //   return this.bannersModel\n  //     .update({}, { $pull: { courses: { uuid: bannerUuid } } })\n  //     .exec();\n  // }\n\n  async editBannerByUuid(\n    uuid: string,\n    request: BannerInterface\n  ): Promise<Banner> {\n    return this.bannersModel.findOneAndUpdate({ uuid }, request).exec();\n  }\n\n  async dashboardCount(employee) {\n\n    const courseListIds = [];\n    const empCourses = await this.courseModel.find({organizations:{$in:employee.organizations}},{_id:true})\n    empCourses.forEach(element => {\n      courseListIds.push(element._id)\n    });\n\n    // let Banners = await this.bannersModel.countDocuments().exec();\n    let Coupons = await this.couponModel.countDocuments().exec();\n    let Employee = await this.employeeModel.countDocuments({organizations:{$in:employee.organizations}}).exec();\n    let Users = await this.userModel.countDocuments({courses:{$in:courseListIds}}).exec();\n\n    let activeUsers = await this.userModel\n      .countDocuments({ 'devices.0': { $exists: true } ,courses:{$in:courseListIds}})\n      .exec();\n\n    let SubscribedUserCount = await this.userModel\n      .countDocuments({\n        'subscriptions.expiry_date': {\n          $gte: new Date(),\n        },\n        'devices.0': { $exists: true },\n        courses:{$in:courseListIds}\n      })\n      .exec();\n\n    let Syllabus = await this.syllabusModel\n      .countDocuments({ type: 'SUBJECT' ,courses:{$in:courseListIds}})\n      .exec();\n    let Subscription = await this.subscriptionModel.countDocuments({courses:{$in:courseListIds}}).exec();\n    let Course = await this.courseModel.countDocuments({organizations:{$in:employee.organizations}}).exec();\n    let Videos = await this.videoSubjectModel\n      .find({courses:{$in:courseListIds}}, { _id: 0, count: 1 })\n      .exec();\n    let Tests = await this.testCategoriesModel\n      .find({courses:{$in:courseListIds}}, { _id: 0, 'categories.count': 1 })\n      .exec();\n    let countArray = [];\n    let videoCount = 0;\n    let testCount = 0;\n    Videos.map((res) => {\n      videoCount += res.count;\n    });\n    Tests.map((res) => {\n      testCount += res.categories.count;\n    });\n    countArray.push({\n      // Banners: Banners,\n      Coupons: Coupons,\n      Employee: Employee,\n      Users: Users,\n      Syllabus: Syllabus,\n      Subscription: Subscription,\n      Course: Course,\n      Videos: videoCount,\n      Tests: testCount,\n      activeUsers: activeUsers,\n      SubscribedUserCount: SubscribedUserCount,\n    });\n\n    return countArray;\n  }\n}\n","import { CareerInterface } from '@application/api-interfaces';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateJobDTO } from '../dto';\nimport { Career } from '../schema/career.schema';\n\n@Injectable()\nexport class CareersService {\n\n  constructor(\n    @InjectModel('Career') private aboutUsModel: Model<Career>\n  ) {}\n\n  async createJob(payload: CreateJobDTO): Promise<Career> {\n    const result = new this.aboutUsModel(payload);\n    console.log({ result });\n\n    return result.save();\n  }\n\n  async updateOne(request: CareerInterface): Promise<Career> {\n    return this.aboutUsModel.findOneAndUpdate({ uuid: request.uuid }, request).exec();\n  }\n\n  async findAll(): Promise<Career[]> {\n    return this.aboutUsModel.find().exec();\n  }\n\n  async findOne(uuid: string): Promise<Career> {\n    return this.aboutUsModel.findOne({ uuid }).exec();\n  }\n\n  async deleteOne(uuid: string): Promise<Career> {\n    return this.aboutUsModel.findOneAndDelete({ uuid }).exec();\n  }\n\n}\n","import { CouponInterface } from '@application/api-interfaces';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateCouponDTO } from '../dto';\nimport { Coupon } from '../schema/coupon.schema';\nimport { Course, Subscription } from '../schema';\n\n@Injectable()\nexport class CouponsService {\n  constructor(\n    @InjectModel('Coupon') private couponsModel: Model<Coupon>,\n    @InjectModel('Course') private courseModel: Model<Course>,\n    @InjectModel('Subscription') private subscriptionModel: Model<Subscription>,\n\n  ) {}\n\n  async create(createCouponsDTO: CreateCouponDTO): Promise<Coupon> {\n    const createdCoupon = new this.couponsModel(createCouponsDTO);\n    const result = createdCoupon.save();\n    console.log('added banner', result);\n    return result;\n  }\n\n  async findAll(employee) {\n     const courseListIds = [];\n     const subscriptionsIds = []\n    const empCourses = await this.courseModel.find({organizations:{$in:employee.organizations}},{_id:true})\n    empCourses.forEach(element => {\n      courseListIds.push(element._id)\n    });\n    const subscriptions = await this.subscriptionModel.find({courses:{$in:courseListIds}}, {_id: true })\n    subscriptions.forEach(element => {\n      subscriptionsIds.push(element._id)\n    });\n    return await this.couponsModel\n      .find({subscription:{$in:subscriptionsIds}})\n      .populate({\n        path: 'subscription',\n        select: {\n          title: 1,\n          courses:1\n        },\n      })\n      .exec();\n\n    // const courseListIds = [];\n    // const empCourses = await this.coursesModel.find({organizations:{$in:employee.organizations}},{_id:true})\n    // empCourses.forEach(element => {\n    //   courseListIds.push(element._id)\n    // });\n    //   return this.couponsModel.aggregate([\n    //   {\n    //     $match: { // Filter users based on organizations\n    //       \"courses\": { $in: courseListIds }\n    //     }\n    //   },\n    //   { $lookup: {from: 'courses', localField: 'courses', foreignField: '_id', as: 'courses'} },\n    // ]);\n  }\n\n  async findByUuid(uuid: string): Promise<Coupon> {\n    return this.couponsModel\n      .findOne({ uuid })\n      .populate({\n        path: 'subscription',\n        select: {\n          // \"title\": 1,\n          uuid: 1,\n          actual: 1,\n        },\n      })\n      .populate({\n        path: 'agent',\n        select: {\n          // \"name\": 1,\n          uuid: 1,\n        },\n      })\n      .populate({\n        path: 'users',\n        select: {\n          name: 1,\n          mobile: 1,\n        },\n      })\n      .exec();\n  }\n\n  async deleteByUuid(uuid: string) {\n    return this.couponsModel.findOneAndDelete({ uuid }).exec();\n  }\n\n  async editCouponByUuid(\n    uuid: string,\n    request: CouponInterface\n  ): Promise<Coupon> {\n    return this.couponsModel.findOneAndUpdate({ uuid }, request).exec();\n  }\n\n  async getCouponsByAgentId(agentId: string): Promise<Coupon[]> {\n    return this.couponsModel.find({ agent: agentId }).exec();\n  }\n}\n","import {\n  CourseInterface,\n  SyllabusInterface,\n} from '@application/api-interfaces';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateCourseDTO } from '../dto/create-course.dto';\nimport { TestResultsService } from '../mobile-services';\nimport { QBankSubject, TSCategories, VideoSubject } from '../schema';\nimport { Course } from '../schema/course.schema';\nimport { Logs } from '../schema/logs.schema';\n\n@Injectable()\nexport class CoursesService {\n  constructor(\n    @InjectModel('Course') private courseModel: Model<Course>,\n    @InjectModel('Logs') private logsModel: Model<Logs>,\n    @InjectModel('QBankSubject') private qbankSubjectModel: Model<QBankSubject>,\n    @InjectModel('VideoSubject') private videoSubjectModel: Model<VideoSubject>,\n    @InjectModel('TSCategories') private TSCategoriesModel: Model<TSCategories>,\n  ) { }\n\n  async create(createCourseDTO: CreateCourseDTO): Promise<Course> {\n    const createdCourse = new this.courseModel(createCourseDTO);\n    const result = createdCourse.save();\n    let logs_request = {\n      'moduleName': 'Course',\n      'collectionName': 'courses',\n      'request': createCourseDTO,\n      'documentId': (await result)._id,\n      'createdOn': createCourseDTO.createdOn,\n      'createdBy': createCourseDTO.createdBy,\n    };\n    console.log('logs_request', logs_request);\n    const logs = new this.logsModel(logs_request);\n    const logs_result = logs.save();\n\n    return result;\n  }\n\n  async findAll(employee): Promise<Course[]> {\n    return this.courseModel\n      .find({organizations:{$in:employee.organizations}})\n      .populate({\n        path:'organizations',\n        model: \"Organization\",\n        select: {\n          \"uuid\": 1,\n          \"title\": 1,\n          \"_id\": 1,\n        }\n      })\n      .populate({\n        path: 'syllabus',\n\n        select: {\n          \"uuid\": 1,\n          \"title\": 1,\n          \"_id\": 1,\n          \"type\": 1,\n          \"shortcut\": 1\n        }\n      })\n      .sort({ order: 'ASC' })\n      .exec()\n    // .populate('syllabus')\n    // .exec();\n  }\n  async getActiveCourses(employee:any): Promise<Course[]> {\n    return this.courseModel.find({organizations:{$in:employee.organizations}}, { uuid: 1, title: 1, order: 1, flags: 1 }).exec()\n    // let qbanks = [];\n    // let videos = [];\n    // let tests = []\n    // return this.courseModel.find({  }, { uuid: 1, title: 1, order: 1, flags: 1,qbanks,videos,tests }).exec()\n  }\n\n  async getTestSeriesActiveCourses(): Promise<Course[]> {\n    return this.courseModel\n      .find({ 'flags.testSeries': true }, { _id: 1, uuid: 1, title: 1 })\n      .exec();\n  }\n\n  async findAllQBankCourses(): Promise<Course[]> {\n    return this.courseModel\n      .find({ 'flags.qBank': true }, { _id: 1, uuid: 1, title: 1 })\n      .exec();\n  }\n\n  async findAllVideoCourses(): Promise<Course[]> {\n    return this.courseModel\n      .find({ 'flags.videos': true }, { _id: 1, uuid: 1, title: 1 })\n      .exec();\n  }\n\n  async findByUuid(uuid: string) {\n    return this.courseModel\n      .findOne({ uuid })\n      .populate({\n        path:'organizations',\n        model: \"Organization\",\n        select: {\n          \"uuid\": 1,\n          \"title\": 1,\n          \"_id\": 1,\n        }\n      })\n      .populate({\n        path: 'syllabus',\n\n        select: {\n          \"uuid\": 1,\n          \"title\": 1,\n          \"_id\": 1,\n        }\n      }).exec()\n    // .populate('syllabus')\n    // .exec();\n  }\n\n  async deleteByUuid(uuid: string) {\n    return this.courseModel.findOneAndDelete({ uuid }).exec();\n  }\n\n  async editCourseByUuid(request) {\n    let result = this.courseModel.findOneAndUpdate({ uuid: request.uuid }, request).exec();\n    let logs_request = {\n      'moduleName': 'Course',\n      'collectionName': 'courses',\n      'request': request,\n      'documentId': (await result)._id,\n      'modifiedOn': request.modifiedOn,\n      'modifiedBy': request.modifiedBy,\n    };\n    console.log('logs_request', logs_request);\n    const logs = new this.logsModel(logs_request);\n    const logs_result = logs.save();\n    return result;\n  }\n\n  async findTestSeriesSubjectsByCourse(request: any) {\n    return this.courseModel\n      .find({\n        _id: request.courseId,\n        // 'flags.active': true,\n        'flags.testSeries': true\n      }, { 'uuid': 1, 'title': 1 })\n      .populate(\n        {\n          path: 'syllabus',\n          match: { \"flags.testSeries\": true, 'flags.active': true, },\n          select: {\n            \"uuid\": 1,\n            \"title\": 1,\n            \"type\": 1,\n            \"order\": 1,\n            \"shortcut\": 1\n          }\n        })\n      .exec();\n  }\n\n  async getqbanksubjects(request: any) {\n    return this.courseModel\n      .find({\n        _id: request.courseId,\n        // 'flags.active': true,\n        'flags.qBank': true\n      },\n        { \"uuid\": \"$uuid\", \"title\": \"$title\" },\n      ).populate(\n        {\n          path: 'syllabus',\n          match: {\n            \"type\": \"SUBJECT\",\n            \"flags.questionBank\": true,\n            'flags.active': true\n          },\n          // select:{\n          //   \"uuid\":1,\n          //   \"title\":1,\n          //   \"type\":1,\n          //   \"order\":1,\n          //   \"shortcut\":1\n          // }\n        })\n      .exec();\n  }\n  async getVideosubjects(request: any) {\n    return this.courseModel\n      .find({\n        _id: request.courseId,\n        // 'flags.active': true,\n        'flags.videos': true\n      },\n        { \"uuid\": \"$uuid\", \"title\": \"$title\" },\n      ).populate(\n        {\n          path: 'syllabus',\n          match: {\n            \"type\": \"SUBJECT\",\n            \"flags.videos\": true,\n            'flags.active': true\n          },\n          // select:{\n          //   \"uuid\":1,\n          //   \"title\":1,\n          //   \"type\":1,\n          //   \"order\":1,\n          //   \"shortcut\":1\n          // }\n        })\n      .exec();\n  }\n  async getspqbanksubjects(request: any) {\n    return this.courseModel\n      .find({\n        _id: request.courseId,\n        // 'flags.active': true,\n        'flags.qBank': true\n      },\n        // {\"uuid\":\"$uuid\",\"title\":\"$title\"},\n        { \"title\": \"$title\" },\n      ).populate(\n        {\n          path: 'syllabus',\n          match: {\n            \"type\": \"SUBJECT\",\n            \"flags.questionBank\": true,\n            'flags.active': true\n          },\n          select: {\n            //   \"uuid\":1,\n            \"title\": 1,\n            \"type\": 1,\n            \"order\": 1,\n            //   \"shortcut\":1\n          }\n        })\n      .exec();\n  }\n\n\n  async getCouseSubjects(request: any) {\n    let qbankSubjects = await this.qbankSubjectModel.find({ courses: request.courseId }, { uuid: 1, syllabus: 1, flags: 1, courses: 1, count: 1, order: 1, createdOn: 1 })\n      .populate({\n        path: 'syllabus',\n        select: {\n          \"_id\": 1,\n          \"uuid\": 1,\n          \"title\": 1,\n        }\n      })\n      .populate({\n        path: 'courses',\n        select: {\n          \"_id\": 1,\n          \"uuid\": 1,\n          \"title\": 1,\n        }\n      })\n      .sort({ order: 'ASC' })\n      .exec()\n\n    let videoSubjects = await this.videoSubjectModel.find({ courses: request.courseId },{uuid:1,syllabus:1,flags:1,courses:1,count:1,order:1,createdOn:1})\n    .populate({\n      path: 'syllabus',\n      select: {\n        \"_id\": 1,\n        \"uuid\": 1,\n        \"title\": 1,\n      }\n    })\n    .populate({\n      path: 'courses',\n      select: {\n        \"_id\": 1,\n        \"uuid\": 1,\n        \"title\": 1,\n      }\n    })\n    .sort({order:'ASC'})\n    .exec()\n\n    let testCategories = await this.TSCategoriesModel\n    .find({ courses: request.courseId }, { 'courses': 1, '_id': 1, 'uuid': 1, 'categories.order': 1, 'categories.title': 1, 'categories.tests.length': 1, 'createdOn': 1, 'flags': 1 })\n    .populate({\n      path: 'courses',\n      match: {\n        // \"flags.testSeries\": true ,\n        // 'flags.active': true\n      },\n      select: {\n        \"uuid\": 1,\n        \"title\": 1,\n      }\n    })\n    .sort({ 'categories.order': 1 })\n    .exec()\n\n\n    return {\"qbankSubjects\":qbankSubjects,\"videoSubjects\":videoSubjects,\"testCategories\":testCategories}\n  }\n}\n","import { FacultyInterface } from '@application/api-interfaces';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateFacultyDTO } from '../dto/create-faculty.dto';\nimport { Faculty } from '../schema';\nimport bcrypt from 'bcrypt';\n\n\n@Injectable()\nexport class FacultyService {\n  constructor(@InjectModel('Faculty') private facultyModel: Model<Faculty>) { }\n\n  async create(createFacultyDTO: CreateFacultyDTO): Promise<Faculty| Error> {\n    const createdFaculty = new this.facultyModel(createFacultyDTO);\n    createdFaculty.password = await bcrypt.hash(createdFaculty.password, 10);\n    const result = createdFaculty.save();\n    return result;\n  }\n\n  async findAll(): Promise<Faculty[]> {\n    return this.facultyModel\n      .find()\n      .populate({\n        path: 'courses',\n        match: {\n          'flags.active': true\n        },\n        select: {\n          \"uuid\": 1,\n          \"title\": 1,\n          \"order\": 1,\n        }\n      })\n      .populate({\n        path: 'syllabus',\n        match: {\n          'flags.active': true\n        },\n        select: {\n          \"uuid\": 1,\n          \"title\": 1,\n          \"order\": 1,\n        }\n      })\n      // .populate('courses')\n      //.populate('syllabus')\n      .exec();\n  }\n\n  async getFaculties(): Promise<Faculty[]> {\n    return this.facultyModel\n      .find({specialization:'Faculty'})\n      .populate({\n        path: 'courses',\n        match: {\n          'flags.active': true\n        },\n        select: {\n          \"uuid\": 1,\n          \"title\": 1,\n          \"order\": 1,\n        }\n      })\n      .populate({\n        path: 'syllabus',\n        match: {\n          'flags.active': true\n        },\n        select: {\n          \"uuid\": 1,\n          \"title\": 1,\n          \"order\": 1,\n        }\n      })\n      // .populate('courses')\n      //.populate('syllabus')\n      .exec();\n  }\n\n  async findByUuid(uuid: string): Promise<Faculty> {\n    return this.facultyModel\n      .findOne({ uuid })\n      .populate({\n        path: 'courses',\n        populate: {\n          path: 'syllabus',\n          select: {\n            \"title\": 1,\n            \"uuid\": 1\n          }\n        },\n        match: {\n\n          'flags.active': true\n        },\n        select: {\n          \"uuid\": 1,\n          \"title\": 1,\n          \"_id\": 1,\n\n\n        }\n      })\n      //.populate('courses')\n      .populate({\n        path: 'syllabus',\n        match: {\n\n          'flags.active': true\n        },\n        select: {\n          \"uuid\": 1,\n          \"title\": 1,\n          \"_id\": 1\n\n        }\n      })\n      .exec();\n  }\n\n  async deleteByUuid(uuid: string) {\n    return this.facultyModel.findOneAndDelete({ uuid }).exec();\n  }\n\n  async editFacultyByUuid(\n    uuid: string,\n    request: any\n  ): Promise<Faculty> {\n    return this.facultyModel.findOneAndUpdate({ uuid }, request).exec();\n  }\n}\n","import { Question } from '@application/shared-api';\nimport { async } from '@angular/core/testing';\nimport { map } from 'rxjs/operators';\nimport { SyllabusService } from './syllabus.service';\nimport { SyllabusSchema } from './../schema/syllabus.schema';\nimport { Subject } from 'rxjs';\nimport { QBankInterface } from '@application/api-interfaces';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateQBankDTO, CreateQBankSubjectDto, CreateSyllabusDto } from '../dto';\nimport { Course, QBank, QBankSubject, Syllabus } from '../schema';\n\n@Injectable()\nexport class QbankSubjectService {\n\n  constructor(\n    @InjectModel('Course') private courseModel: Model<Course>,\n    @InjectModel('QBankSubject') private qbankSubjectModel: Model<QBankSubject>,\n    @InjectModel('Syllabus') private syllabusModel: Model<Syllabus>,\n    @InjectModel('Question') private questionModel: Model<Question>,\n    @InjectModel('QBank') private qbankModel: Model<QBank>,\n  ) { }\n\n\n  async findByID(employee) {\n    return this.findAll(employee).then(result => {\n      // result.children.forEach(child => {\n      //   if(child){\n      //     this.syllabusModel.findById(\n      //       {_id: child}\n      //     ).exec();\n      //   }\n      // });\n      result.forEach(subjects => {\n        subjects.chapters.forEach(chapter => {\n          if (chapter) {\n            const chaptersss = this.syllabusModel.findById(\n              { _id: chapter._id }\n            ).exec();\n\n            chapter['chptr'] = chaptersss;\n          }\n        });\n      });\n    });\n  }\n  // async findAll(): Promise<QBankSubject[]> {\n\n  //   // return this.qbankSubjectModel\n  //   //   .aggregate([\n  //   //           // Then join\n  //   //           { \"$lookup\": {\n  //   //             \"from\": \"courses\",\n  //   //             \"localField\": \"courses\",\n  //   //             \"foreignField\": \"_id\",\n  //   //             \"as\": \"course\"\n  //   //         }},\n  //   //         { \"$lookup\": {\n  //   //           \"from\": \"syllabuses\",\n  //   //           \"localField\": \"syllabus\",\n  //   //           \"foreignField\": \"_id\",\n  //   //           \"as\": \"syllabuss\"\n  //   //       }}\n  //   //   ]).exec().then((data) => {\n  //   //     data.forEach(subjects => {\n  //   //       subjects.chapters.forEach(chapter => {\n  //   //       if(chapter){\n  //   //        const  chaptersss= this.syllabusModel.findById(\n  //   //           {_id: chapter._id}\n  //   //         ).exec();\n  //   //           console.log(chaptersss)\n  //   //         chapter['chptr'] = chaptersss;\n  //   //       }\n  //   //       });\n  //   //     });\n  //   //     return data\n  //   //   }).catch((err) => {\n  //   //     console.error(err);\n  //   //   });\n  //   const result = await this.qbankSubjectModel\n  //     .find(\n  //       {\n  //         // 'flags.active': true,\n  //       }, {\n  //       \"uuid\": 1,\n  //       //  \"title\":1,\n  //       // \"imgUrl\": 1,\n  //       \"order\": 1,\n  //       //\"chapters\":1,\n  //       \"count\": 1,\n  //       'chapters': 1,\n  //       \"createdOn\": 1,\n  //       // \"modifiedOn\": 1,\n  //       // \"createdBy\": 1,\n  //       \"flags\": 1\n  //     }).\n  //     populate({\n  //       path: 'courses',\n  //       match: {\n  //         // \"flags.qBank\": true,\n  //         // 'flags.active': true\n  //       },\n  //       select: {\n  //         \"uuid\": 1,\n  //         \"title\": 1,\n  //         // \"order\": 1,\n  //         // \"imgUrl\": 1,\n  //         // \"flags\":1,\n  //         // \"shortcut\": 1,\n  //       }\n  //     })\n  //     .sort({ order: 'ASC' })\n  //     .populate({\n  //       path: 'syllabus',\n  //       match: {\n  //         \"type\": \"SUBJECT\",\n  //         // \"flags.questionBank\": true,\n  //         // 'flags.active': true\n  //       },\n  //       select: {\n  //         \"uuid\": 1,\n  //         \"title\": 1,\n  //         // \"type\": 1,\n  //         // \"order\": 1,\n  //         // \"shortcut\": 1,\n  //         // \"imgUrlVideos\": 1,\n  //         // \"suggestedBanner\": 1,\n  //       }\n  //     })\n  //     .exec()\n  //     .then(async res => {\n  //       if (res != undefined) {\n  //         for (var i = 0; i < res.length; i++) {\n  //           var array = res[i].chapters;\n\n  //           for (var j = 0; j < array.length; j++) {\n  //             let name = '';\n  //             var obj = await this.syllabusModel.findOne({ \"_id\": res[i].chapters[j]._id }, { title: 1 }).exec();\n\n  //             if (obj) {\n  //               name = obj.title;\n  //             }\n  //             res[i].chapters[j]['title'] = name;\n  //           }\n  //         }\n  //       }\n  //       return res;\n  //     })\n  //     .catch(err => err);\n  //   return result;\n\n  // }\n\n  async findAll(employee): Promise<QBankSubject[]> {\n    const courseListIds = [];\n    const empCourses = await this.courseModel.find({organizations:{$in:employee.organizations}},{_id:true})\n    empCourses.forEach(element => {\n      courseListIds.push(element._id)\n    });\n    return this.qbankSubjectModel.find({courses:{$in:courseListIds}},{uuid:1,syllabus:1,flags:1,courses:1,count:1,order:1,createdOn:1})\n    .populate({\n      path: 'syllabus',\n      select: {\n        \"_id\": 1,\n        \"uuid\": 1,\n        \"title\": 1,\n      }\n    })\n    .populate({\n      path: 'courses',\n      select: {\n        \"_id\": 1,\n        \"uuid\": 1,\n        \"title\": 1,\n      }\n    })\n    .sort({order:'ASC'})\n    .exec()\n  }\n\n  async getQbankSubjects(): Promise<QBankSubject[]> {\n    return this.qbankSubjectModel.find({},{uuid:1,syllabus:1,courses:1,order:1,'chapters.title':1,'chapters.uuid':1,'chapters._id':1})\n    .populate({\n      path: 'syllabus',\n      select: {\n        \"_id\": 1,\n        \"uuid\": 1,\n        \"title\": 1,\n      }\n    })\n    .populate({\n      path: 'courses',\n      select: {\n        \"_id\": 1,\n        \"uuid\": 1,\n        \"title\": 1,\n      }\n    })\n    .sort({order:'ASC'})\n    .exec()\n  }\n\n  // async findAll(): Promise<QBankSubject[]> {\n\n  //   return this.qbankSubjectModel.aggregate([\n  //     {\n  //       $lookup: // Equality Match\n  //       {\n  //         from: \"syllabuses\",\n  //         localField: \"syllabus\",\n  //         foreignField: \"_id\",\n  //         as: \"syllabus\",\n  //       },\n  //     },\n  \n  //       { $unwind: \"$syllabus\"},\n  \n  //       {\n  //         $lookup: // Equality Match\n  //         {\n  //           from: \"courses\",\n  //           localField: \"courses\",\n  //           foreignField: \"_id\",\n  //           as: \"courses\",\n  //         },\n  //       },\n    \n  //      { $unwind: \"$courses\"},\n  \n  //      //{ $unwind: \"$chapters\"},\n  //     //  {\n  //     //   '$project': {\n  //     //     'z': '$chapters',\n          \n  //     //      },\n  //     //  },\n  //     //  {\n  //     //   $lookup: // Equality Match\n  //     //   {\n  //     //     from: \"syllabuses\",\n  //     //     localField: \"chapters.uuid\",\n  //     //     foreignField: \"uuid\",\n  //     //     as: \"chapter\",\n  //     //   },\n  //     //  },\n  \n  //      /*{\n  //       $project: {\n          \n  //         likes: {\n  //           $map: {\n  //             input: \"$chapters.uuid\",\n  //             as: \"title\",\n  //             in: {\n  //               $toObjectId: \"$chapter.uuid\"\n  //             }\n  //           }\n  //         },\n  //       }\n  //     },*/\n  //      //{ $unwind: \"$chapter\"},\n  \n  //      //{\n  //        // $addFields: {\n  //           //'chapters.title': '$chapter.title',\n  //                  /* \"chapters.title\": {\n  //                     \"$map\": {\n  //                       \"input\": {\n  //                         \"$filter\": {\n  //                           \"input\": \"$chapter\",\n  //                           \"as\": \"chap\",\n  //                           \"cond\": \"$$chap.uuid\"\n  //                         }\n  //                       },\n  //                       \"as\": \"chaps\",\n  //                       \"in\": {\n  //                         \"name\": \"$$chaps.title\",\n  //                         //\"type\": \"$$hobbym.type\"\n  //                       }\n  //                     }\n  //                   } */\n  \n  //                  /* \"chapters.title\": { \n  //                     $map: { \n  //                         input: \"$chapters\", as: \"chap\", \n  //                         in: {\n  //                             $let: {\n  //                                  vars: { \n  //                                      varin: { \n  //                                          $arrayElemAt: [ { $filter: {\n  //                                                               input: \"$chapter\", as: \"per\", \n  //                                                               cond: { $eq: [ \"$per.uuid\", \"$chap.uuid\" ] }\n  //                                           } }, 0 ] \n  //                                       } \n  //                                  },\n  //                                  in: { \n  //                                   $cond: [ { $eq: [ \"$chap.uuid\", \"$per.uuid\" ] }, \n  //                                   [ { $push: [ \"$chap\", { title: \"$chapter.title\" } ] } ],\n  //                                   \"$$chap\"\n  //                                   ] \n                                      \n  //                                  }\n  //                             }\n  //                         }\n  //                     }\n  //                 }*/\n  \n  //                  /* \"chapters.title\": {\n  //                     $map: {\n  //                       input: \"$chapters.title\",\n  //                       as: \"i\",\n  //                       in: {\n  //                         $mergeObjects: [\n  //                           \"$$i\",\n  //                           {\n  //                             $first: {\n  //                               $filter: {\n  //                                 input: \"$chapter.title\",\n  //                                 cond: { $eq: [\"$$this.uuid\", \"$$i.uuid\"] }\n  //                               }\n  //                             }\n  //                           }\n  //                         ]\n  //                       }\n  //                     }\n  //                   }*/\n  \n  //                   /*\"chapters.title\": {\n  //                     \"$map\": { \n  //                       \"input\": \"$chapters\",\n  //                       \"as\": \"rel\",\n  //                       \"in\": {\n  //                         \"$mergeObjects\": [\n  //                           \"$$rel\",\n  //                           { \"name\": { \"$arrayElemAt\": [\"$chapter.title\", { \"$indexOfArray\": [\"$chapter.uuid\", \"$$rel.uuid\"] }] }}\n  //                         ]\n  //                       }\n  //                     }\n  //                   }*/\n  //       //    } \n  //       //  },\n  //     //  {\n  //     //   $push: { \"chapters.$[chelem]\": { $each: '$chapter.title' } },\n  //     //  },\n  \n  //     // {\n  //     //   arrayFilters: [{ \"chelem.uuid\": { $eq: '$chapters.uuid' } }\n         \n  //     //   ]\n  //     // },\n  \n  //       {\n  //         $group: {\n  //           _id: {\n  //             _id: \"$_id\",\n  //             uuid: \"$uuid\",\n  //             imgUrl:\"$imgUrl\",\n  //             count:\"$count\",\n  //             order:\"$order\",\n  //             createdOn:\"$createdOn\",\n  //             modifiedOn:\"$modifiedOn\",\n  //             createdBy:\"$createdBy\",\n  //             flags:\"$flags\",\n  //             chapters: \"$chapters\",\n  //             syllabus:\"$syllabus\",\n  //             courses:\"$courses\",\n  //             //likes: 1,\n  //             },\n  //       //chapters: {\n  //         //$push: '$members',\n  //       //}\n  \n  //         /*syllabuss: {\n  //               $addToSet: { \n  //                 \"_id\" :\"$syllabus._id\",\n  //                 \"uuid\": \"$syllabus.uuid\",\n  //                 \"title\": \"$syllabus.title\",\n  //                 \"type\": \"$syllabus.type\",\n  //                 \"shortcut\": \"$syllabus.shortcut\",\n  //                 \"order\": \"$syllabus.order\",\n  //                 \"imgUrlVideos\": \"$syllabus.imgUrlVideos\",\n  //                 \"suggestedBanner\": \"$syllabus.suggestedBanner\",\n  //                        } \n  //                   }*/\n  //             },\n            \n  //       },\n  //       {\n  //         $project:{\n  //          \"_id\": \"$_id._id\",\n  //          \"uuid\":\"$_id.uuid\",\n  //          \"imgUrl\":\"$_id.imgUrl\",\n  //          \"count\":\"$_id.count\",\n  //          \"order\":\"$_id.order\",\n  //          \"createdOn\":\"$_id.createdOn\",\n  //          \"modifiedOn\":\"$_id.modifiedOn\",\n  //          \"createdBy\":\"$_id.createdBy\",\n  //          \"flags\":\"$_id.flags\",\n  //          \"chapters\":\"$_id.chapters\",\n  //          \"syllabus\":\"$_id.syllabus\",\n  //          \"courses\":\"$_id.courses\",\n           \n           \n  //          }\n  //       }\n      \n  \n  //   ])\n  //   .sort({order:'ASC'})\n  //   .exec();\n  //  }\n\n  async findByUuid(uuid: string): Promise<QBankSubject> {\n\n    var result = await this.qbankSubjectModel.findOne({ uuid }, { courses: 1, syllabus: 1, chapters: 1, _id: 1, uuid: 1, title: 1, imgUrl: 1, order: 1, flags: 1, count: 1,createdBy:1,createdOn:1 })\n      .exec().then(async res => {\n\n    // var result = await this.qbankSubjectModel.findOne({ uuid }, { courses: 1, syllabus: 1, chapters: 1, _id: 1, uuid: 1, title: 1, imgUrl: 1, order: 1, flags: 1, count: 1 })\n     \n    // .exec().then(async res => {\n      \n\n        //let cuuid='';\n        var qbcourse;\n        var qbsyllabus;\n        if (res != undefined) {\n          qbcourse = await this.courseModel.findOne({ '_id': res.courses }, { _id: 1, uuid: 1, title: 1 })\n            .populate({\n              path: 'syllabus',\n\n              select: {\n                \"uuid\": 1,\n                \"title\": 1,\n                \"_id\": 1,\n\n\n              }\n            }).exec();\n          qbsyllabus = await this.syllabusModel.findOne({ '_id': res.syllabus }, { _id: 1, uuid: 1, title: 1 })\n            .populate({\n              path: 'children',\n              math: {\n                \"type\": \"CHAPTER\",\n                //\"flags.active\":true,\n              },\n\n              select: {\n                \"uuid\": 1,\n                \"title\": 1,\n                \"_id\": 1,\n\n\n              }\n            }).exec();\n          //return await this.syllabusModel.findOne({ '_id': res.syllabus },{ _id:1,uuid:1,title: 1}).exec().then( async ssres => {\n          //})\n          /*.populate({\n            path: 'syllabus',\n        \n            select:{\n              \"uuid\":1,\n              \"title\":1,\n              \"_id\":1,\n              popolate:{\n                path: 'children',\n        \n                select:{\n                  \"uuid\":1,\n                  \"title\":1,\n                  \"_id\":1,\n                }\n              }*/\n\n\n          // }\n          //}).exec();\n          //  qbcourse =await this.courseModel.findOne({ '_id': res.courses }, {  _id:1,uuid:1,title: 1 }) .exec();\n          //  qbsyllabus =await this.syllabusModel.findOne({ '_id': res.syllabus }, {  _id:1,uuid:1,title: 1,children:1 }) .exec();\n          // cuuid=course.uuid;\n          //console.log(cuuid);\n          res.courses = qbcourse;\n          res.syllabus = qbsyllabus;\n\n          var array = res.chapters;\n\n          res.chapters.sort((a, b) => (a.order > b.order) ? 1 : -1);\n\n          for (var j = 0; j < array.length; j++) {\n            let name = '';\n            var obj = await this.syllabusModel.findOne({ \"_id\": res.chapters[j]._id }, { title: 1 }).sort({order:1}).exec();\n\n            if (obj) {\n              name = obj.title;\n            }\n            let topics= [];\n            topics=res.chapters[j].topics;\n            res.chapters[j]['title'] = name;\n            res.chapters[j]['count'] = res.chapters[j].topics.length;\n            res.chapters[j]['topics'] = topics.sort((a, b) => (a.order > b.order) ? 1 : -1);\n            /* for(var k =0;k< res.chapters[j].topics.length;k++){\n               for(var l =0;l< res.chapters[j].topics[k].que.length;l++){\n\n                 var  questionsData= await this.questionModel.findOne({\"_id\": res.chapters[j].topics[k].que[l]._id,\n                 'flags.qBank':true\n               },{\n                   options:1,\n                   title:1,\n                 }\n                 ).exec();\n                   if(questionsData){\n                     res.chapters[j].topics[k].que[l]['options'] = questionsData.options;\n                     res.chapters[j].topics[k].que[l]['title'] = questionsData.title;\n                   }\n               }\n               res.chapters[j].topics[k]['count'] = res.chapters[j].topics[k].que.length\n             }*/\n          }\n          \n        }\n        \n        return res;\n      })\n      .catch(err => err);;\n    return result;\n\n  }\n\n  async findByCourse(courseId: string): Promise<any> {\n    let sub = [];\n    return this.qbankSubjectModel\n    .find({courses:courseId},{_id:1,uuid:1})\n    .populate({\n      path: 'syllabus',\n      select: {\n        \"uuid\": 1,\n        \"title\": 1,\n        \"_id\": 1,\n\n      }\n    }).exec()\n    .then(result => {\n        result.forEach(syl => {\n          let new_syl: any = syl.syllabus;\n         sub.push(\n          {\n            \"_id\":syl._id,\n            \"uuid\":syl.uuid,\n            \"title\":new_syl.title,\n          }\n        )\n        })\n        return sub;\n      })\n\n  }\n\n  async findSubjectsByCoueseIds(coursesarr:any): Promise<any> {\n    let sub = [];\n    return this.qbankSubjectModel\n    .find({courses: { $in:coursesarr}},{_id:1,uuid:1})\n    .populate({\n      path: 'courses',\n      select: {      \n        \"title\": 1\n      }\n    })\n    .populate({\n      path: 'syllabus',\n      select: {\n        \"uuid\": 1,\n        \"title\": 1,\n        \"_id\": 1,\n\n      }\n    }).exec()\n    .then(result => {\n        result.forEach(syl => {\n          let new_syl: any = syl.syllabus;\n          let new_courses: any = syl.courses;\n         sub.push(\n          {\n            \"_id\":syl._id,\n            \"uuid\":syl.uuid,\n            \"title\":new_syl.title,\n            \"course_name\":new_courses.title,\n            \"course_id\":new_courses._id\n          }\n        )\n        })\n        return sub;\n      })\n\n  }\n\n  \n  async findQbQuestions(qbUuid: string, cUuid: string, tUuid: string) {\n\n    return this.qbankSubjectModel\n      .aggregate([\n        { $match: { \"uuid\": qbUuid } },\n        { $unwind: \"$chapters\" },\n\n        {\n          '$project': {\n            'z': {\n              '$filter': {\n                'input': '$chapters.topics',\n                'cond': {\n                  '$eq': [\n                    '$$this.uuid', tUuid\n                  ]\n                }\n              }\n            }\n          }\n        }, {\n          '$unwind': '$z'\n\n        },\n        {\n          $unwind: \"$z.que\"\n        },\n        \n        {$sort: {'z.que.order': 1}},\n        {\n          $lookup: // Equality Match\n          {\n            from: \"questions\",\n            localField: \"z.que.uuid\",\n            foreignField: \"uuid\",\n            as: \"question\",\n          }\n        },\n\n        {\n          $unwind: \"$question\"\n        },\n\n\n\n        {\n          $project: {\n            \"order\": '$z.que.order',\n            \"_id\": \"$question._id\",\n            \"uuid\": \"$question.uuid\",\n            \"title\": \"$question.title\",\n            \"imgUrl\": \"$question.imgUrl\",\n            \"options\": \"$question.options\",\n            \"type\": \"$question.type\",\n            \"answer\": \"$question.answer\",\n            \"description\": \"$question.description\",\n            \"flags\": \"$question.flags\",\n            \"mathType\": \"$question.mathType\",\n            \"questionId\": \"$question.questionId\",\n            \"descriptionImgUrl\": \"$question.descriptionImgUrl\",\n            \"matchLeftSideOptions\": \"$question.matchLeftSideOptions\",\n            \"matchRightSideOptions\": \"$question.matchRightSideOptions\",\n\n            \"perals\":\"$question.perals\",\n            \"syllabus\":\"$question.syllabus\",\n            \"difficulty\":\"$question.difficulty\",\n            \"previousAppearances\":\"$question.previousAppearances\",\n            \"tags\":\"$question.tags\",\n            \"createdBy\":\"$question.createdBy\",\n            // \"matchRightSideOptions\":\"$question.matchRightSideOptions\",\n            // \"matchLeftSideOptions\":\"$question.matchLeftSideOptions\",\n            // \"createdOn\":\"$question.createdOn\",\n            // \"shortTitle\":\"$question.shortTitle\",\n          }\n        },\n\n      ])\n      .exec();\n  }\n\n  async deleteByTestUuid(subjectUuid: string, topicUuid: string) {\n\n    return this.qbankSubjectModel\n      .findOneAndUpdate(\n        { uuid: subjectUuid },\n        // filter and push to the object\n        {\n          $pull: { \"chapters.$[].topics\": { uuid: topicUuid } },\n          $inc: { 'count': -1 }\n        },\n      )\n      .exec();\n  }\n\n  async deleteByUuid(uuid: string) {\n\n    // this.findCategoryByUuid(uuid).then(result => {\n    // result.children.forEach(child => {\n    //   if(child){\n    //     this.qbankSubjectModel.findByIdAndUpdate(\n    //       {_id: child},\n    //       { $pull: { parents: result._id } }\n    //     ).exec();\n    //   }\n    // });\n    // result.parents.forEach(parent => {\n    //   if(parent){\n    //     this.qbankSubjectModel.findByIdAndUpdate(\n    //       {_id: parent},\n    //       { $pull: { children: result._id } }\n    //     ).exec();\n    //   }\n    // });\n\n    // });\n\n\n    return this.qbankSubjectModel.findOneAndDelete({ uuid }).exec();\n\n  }\n\n  async create(createQBankSubjectDTO: CreateQBankSubjectDto): Promise<QBankSubject> {\n\n\n    const createdQBankSubject = new this.qbankSubjectModel(createQBankSubjectDTO);\n\n    // const createSyllabusDto: CreateSyllabusDto = {\n    //   uuid: createdQBankSubject.uuid,\n    //   title: createdQBankSubject.title,\n    //   order: createdQBankSubject.order,\n    //   imgUrlVideos: 'url',\n    //   suggestedBanner: '',\n    //   imgUrlQBank: '',\n    //   parents: null,\n    //   children: null,\n    //   createdOn: new Date(),\n    //   flags: {\n    //     active: true,\n    //     editable: true,\n    //     testSeries: false,\n    //     videos: false,\n    //     materials: false,\n    //     flashCards: false,\n    //     questionBank: true,\n    //     mcq: false,\n    //     suggested: false,\n    //   },\n    //   createdBy: createdQBankSubject.createdBy,\n    //   type: 'SUBJECT',\n    //   shortcut: 'test'\n    // };\n    // const createdSyllabus = new this.syllabusModel(createSyllabusDto);\n    // await createdSyllabus.save();\n    const result = createdQBankSubject.save();\n    return result;\n\n  }\n\n  async addSubjectTopic(createQBankDTO: CreateQBankDTO): Promise<QBankSubject> {\n\n    return this.qbankSubjectModel\n      .findOneAndUpdate(\n        {\n          courses: createQBankDTO.courses,\n          syllabus: createQBankDTO.subject,\n          // _id: createQBankDTO.subject._id,\n        },\n        // filter and push to the object\n        {\n          $push: { \"chapters.$[elem].topics\": createQBankDTO.topics },\n          // $push: { \"chapters.$[elem].topics\": createQBankDTO },\n          $inc: { 'count': 1 }\n        },\n        { arrayFilters: [{ \"elem._id\": { $eq: createQBankDTO.chapter } }] },\n        // { arrayFilters: [ { \"elem.title\": { $eq: createQBankDTO.chapter.title } } ] },\n      )\n      .exec();\n  }\n\n  async createBulkTopics(response: any) {\n    console.log('responseresponseresponseresponse',response);\n    \n    response.map(res=>{\n      return this.qbankSubjectModel\n      .findOneAndUpdate(\n        {\n          courses: res.courses,\n          syllabus: res.subject,\n          // _id: createQBankDTO.subject._id,\n        },\n        // filter and push to the object\n        {\n          $push: { \"chapters.$[elem].topics\": res.topics },\n          // $push: { \"chapters.$[elem].topics\": createQBankDTO },\n          $inc: { 'count': 1 }\n        },\n        { arrayFilters: [{ \"elem._id\": { $eq: res.chapter } }] },\n        // { arrayFilters: [ { \"elem.title\": { $eq: createQBankDTO.chapter.title } } ] },\n      )\n      .exec();\n    })\n    \n  }\n\n  async editByUuid(request: QBankInterface): Promise<QBankSubject> {\n    const result = this.qbankSubjectModel.findOneAndUpdate(\n      { uuid: request.uuid },\n      request\n    ).exec();\n    // result.then(QBankSeries => {\n    //   this.updateAssignments(QBankSeries);\n    // })\n\n    return result;\n  }\n  async deleteQueByUuid(subjectUuid: string, cUuid: string, topicUuid: string, queUuid: string) {\n    return this.qbankSubjectModel\n      .findOneAndUpdate(\n        { uuid: subjectUuid },\n        {\n          $pull: { \"chapters.$[outer].topics.$[inner].que\": { uuid: queUuid } }\n        },\n        {\n          arrayFilters: [\n            { \"outer.uuid\": cUuid },\n            { 'inner.uuid': topicUuid }\n          ]\n        }\n\n      )\n      .exec();\n  }\n\n  async copyQBQuestions(request: QBankInterface): Promise<QBankSubject> {\n\n    return this.qbankSubjectModel\n      .findOneAndUpdate(\n        {\n          uuid: request.to_subject\n\n        },\n        // filter and push to the object\n        {\n          $push: { \"chapters.$[chelem].topics.$[telem].que\": { $each: request.que } },\n\n        },\n        {\n          arrayFilters: [{ \"chelem.uuid\": { $eq: request.to_chapter } },\n          { \"telem.uuid\": { $eq: request.to_topic } }\n          ]\n        },\n\n      )\n      .exec();\n  }\n\n  async copyQBTopics(request: QBankInterface): Promise<QBankSubject> {\n    return this.qbankSubjectModel\n      .findOneAndUpdate(\n        {\n          uuid: request.to_subject\n\n        },\n        // filter and push to the object\n        {\n          $push: { \"chapters.$[chelem].topics\": { $each: request.topics } },\n          $inc : { 'count' : request.count }\n        },\n        {\n          arrayFilters: [{ \"chelem.uuid\": { $eq: request.to_chapter } }\n            //  { \"telem.uuid\": { $eq: request.to_topic } } \n          ]\n        },\n\n      )\n      .exec();\n  }\n\n  async copyQBChapter(request: QBankInterface): Promise<QBankSubject> {\n    return this.qbankSubjectModel\n      .findOneAndUpdate(\n        {\n          uuid: request.to_subject\n\n        },\n        // filter and push to the object\n        {\n          $push: { \"chapters\": { $each: request.chapters } },\n          $inc : { 'count' : request.count }\n        },\n        //   { arrayFilters: [ { \"chelem.uuid\": { $eq: request.to_chapter } }\n        //                       //  { \"telem.uuid\": { $eq: request.to_topic } } \n        // ] },\n\n      )\n      .exec();\n  }\n\n  async moveqbquestions(request: QBankInterface): Promise<QBankSubject> {\n\n    this.qbankSubjectModel\n      .findOneAndUpdate(\n        { uuid: request.from_subject },\n\n        {\n          $pull: { \"chapters.$[chelem].topics.$[telem].que\": { \"uuid\": { $in: request.from_que } } }\n        },\n        {\n          arrayFilters: [{ \"chelem.uuid\": { $eq: request.from_chapter } },\n          { \"telem.uuid\": { $eq: request.from_topic } }\n          ]\n        },\n\n      )\n      .exec();\n    return this.qbankSubjectModel\n      .findOneAndUpdate(\n        {\n          uuid: request.to_subject\n\n        },\n        // filter and push to the object\n        {\n          $push: { \"chapters.$[tochelem].topics.$[totelem].que\": { $each: request.que } },\n\n        },\n        {\n          arrayFilters: [{ \"tochelem.uuid\": { $eq: request.to_chapter } },\n          { \"totelem.uuid\": { $eq: request.to_topic } }\n          ]\n        },\n\n      )\n      .exec();\n\n\n  }\n\n  async dragAndDropQBQuestions(request: QBankInterface): Promise<QBankSubject> {\n    //console.log('QBankSubject',QBankSubject);\n    return this.qbankSubjectModel\n      .findOneAndUpdate(\n        {\n          uuid: request.from_subject\n        },\n        {\n          $set: {\n            \"chapters.$[elem].topics.$[elem1].que\": request.que,\n          }\n          // $inc : { 'count' : 1 }\n        },\n        {\n          arrayFilters: [\n            { \"elem.uuid\": { $eq: request.from_chapter } },\n            { \"elem1.uuid\": { $eq: request.from_topic } }\n          ]\n        },\n      ).exec();\n  }\n\n  async dragAndDropQBTopics(request: any): Promise<QBankSubject> {\n    //console.log('QBankSubject',QBankSubject);\n    return this.qbankSubjectModel\n      .findOneAndUpdate(\n        {\n          uuid: request.from_subject\n        },\n        {\n          $set: {\n            \"chapters.$[elem].topics\": request.topics,\n          }\n          // $inc : { 'count' : 1 }\n        },\n        {\n          arrayFilters: [\n            { \"elem.uuid\": { $eq: request.from_chapter } },\n            // { \"elem1.uuid\": { $eq: request.from_topic } }\n          ]\n        },\n      ).exec();\n  }\n  async dragAndDropQBChapters(request: any): Promise<QBankSubject> {\n    //console.log('QBankSubject',QBankSubject);\n    return this.qbankSubjectModel\n      .findOneAndUpdate(\n        {\n          uuid: request.from_subject\n        },\n        {\n          $set: {\n            \"chapters\": request.chapters,\n          }\n          // $inc : { 'count' : 1 }\n        }\n        // {\n        //   arrayFilters: [\n        //     { \"elem.uuid\": { $eq: request.from_chapter } },\n        //     // { \"elem1.uuid\": { $eq: request.from_topic } }\n        //   ]\n        // },\n      ).exec();\n  }\n  async dragAndDropQBSubjects(request: any): Promise<QBankSubject> {\n    return request.map(res=>{\n       this.qbankSubjectModel.findOneAndUpdate({uuid:res.uuid},{order:res.order}).exec();\n    })\n  }\n  async moveqbtopics(request: QBankInterface): Promise<QBankSubject> {\n\n    this.qbankSubjectModel\n      .findOneAndUpdate(\n        { uuid: request.from_subject },\n\n        {\n          $pull: { \"chapters.$[chelem].topics\": { \"uuid\": { $in: request.from_topic } } },\n          $inc : { 'count' : -(request.count) }\n        },\n        {\n          arrayFilters: [{ \"chelem.uuid\": { $eq: request.from_chapter } },\n            // { \"telem.uuid\": { $eq: request.from_topic } } \n          ]\n        },\n\n      )\n      .exec();\n\n    return this.qbankSubjectModel\n      .findOneAndUpdate(\n        {\n          uuid: request.to_subject\n\n        },\n        // filter and push to the object\n        {\n          $push: { \"chapters.$[tochelem].topics\": { $each: request.topics } },\n          $inc : { 'count' : request.count }\n        },\n        {\n          arrayFilters: [{ \"tochelem.uuid\": { $eq: request.to_chapter } },\n            //  { \"totelem.uuid\": { $eq: request.to_topic } } \n          ]\n        },\n\n      )\n      .exec();\n\n\n  }\n  async moveqbchaptrers(request: QBankInterface): Promise<QBankSubject> {\n\n    this.qbankSubjectModel\n      .findOneAndUpdate(\n        { uuid: request.from_subject },\n\n        {\n          $pull: { \"chapters\": { \"uuid\": { $in: request.from_chapter } } },\n          $inc : { 'count' : -(request.count) }\n        },\n        //   { arrayFilters: [ { \"chelem.uuid\": { $eq: request.from_chapter } },\n        //  // { \"telem.uuid\": { $eq: request.from_topic } } \n        //   ]},\n\n      )\n      .exec();\n\n    return this.qbankSubjectModel\n      .findOneAndUpdate(\n        {\n          uuid: request.to_subject\n\n        },\n        // filter and push to the object\n        {\n          $push: { \"chapters\": { $each: request.chapters } },\n          $inc : { 'count' : request.count }\n\n        },\n        //   { arrayFilters: [ { \"tochelem.uuid\": { $eq: request.to_chapter } },\n        //                   //  { \"totelem.uuid\": { $eq: request.to_topic } } \n        // ] },\n\n      )\n      .exec();\n\n\n  }\n\n  async deleteQBChapters(request: QBankInterface): Promise<QBankSubject> {\n\n    return this.qbankSubjectModel\n      .findOneAndUpdate(\n        { uuid: request.to_subject },\n\n        {\n          $pull: { \"chapters\": { \"uuid\": { $in: request.from_chapter } } },\n          $inc : { 'count' : -(request.count) }\n        },\n        //   { arrayFilters: [ { \"chelem.uuid\": { $eq: request.from_chapter } },\n        //  // { \"telem.uuid\": { $eq: request.from_topic } } \n        //   ]},\n\n      )\n      .exec();\n\n  }\n\n  async deleteQBQuestions(request: QBankInterface): Promise<QBankSubject> {\n    return this.qbankSubjectModel\n      .findOneAndUpdate(\n        { uuid: request.from_subject },\n\n        {\n          $pull: { \"chapters.$[chelem].topics.$[telem].que\": { \"uuid\": { $in: request.from_que } } },\n        },\n        {\n          arrayFilters: [{ \"chelem.uuid\": { $eq: request.from_chapter } },\n          { \"telem.uuid\": { $eq: request.from_topic } }\n          ]\n        },\n      )\n      .exec();\n\n  }\n\n  async deleteMultipleTopics(request: QBankInterface) {\n\n    this.qbankSubjectModel\n      .findOneAndUpdate(\n        { uuid: request.from_subject },\n\n        {\n          $pull: { \"chapters.$[chelem].topics\": { \"uuid\": { $in: request.from_topic } } },\n          $inc : { 'count' : -(request.count) }\n        },\n        {\n          arrayFilters: [{ \"chelem.uuid\": { $eq: request.from_chapter } },\n            // { \"telem.uuid\": { $eq: request.from_topic } } \n          ]\n        },\n\n      )\n      .exec();\n  }\n\n\n}\n","import { QBankInterface } from '@application/api-interfaces';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateQBankDTO } from '../dto';\nimport { Course, QBank, QBankSubject, Question, Syllabus,SubmittedQBankTopic, User } from '../schema';\nimport * as mongoose from 'mongoose';\n\n@Injectable()\nexport class QbankService {\n\n  constructor(\n    @InjectModel('Course') private courseModel: Model<Course>,\n    @InjectModel('Syllabus') private syllabusModel: Model<Syllabus>,\n    @InjectModel('QBankSubject') private qbankSubjectModel: Model<QBankSubject>,\n    @InjectModel('Question') private questionModel: Model<Question>,\n    @InjectModel('SubmittedQBankTopic') private submittedQBankTopicModel: Model<SubmittedQBankTopic>,\n    @InjectModel('User') private userModel: Model<User>,\n    //   @InjectModel('QBank') private qbankmodel: Model<QBank>,\n  ) { }\n\n  // async findByUuid(subjectUuid: string, chapterUuid: string, uuid: string): Promise<any> {\n  //   let chapterobj = await this.syllabusModel.find({ uuid: chapterUuid }, { \"_id\": 1, \"uuid\": 1, \"title\": 1 }).exec();\n  //   //let res=await this.qbankSubjectModel.find({uuid: subjectUuid, \"chapters.topics.uuid\": uuid},{\"chapters.topics\":1}).exec();\n  //   //res.chapters[0]=chapterobj;\n  //   //return res;\n  //   return this.qbankSubjectModel\n  //     .aggregate([\n  //       { $match: { uuid: subjectUuid, \"chapters.topics.uuid\": uuid } },\n  //       { $unwind: \"$chapters\" },\n  //       {\n  //         $addFields: {\n  //           \"chapters.topics\": {\n  //             $filter: {\n  //               input: \"$chapters.topics\",\n  //               cond: { $eq: [\"$$this.uuid\", uuid] }\n  //             }\n  //           }\n\n  //         }\n  //       },\n  //     ])\n  //     .exec()\n  //     .then(res => {\n  //       let totalres = res.filter(it => it.chapters.topics.length > 0)[0].chapters.topics[0];\n  //       totalres['chapter'] = chapterobj[0];\n  //       return totalres;\n  //     })\n  //     .catch(err => err);\n\n  // }\n  async findByUuid(subjectUuid: string, chapterUuid: string, uuid: string): Promise<any> {\n    let chapterobj = await this.syllabusModel.find({ uuid: chapterUuid }, { \"_id\": 1, \"uuid\": 1, \"title\": 1 }).exec();\n    return await this.qbankSubjectModel\n      .aggregate([\n        { $match: { uuid: subjectUuid, \"chapters.topics.uuid\": uuid } },\n        { $unwind: \"$chapters\" },\n        {\n          $addFields: {\n            \"chapters.topics\": {\n              $filter: {\n                input: \"$chapters.topics\",\n                cond: { $eq: [\"$$this.uuid\", uuid] }\n              }\n            }\n          }\n        },\n      ])\n      .exec()\n      .then(async res => {\n        let totalres = res.filter(it => it.chapters.topics.length > 0)[0].chapters.topics[0];\n        var questionsDatas = [];\n        if(totalres.que){\n              for (var j = 0; j < totalres.que.length; j++) {\n              let name = '';\n              var  obj= await this.questionModel.findOne({\"uuid\": totalres.que[j].uuid},{ title: 1 }).exec();\n              if (obj) {\n                name = obj.title;\n              }\n              totalres.que[j]['title'] = name ;\n            };\n        }\n        totalres['chapter'] = chapterobj[0];\n        return totalres;\n      })\n      .catch(err => err);\n  }\n\n\n  async deleteByUuid(subjectUuid: string, topicUuid: string) {\n\n    return this.qbankSubjectModel\n      .findOneAndUpdate(\n        { uuid: subjectUuid },\n        // filter and push to the object\n        {\n          $pull: { \"chapters.$[].topics\": { uuid: topicUuid } },\n          $inc: { 'count': -1 }\n        },\n      )\n      .exec();\n  }\n\n  /*async editByUuid(request: QBankInterface): Promise<QBankSubject> {\n\n    return this.qbankSubjectModel.findOneAndUpdate(\n      { uuid: request.subject.uuid },\n      // filter and set object\n      { $set: { 'chapters.$[outer].topics.$[inner]': request } },\n      { arrayFilters: [\n        { \"outer.uuid\": request.chapter.uuid },\n        { 'inner.uuid': request.uuid }\n      ] },\n    ).exec();\n\n  }*/\n  /*async editByUuid(request: QBankInterface): Promise<QBankSubject> {\n    //console.log('request data',request);\n    \n\n    // return request.topics;\n    // return this.qbankSubjectModel.findOneAndUpdate(\n    //   { uuid: request.uuid },\n    //   // filter and set object\n    //   { $set: { 'chapters.$[outer].topics.$[inner]': request.topics } },\n    //   { arrayFilters: [\n    //     { \"outer.uuid\": request.chapter_uuid },\n    //     { 'inner.uuid': request.topic_uuid }\n    //   ] }, \n    // ).exec();\n    var topic_uuid = request.topic_uuid\n    // removing from existing chapter\n    this.qbankSubjectModel\n        .findOneAndUpdate(\n          { uuid: request.qbank_subject_uuid },\n          // filter and push to the object\n          {\n            $pull: { \"chapters.$[].topics\": { uuid:topic_uuid } },\n            $inc : { 'count' : -1 }\n          },\n        )\n        .exec();\n      // pushing into new chapter\n    return this.qbankSubjectModel\n      .findOneAndUpdate(\n        {\n          courses: request.courses,\n          syllabus: request.subject,\n         },\n        // filter and push to the object\n        {\n          $push: { \"chapters.$[elem].topics\": request.topics },\n          $inc : { 'count' : 1 }\n        },\n        { arrayFilters: [ { \"elem.uuid\": { $eq: request.chapter_uuid } } ] },\n      )\n      .exec();\n  }*/\n\n\n  async editByUuid(request: QBankInterface): Promise<QBankSubject> {\n    return this.qbankSubjectModel\n      .findOneAndUpdate(\n\n        {\n          uuid: request.qbank_subject_uuid\n        },\n\n        {\n          $set: {\n            \"chapters.$[elem].topics.$[elem1]\": request.topics,\n          }\n          // $inc: { 'count': 1 }\n        },\n\n        {\n          arrayFilters: [{ \"elem.uuid\": { $eq: request.chapter_uuid } },\n          { \"elem1.uuid\": { $eq: request.topics.uuid } }\n          ]\n        },\n\n      ).exec();\n\n  }\n\n  async resetUserTest(userId, request) {\n\n    let courseId = request.courseId;\n    let subjectId = request.subjectId;\n    let qbankTopicUuids = request.qbankTopicUuid;\n\n    this.submittedQBankTopicModel.remove(\n      {\n        \"userId\": mongoose.Types.ObjectId(userId),\n        \"courseId\": mongoose.Types.ObjectId(courseId),\n        //  \"subjectId\": mongoose.Types.ObjectId(subjectId),\n        \"qbankTopicUuid\": qbankTopicUuids\n      },\n    ).exec();\n\n    var data = await this.removeQbanksubmissions(userId, qbankTopicUuids).then(async () => {\n\n      return await this.removeQbanksTestSubmissions(userId, qbankTopicUuids).then((res) => {\n        return res;\n      });\n\n    });\n    // return true;\n    return { \"status\": true, \"code\": 2000, 'message': 'Test Reset Done ', 'data': data }\n  }\n\n   async removeQbanksubmissions(userId, qbankTopicUuid) {\n\n    return await this.userModel\n      .findOneAndUpdate(\n        { _id: userId },\n        {\n          $pull: {\n            \"submissions.qbanks\": { \"qbankTopicUuid\": qbankTopicUuid },\n          }\n        },\n        { new: true, useFindAndModify: false }\n      ).exec();\n\n  }\n\n  async removeQbanksTestSubmissions(userId, qbankTopicUuid) {\n\n    var submission = await this.userModel.findOneAndUpdate(\n      { _id: userId },\n      {\n        $pull: {\n          qbanksTestSubmissions: {\n            qbankTopicUuid: qbankTopicUuid,\n          }\n        }\n      },\n      { new: true, useFindAndModify: false }\n    );\n    return submission.qbanksTestSubmissions\n\n  }\n\n}\n","import { QuestionInterface, QbankQuestionInterface, TestSeriesQuestionInterface } from '@application/api-interfaces';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateQuestionDto } from '../dto';\nimport { Question, QBankSubject, TSCategories, Syllabus, User, Pearls } from '../schema';\n//import { Question,QuestionDocument } from '../schema/questions.schema';\n\n@Injectable()\nexport class QuestionsService {\n  constructor(\n    @InjectModel('Question') private questionModel: Model<Question>,\n    @InjectModel('QBankSubject') private qbankSubjectModel: Model<QBankSubject>,\n    @InjectModel('TSCategories') private TSCategoriesModel: Model<TSCategories>,\n    @InjectModel('Syllabus') private SyllabusModel: Model<Syllabus>,\n    @InjectModel('User') private UserModel: Model<User>,\n    @InjectModel('Pearls') private pearlsModel: Model<Pearls>\n  ) { }\n\n  // find(options) {\n  //   return this.questionModel.find(options);\n  // }\n  // count(options) {\n  //   return this.questionModel.countDocuments(options)\n  // }\n  async createMultiQuestions(request: any) {\n    //  console.log('request',request);\n    let array = []\n    let sId = request[0].syllabus[0]\n    var data = await this.questionModel.find({ syllabus: sId + '' }).exec();\n    let syllabusData = await this.SyllabusModel.findById({ _id: sId });\n    let code = syllabusData.shortcut;\n    let uniqueCode: string;\n    request.map((res, i) => {\n      let num = data.length + i + 1\n      if (num > 0 && num <= 9)\n        uniqueCode = code + \"0000\" + num;\n      else if (num > 9 && num <= 99)\n        uniqueCode = code + \"000\" + num;\n      else if (num > 99 && num <= 999)\n        uniqueCode = code + \"00\" + num;\n      else if (num > 999 && num <= 9999)\n        uniqueCode = code + \"0\" + num;\n      else\n        uniqueCode = code + num;\n      res.questionId = uniqueCode\n      array.push(res)\n    })\n    return this.questionModel.insertMany(array)\n  }\n\n  async create(createQuestionDto: any) {\n    let array = [];\n    let sId = createQuestionDto[0].syllabus[0]\n    var data = await this.questionModel.find({ syllabus: sId + '' }).exec();\n    let syllabusData = await this.SyllabusModel.findById({ _id: sId });\n    let code = syllabusData.shortcut;\n    let uniqueCode: string;\n    createQuestionDto.map((res, i) => {\n      let num = data.length + i + 1\n      if (num > 0 && num <= 9)\n        uniqueCode = code + \"0000\" + num;\n      else if (num > 9 && num <= 99)\n        uniqueCode = code + \"000\" + num;\n      else if (num > 99 && num <= 999)\n        uniqueCode = code + \"00\" + num;\n      else if (num > 999 && num <= 9999)\n        uniqueCode = code + \"0\" + num;\n      else\n        uniqueCode = code + num;\n      console.log('num', num, i + 1);\n\n      res.questionId = uniqueCode\n      array.push(res)\n    })\n    let QData = await this.questionModel.insertMany(array);\n    let PData\n    PData = QData\n    console.log('PData', PData);\n    //  console.log('QDataresponse',PData.response);\n\n    PData.map(resp => {\n      resp.perals.map(per => {\n        this.assignPeral(per, resp._id)\n      })\n    })\n    return QData\n\n    // let createdQuestion = new this.questionModel(createQuestionDto);\n    // createdQuestion.questionId = uniqueCode\n    // const result = createdQuestion.save();\n    //  return result;\n\n  }\n\n  async findAll(): Promise<Question[]> {\n    return this.questionModel.find()\n      .populate({\n        path: 'syllabus',\n        match: {\n          \"type\": \"SUBJECT\",\n          // \"flags.questionBank\": true ,\n          'flags.active': true\n        },\n        select: {\n          \"_id\": 1,\n          \"uuid\": 1,\n          \"title\": 1,\n          \"type\": 1,\n\n        }\n      })\n      .populate({\n        path: 'perals',\n        model: \"Pearls\",\n        select: {\n          \"title\": 1,\n          \"_id\": 1,\n          \"uuid\": 1\n        }\n      })\n      .populate({\n        path: \"tags\",\n        model: \"Tags\",\n        select: {\n          \"title\": 1,\n          \"_id\": 1,\n          \"uuid\": 1\n        }\n      })\n      .exec();\n    //.populate('syllabus').exec();\n  }\n\n  async updateShortTitle(questions) {\n    // let queData =await this.questionModel.find({mathType:'no'},{uuid:1,title:1}).exec();\n    // console.log('queData',queData);\n    // queData.map(res=>{\n    //   this.questionModel.findOneAndUpdate({ uuid: res.uuid }, {shortTitle:res.title.replace(/<(.|\\n)*?>/g, '').trim()}).exec();\n    // })\n    let flags = {\n      pro: false,\n      editable: true,\n      active: true,\n      qBank: true,\n      testSeries: true,\n      paid:true\n    }\n    for (var i = 0; i < questions.length; i++) {\n      var question = questions[i];\n      var checkQuestion = await this.questionModel.findOne({ uuid: question['uuid'],mathType:'no' }).exec();\n      if (checkQuestion) {\n        checkQuestion.options.map((res,i)=>{\n          checkQuestion.options[i].name =  res.name ?res.name:'';\n          checkQuestion.options[i].imgUrl = res.imgUrl ?res.imgUrl:'';\n          return checkQuestion.options[i].value = i+1\n        })\n        this.questionModel.findOneAndUpdate({ uuid: checkQuestion.uuid },{\n          shortTitle:checkQuestion.title.replace(/<(.|\\n)*?>/g, '').trim(),\n          options:checkQuestion.options,\n          flags:flags\n        }).exec();\n      }\n    }\n\n  }\n\n  async findAllBySyllabusId(syllabusId: string): Promise<Question[]> {\n    return this.questionModel.find({ syllabus: syllabusId }).\n      populate({\n        path: 'syllabus',\n        match: {\n          \"type\": \"SUBJECT\",\n          \"flags.questionBank\": true,\n          'flags.active': true\n        },\n        select: {\n          \"title\": 1,\n        }\n      })\n      .populate({\n        path: 'perals',\n        model: \"Pearls\",\n        select: {\n          \"title\": 1,\n          \"_id\": 1,\n          \"uuid\": 1\n        }\n      })\n      .populate({\n        path: 'tags',\n        model: \"Tags\",\n        select: {\n          \"uuid\": 1,\n          \"title\": 1,\n          \"_id\": 1,\n        }\n      })\n      .exec();\n  }\n\n  async findByUuid(uuid: string): Promise<Question> {\n    return this.questionModel.findOne({ uuid })\n      .populate({\n        path: 'syllabus',\n        match: {\n          \"type\": \"SUBJECT\",\n          // \"flags.questionBank\": true ,\n          'flags.active': true\n        },\n        select: {\n          \"title\": 1,\n          \"_id\": 1,\n          \"uuid\": 1\n        }\n      })\n      .populate({\n        path: 'perals',\n        model: \"Pearls\",\n        select: {\n          \"title\": 1,\n          \"_id\": 1,\n          \"uuid\": 1\n        }\n      })\n      .populate({\n        path: \"tags\",\n        model: \"Tags\",\n        select: {\n          \"title\": 1,\n          \"_id\": 1,\n          \"uuid\": 1\n        }\n      })\n      .exec();\n    // .populate('syllabus').exec();\n  }\n\n  async assignPeral(peralId: string, queId: string) {\n    console.log('peralIdperalId', peralId, queId);\n    return this.pearlsModel.findOneAndUpdate(\n      { _id: peralId },\n      { $push: { \"queIds\": queId } }\n    ).exec();\n  }\n  async deletePeral(peralId: string, queId: string) {\n    console.log('deletePeralIdperalId', peralId, queId);\n    return this.pearlsModel.findOneAndUpdate(\n      { _id: peralId },\n      { $pull: { \"queIds\": queId } }\n    ).exec();\n  }\n\n  async deleteByUuid(uuid: string) {\n    return this.questionModel.findOneAndDelete({ uuid }).exec();\n  }\n\n  async editByUuid(request: any) {\n    console.log('request', request);\n    request?.insertPeralArray.map(per => {\n      this.assignPeral(per, request._id)\n    })\n    request?.deletePeralArray.map(per => {\n      this.deletePeral(per, request._id)\n    })\n    return this.questionModel.findOneAndUpdate({ uuid: request.uuid }, request).exec();\n  }\n\n  async editQuestionByJsonFile(request: any) {\n    return this.questionModel.findOneAndUpdate({ uuid: request.uuid }, request).exec();\n  }\n\n  async qbankAddQuestions(request: QbankQuestionInterface): Promise<any> {\n    console.log('requestData', request);\n    let array = []\n    let sId = request.que[0].syllabus[0]\n    var data = await this.questionModel.find({ syllabus: sId + '' }).exec();\n    let syllabusData = await this.SyllabusModel.findById({ _id: sId });\n    let code = syllabusData.shortcut;\n    let uniqueCode: string;\n    request.que.map((res, i) => {\n      let num = data.length + i + 1\n      if (num > 0 && num <= 9)\n        uniqueCode = code + \"0000\" + num;\n      else if (num > 9 && num <= 99)\n        uniqueCode = code + \"000\" + num;\n      else if (num > 99 && num <= 999)\n        uniqueCode = code + \"00\" + num;\n      else if (num > 999 && num <= 9999)\n        uniqueCode = code + \"0\" + num;\n      else\n        uniqueCode = code + num;\n      res.questionId = uniqueCode\n      array.push(res)\n    })\n    this.questionModel.insertMany(array)\n\n\n    // this.questionModel.insertMany(request.que);\n    return this.qbankSubjectModel\n      .findOneAndUpdate(\n        {\n          uuid: request.qbank_subject\n\n        },\n        // filter and push to the object\n        {\n          $push: { \"chapters.$[chelem].topics.$[telem].que\": { $each: request.qbank_que } },\n\n        },\n        {\n          arrayFilters: [{ \"chelem.uuid\": { $eq: request.qbank_chapter } },\n          { \"telem.uuid\": { $eq: request.qbank_topic } }\n          ]\n        },\n\n      )\n      .exec();\n    // return this.questionModel.findOneAndUpdate({ uuid: request.uuid }, request).exec();\n  }\n\n\n  async qbankBulkAddQuestions(request: any): Promise<any> {\n    let questionsList = [];\n    let array = [];\n    let questions = request.que;\n    for (var i = 0; i < questions.length; i++) {\n      var question = questions[i];\n      // var string = questions[i]['title'].replace(/<\\/?[^>]+(>|$)/g, \"\");\n      var checkQuestion = await this.questionModel.findOne({ title: question['title'] }).exec();\n      if (checkQuestion) {\n        questionsList.push({ \"uuid\": checkQuestion.uuid, 'order': question['order'] });\n        var notExist = false;\n        checkQuestion.syllabus.forEach(data => {\n          if (data.toString() != question.syllabus[0].toString()) {\n            notExist = true;\n          } else {\n            notExist = false;\n          }\n        })\n        if (notExist) {\n          checkQuestion.syllabus.push(question.syllabus[0])\n          checkQuestion.modifiedOn = request.date;\n          this.questionModel.findOneAndUpdate({ uuid: checkQuestion.uuid }, checkQuestion).exec();\n        }\n      }\n      else {\n        questionsList.push({ \"uuid\":  question['uuid'], 'order': question['order'] });\n\n        let sId = question.syllabus[0]\n        var data = await this.questionModel.countDocuments({ syllabus: sId + '' }).exec();\n        let syllabusData = await this.SyllabusModel.findById({ _id: sId },{shortcut:1});\n        let code = syllabusData.shortcut;\n        let uniqueCode: string;\n        let num = data + i + 1\n        if (num > 0 && num <= 9)\n          uniqueCode = code + \"0000\" + num;\n        else if (num > 9 && num <= 99)\n          uniqueCode = code + \"000\" + num;\n        else if (num > 99 && num <= 999)\n          uniqueCode = code + \"00\" + num;\n        else if (num > 999 && num <= 9999)\n          uniqueCode = code + \"0\" + num;\n        else\n          uniqueCode = code + num;\n        question.questionId = uniqueCode\n        array.push(question)\n      }\n    };\n     this.questionModel.insertMany(array)\n     this.qbankSubjectModel\n      .findOneAndUpdate(\n        {\n          uuid: request.qbank_subject\n        },\n        {\n          $push: { \"chapters.$[chelem].topics.$[telem].que\": { $each: questionsList } },\n        },\n        {\n          arrayFilters: [{ \"chelem.uuid\": { $eq: request.qbank_chapter } },\n          { \"telem.uuid\": { $eq: request.qbank_topic } }\n          ]\n        },\n      )\n      .exec();\n      return []\n\n  }\n\n  async testBulkAddQuestions(request: any): Promise<any> {\n    let questionsList = [];\n    let array = [];\n    let questions = request.que;\n    for (var i = 0; i < questions.length; i++) {\n      var question = questions[i];\n      // var string = questions[i]['title'].replace(/<\\/?[^>]+(>|$)/g, \"\");\n      var checkQuestion = await this.questionModel.findOne({ title: question['title'] }).exec();\n\n      if (checkQuestion) {\n        questionsList.push({ \"uuid\": checkQuestion.uuid,'order': question['order'],'positive': 1, 'negative': 0 });\n        var notExist = false;\n        checkQuestion.syllabus.forEach(data => {\n          if (data.toString() != question.syllabus[0].toString()) {\n            notExist = true;\n          } else {\n            notExist = false;\n          }\n        })\n        if (notExist) {\n          checkQuestion.syllabus.push(question.syllabus[0])\n          checkQuestion.modifiedOn = request.date;\n          this.questionModel.findOneAndUpdate({ uuid: checkQuestion.uuid }, checkQuestion).exec();\n        }\n      }\n      else {\n        questionsList.push({ \"uuid\":  question['uuid'],'order': question['order'],'positive': 1, 'negative': 0 });\n        let sId = question.syllabus[0]\n        var data = await this.questionModel.countDocuments({ syllabus: sId + '' }).exec();\n        let syllabusData = await this.SyllabusModel.findById({ _id: sId },{shortcut:1});\n        let code = syllabusData.shortcut;\n        let uniqueCode: string;\n        let num = data + i + 1\n        if (num > 0 && num <= 9)\n          uniqueCode = code + \"0000\" + num;\n        else if (num > 9 && num <= 99)\n          uniqueCode = code + \"000\" + num;\n        else if (num > 99 && num <= 999)\n          uniqueCode = code + \"00\" + num;\n        else if (num > 999 && num <= 9999)\n          uniqueCode = code + \"0\" + num;\n        else\n          uniqueCode = code + num;\n        question.questionId = uniqueCode\n        array.push(question)\n      }\n    };\n    this.questionModel.insertMany(array)\n    // await this.questionModel.insertMany(array)\n     this.TSCategoriesModel\n    .findOneAndUpdate(\n      {\n        uuid: request.ts_uuid\n      },\n      // filter and push to the object\n      {\n        $push: { \"categories.tests.$[telem].que\": { $each: questionsList } },\n      },\n      {\n        arrayFilters: [\n          { \"telem.uuid\": { $eq: request.test } }\n        ]\n      },\n    )\n    .exec();\n    return []\n\n  }\n\n  async testSeriesAddQuestions(request: TestSeriesQuestionInterface): Promise<any> {\n    if (request.que.length) {\n      let array = []\n      let sId = request.que[0].syllabus[0]\n      var data = await this.questionModel.find({ syllabus: sId + '' }).exec();\n      let syllabusData = await this.SyllabusModel.findById({ _id: sId });\n      let code = syllabusData.shortcut;\n      let uniqueCode: string;\n      request.que.map((res, i) => {\n        let num = data.length + i + 1\n        if (num > 0 && num <= 9)\n          uniqueCode = code + \"0000\" + num;\n        else if (num > 9 && num <= 99)\n          uniqueCode = code + \"000\" + num;\n        else if (num > 99 && num <= 999)\n          uniqueCode = code + \"00\" + num;\n        else if (num > 999 && num <= 9999)\n          uniqueCode = code + \"0\" + num;\n        else\n          uniqueCode = code + num;\n        res.questionId = uniqueCode\n        array.push(res)\n      })\n      this.questionModel.insertMany(array)\n    }\n    // this.questionModel.insertMany(request.que);\n    return this.TSCategoriesModel\n      .findOneAndUpdate(\n        {\n          uuid: request.ts_uuid\n        },\n        // filter and push to the object\n        {\n          $push: { \"categories.tests.$[telem].que\": { $each: request.test_que } },\n        },\n        {\n          arrayFilters: [\n            { \"telem.uuid\": { $eq: request.test } }\n          ]\n        },\n      )\n      .exec();\n    // return this.questionModel.findOneAndUpdate({ uuid: request.uuid }, request).exec();\n  }\n\n  async checkQuestionBeforeAdd(request: any) {\n    var que_obj = await this.questionModel.findOne({ \"title\": request.title }, { title: 1 }).exec();\n    //console.log(que_obj);\n    //return que_obj;\n    if (que_obj)\n      return true;\n    else\n      return false;\n  }\n\n  async questionSearch(request: any) {\n    return this.questionModel.find({\n      \"$or\": [{\n        \"title\": { '$regex': request.search, '$options': 'i' }\n      },\n        {\n          \"shortTitle\": {'$regex': request.search, '$options': 'i'}\n      }, {\n          \"questionId\": {'$regex': request.search, '$options': 'i'}\n      },{\n        \"previousAppearances\": {'$regex': request.search, '$options': 'i'}\n    }]\n  });\n    // if( request.shortTitle){\n    //   return this.questionModel.find({ \"shortTitle\": request.shortTitle }).exec(); \n    // }\n    // else  if( request.questionId){\n    //   return this.questionModel.find({ \"questionId\": request.questionId }).exec(); \n    // }\n  }\n\n}\n","import { BannerInterface } from '@application/api-interfaces';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateSampleDTO } from '../dto';\nimport { Sample } from '../schema/sample.schema';\n\n@Injectable()\nexport class SampleService {\n  constructor(@InjectModel('Sample') private sampleModel: Model<Sample>) {}\n\n  async create(CreateSampleDTO: CreateSampleDTO): Promise<Sample> {\n    const createdBanner = new this.sampleModel(CreateSampleDTO);\n    const result = createdBanner.save();\n    console.log('added banner', result);\n    return result;\n  }\n\n  async findAll(): Promise<Sample[]> {\n    return this.sampleModel.find().exec();\n  }\n\n  async findByUuid(uuid: string): Promise<Sample> {\n    return this.sampleModel.findOne({ uuid }).exec();\n  }\n\n  async findByid(id: string,uuid:string): Promise<Sample> {\n    return this.sampleModel.findOne({ id ,uuid }).exec();\n  }\n\n  async searchByTitle(title: string): Promise<Sample> {\n    // return this.sampleModel.find({\"id\":{ $regex: '.*' + title + '.*' }},{ \"title\": { $regex: '.*' + title + '.*' }} ).limit(5);\n\n    // return this.sampleModel.find({ $or: [ { title: title},{id:title} ] });\n    // return this.sampleModel.find({ $or: [\n    //   { title: { $regex: '.*' + title + '.*' }},\n    //   { id:{ $regex: '.*' + title + '.*' }}\n    // ] });\n    return;\n  }\n}\n","import { SubscriptionInterface } from '@application/api-interfaces';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateSubscriptionDto } from '../dto';\nimport { User } from '../schema/user.schema';\nimport { Subscription } from '../schema/subscription.schema';\nimport { Course } from '../schema';\n//import { Course, QBank, QBankSubject, Syllabus } from '../schema';\n\n@Injectable()\nexport class SubscriptionService {\n  constructor(\n    //  @InjectModel('Course') private courseModel: Model<Course>,\n    @InjectModel('Subscription') private subscriptionModel: Model<Subscription>,\n    @InjectModel('User') private userModel: Model<User>,\n    @InjectModel('Course') private courseModel: Model<Course>,\n\n  ) { }\n\n  // async findAll(): Promise<Subscription[]> {\n  //   return this.subscriptionModel\n  //     .aggregate([\n  //       {\n  //         $lookup:\n  //         {\n  //           from: \"courses\",\n  //           localField: \"courses\",\n  //           foreignField: \"_id\",\n  //           as: \"course\",\n  //         }\n  //       },\n\n  //       {\n  //         $unwind: { path: \"$course\", preserveNullAndEmptyArrays: true }\n  //       },\n  //       {\n  //         $lookup: {\n  //           \"from\": \"qbanksubjects\",\n  //           \"let\": { \"qbanks\": \"$qbanks\" },\n  //           \"pipeline\": [\n  //             { \"$match\": { \"$expr\": { \"$in\": [\"$_id\", \"$$qbanks\"] } } }\n  //           ],\n  //           \"as\": \"qbank\"\n  //         }\n  //       },\n  //       {\n  //         $unwind: { path: \"$qbank\", preserveNullAndEmptyArrays: true }\n  //       },\n\n  //       {\n  //         $lookup: {\n  //           \"from\": \"videosubjects\",\n  //           \"let\": { \"videos\": \"$videos\" },\n  //           \"pipeline\": [\n  //             { \"$match\": { \"$expr\": { \"$in\": [\"$_id\", \"$$videos\"] } } }\n  //           ],\n  //           \"as\": \"videos\"\n  //         }\n  //       },\n  //       {\n  //         $unwind: { path: \"$videos\", preserveNullAndEmptyArrays: true }\n  //       },\n\n  //       {\n  //         $lookup: {\n  //           \"from\": \"tscategories\",\n  //           \"let\": { \"tests\": \"$tests\" },\n  //           \"pipeline\": [\n  //             { \"$match\": { \"$expr\": { \"$in\": [\"$_id\", \"$$tests\"] } } }\n  //           ],\n  //           \"as\": \"tscategories\"\n  //         }\n  //       },\n  //       {\n  //         $unwind: { path: \"$tscategories\", preserveNullAndEmptyArrays: true }\n  //       },\n  //       {\n  //         $lookup:\n  //         {\n  //           from: \"syllabuses\",\n  //           localField: \"qbank.syllabus\",\n  //           foreignField: \"_id\",\n  //           as: \"syllabuss\",\n  //         }\n  //       },\n  //       {\n  //         $unwind: { path: \"$syllabuss\", preserveNullAndEmptyArrays: true }\n  //       },\n\n  //       {\n  //         $lookup:\n  //         {\n  //           from: \"syllabuses\",\n  //           localField: \"videos.syllabus\",\n  //           foreignField: \"_id\",\n  //           as: \"syllabussss\",\n  //         }\n  //       },\n  //       {\n  //         $unwind: { path: \"$syllabussss\", preserveNullAndEmptyArrays: true }\n  //       },\n  //       {\n  //         $unwind: { path: \"$categories\", preserveNullAndEmptyArrays: true }\n  //       },\n  //       {\n  //         $group: {\n\n  //           _id: { _id: \"$_id\", title: \"$title\", order: \"$order\", uuid: \"$uuid\", flags: \"$flags\",\n  //           originalPrice:\"$originalPrice\",\n  //            createdOn: \"$createdOn\", validFrom: \"$validFrom\",validTo: \"$validTo\",actual: \"$actual\",period:\"$period\"\n  //            },\n  //           courses: {\n  //             $first: {\n  //               //  \"uuid\": \"$course.uuid\",\n  //               \"title\": \"$course.title\",\n  //               \"_id\": \"$course._id\"\n  //             }\n  //           },\n  //           qbank: {\n  //             $addToSet: {\n  //               \"_id\": \"$qbank._id\",\n  //               //\"subject_uuid\": \"$syllabuss.uuid\",\n  //               // \"subject_id\": \"$syllabuss._id\",\n  //               \"title\": \"$syllabuss.title\",\n  //             }\n  //           },\n  //           videos: {\n  //             $addToSet: {\n  //               \"_id\": \"$videos._id\",\n  //               // \"subject_uuid\": \"$syllabussss.uuid\",\n  //               //\"subject_id\": \"$syllabussss._id\",\n  //               \"title\": \"$syllabussss.title\",\n  //             }\n  //           },\n  //           tests: {\n  //             $addToSet: {\n  //               \"_id\": \"$tscategories._id\",\n  //               // \"subject_uuid\": \"$tscategories.categories.uuid\",\n  //               //\"subject_id\": \"$tscategories.categories._id\",\n  //               \"title\": \"$tscategories.categories.title\",\n  //             }\n  //           },\n  //         }\n  //       },\n  //       {\n  //         $project: {\n  //           \"_id\": '$_id._id',\n  //           \"title\": '$_id.title',\n  //           \"order\": '$_id.order',\n  //           \"uuid\": '$_id.uuid',\n  //           \"createdOn\": '$_id.createdOn',\n  //           \"validFrom\": \"$_id.validFrom\",\n  //           \"validTo\": \"$_id.validTo\",\n  //            \"flags\": \"$_id.flags\",\n  //           \"actual\":\"$_id.actual\",\n  //           \"originalPrice\":\"$_id.originalPrice\",\n  //           \"period\":\"$_id.period\",\n  //           \"courses\": '$courses',\n  //           \"qbanks\": \"$qbank\",\n  //           \"videos\": \"$videos\",\n  //           \"tests\": \"$tests\",\n  //         }\n  //       },\n  //       {$sort: {'order': 1}},\n  //     ]).exec()\n\n  // }\n\n  async findAll(employee): Promise<Subscription[]> {\n    const courseListIds = [];\n    const empCourses = await this.courseModel.find({organizations:{$in:employee.organizations}},{_id:true})\n    empCourses.forEach(element => {\n      courseListIds.push(element._id)\n    });\n    \n    let subscriptions = await this.subscriptionModel.find({courses:{$in:courseListIds}}, {_id: 1, uuid: 1, title: 1, courses: 1, createdOn: 1, validFrom: 1, validTo: 1, flags: 1, order: 1, actual: 1, originalPrice: 1, period: 1,periodType:1 })\n      .populate({\n        path: 'courses',\n        select: {\n          \"uuid\": 1,\n          \"title\": 1,\n          \"_id\": 1,\n        }\n      }).sort({ order: 'ASC' }).exec()\n\n      // subscriptions.map(async res=>{\n      //  await this.subscriptionModel.findOneAndUpdate({ uuid: res.uuid },{periodType:'MONTHS'}).exec()\n      // })\n\n      return subscriptions\n\n  }\n  // async findByCourse(courseId: string): Promise<any> {\n\n  //   //const matchedCourse = await this.courseModel.find({ _id: courseId }).exec();\n\n  //   return this.subscriptionModel\n  //     .find({ courses: courseId }, { id: 1, uuid: 1, title: 1 })\n  //     .exec();\n\n  // }\n\n  async editSubscription(uuid: string): Promise<Subscription> {\n    return this.subscriptionModel.findOne({ uuid: uuid }).exec()\n  }\n\n  async findByUuid(uuid: string): Promise<Subscription> {\n    return this.subscriptionModel\n      .aggregate([\n        {\n          $match: { \"uuid\": uuid }\n        },\n        // {\n        //   $lookup:\n        //   {\n        //     from: \"coupons\",\n        //     localField: \"coupons\",\n        //     foreignField: \"_id\",\n        //     as: \"coupon\",\n        //   }\n        // },\n\n        // {\n        //   $unwind: { path: \"$coupon\", preserveNullAndEmptyArrays: true }\n        // },\n        {\n          $lookup:\n          {\n            from: \"courses\",\n            localField: \"courses\",\n            foreignField: \"_id\",\n            as: \"course\",\n          }\n        },\n\n        {\n          $unwind: { path: \"$course\", preserveNullAndEmptyArrays: true }\n        },\n\n        {\n          $lookup: {\n            \"from\": \"qbanksubjects\",\n            \"let\": { \"qbanks\": \"$qbanks\" },\n            \"pipeline\": [\n              { \"$match\": { \"$expr\": { \"$in\": [\"$_id\", \"$$qbanks\"] } } }\n            ],\n            \"as\": \"qbank\"\n          }\n        },\n        {\n          $unwind: { path: \"$qbank\", preserveNullAndEmptyArrays: true }\n        },\n\n        {\n          $lookup: {\n            \"from\": \"videosubjects\",\n            \"let\": { \"videos\": \"$videos\" },\n            \"pipeline\": [\n              { \"$match\": { \"$expr\": { \"$in\": [\"$_id\", \"$$videos\"] } } }\n            ],\n            \"as\": \"videos\"\n          }\n        },\n        {\n          $unwind: { path: \"$videos\", preserveNullAndEmptyArrays: true }\n        },\n\n        {\n          $lookup: {\n            \"from\": \"tscategories\",\n            \"let\": { \"tests\": \"$tests\" },\n            \"pipeline\": [\n              { \"$match\": { \"$expr\": { \"$in\": [\"$_id\", \"$$tests\"] } } }\n            ],\n            \"as\": \"tscategories\"\n          }\n        },\n        {\n          $unwind: { path: \"$tscategories\", preserveNullAndEmptyArrays: true }\n        },\n        {\n          $lookup:\n          {\n            from: \"syllabuses\",\n            localField: \"qbank.syllabus\",\n            foreignField: \"_id\",\n            as: \"syllabuss\",\n          }\n        },\n        {\n          $unwind: { path: \"$syllabuss\", preserveNullAndEmptyArrays: true }\n        },\n\n        {\n          $lookup:\n          {\n            from: \"syllabuses\",\n            localField: \"videos.syllabus\",\n            foreignField: \"_id\",\n            as: \"syllabussss\",\n          }\n        },\n        {\n          $unwind: { path: \"$syllabussss\", preserveNullAndEmptyArrays: true }\n        },\n        {\n          $unwind: { path: \"$categories\", preserveNullAndEmptyArrays: true }\n        },\n        {\n          $group: {\n\n            _id: {\n              _id: \"$_id\",\n              title: \"$title\",\n              order: \"$order\",\n              uuid: \"$uuid\",\n              createdOn: \"$createdOn\",\n              description: \"$description\",\n              period: \"$period\",\n              periodType:\"$periodType\",\n              actual: \"$actual\",\n              originalPrice: \"$originalPrice\",\n              count: \"$count\",\n              // discounted: \"$discounted\",\n              validFrom: \"$validFrom\",\n              validTo: \"$validTo\",\n              flags: \"$flags\",\n            },\n            // coupons: {\n            //   $first: {\n            //     \"uuid\": \"$coupon.uuid\",\n            //     // \"code\": \"$coupon.code\",\n            //     \"_id\": \"$coupon._id\"\n            //   }\n            // },\n            courses: {\n              $first: {\n                \"uuid\": \"$course.uuid\",\n                // \"title\": \"$course.title\",\n                \"_id\": \"$course._id\"\n              }\n            },\n            qbank: {\n              $addToSet: {\n                \"_id\": \"$qbank._id\",\n                \"uuid\": \"$qbank.uuid\",\n                //\"subject_uuid\": \"$syllabuss.uuid\",\n                // \"subject_id\": \"$syllabuss._id\",\n                \"title\": \"$syllabuss.title\",\n              }\n            },\n            videos: {\n              $addToSet: {\n                \"_id\": \"$videos._id\",\n                \"uuid\": \"$videos.uuid\",\n                // \"subject_uuid\": \"$syllabussss.uuid\",\n                //\"subject_id\": \"$syllabussss._id\",\n                \"title\": \"$syllabussss.title\",\n              }\n            },\n            tests: {\n              $addToSet: {\n                \"_id\": \"$tscategories._id\",\n                \"uuid\": \"$tscategories.uuid\",\n                // \"subject_uuid\": \"$tscategories.categories.uuid\",\n                //\"subject_id\": \"$tscategories.categories._id\",\n                \"title\": \"$tscategories.categories.title\",\n              }\n            },\n          }\n        },\n        {\n          $project: {\n            \"_id\": '$_id._id',\n            \"title\": '$_id.title',\n            \"order\": '$_id.order',\n            \"uuid\": '$_id.uuid',\n            \"createdOn\": '$_id.createdOn',\n            \"description\": \"$_id.description\",\n            \"period\": \"$_id.period\",\n            \"periodType\":\"$_id.periodType\",\n            \"actual\": \"$_id.actual\",\n            \"originalPrice\": \"$_id.originalPrice\",\n            \"count\": \"$_id.count\",\n            //\"discounted\": \"$_id.discounted\",\n            // \"coupons\": \"$coupons\",\n            \"validFrom\": \"$_id.validFrom\",\n            \"validTo\": \"$_id.validTo\",\n            \"flags\": \"$_id.flags\",\n            \"courses\": '$courses',\n            \"qbanks\": \"$qbank\",\n            \"videos\": \"$videos\",\n            \"tests\": \"$tests\",\n          }\n        }\n      ]).exec()\n  }\n\n\n\n  async deleteByUuid(uuid: string) {\n    // this.findByUuid(uuid).then(result => {\n    //   result.children.forEach(child => {\n    //     if(child){\n    //       this.subscriptionModel.findByIdAndUpdate(\n    //         {_id: child},\n    //         { $pull: { parents: result._id } }\n    //       ).exec();\n    //     }\n    //   });\n    //   result.parents.forEach(parent => {\n    //     if(parent){\n    //       this.subscriptionModel.findByIdAndUpdate(\n    //         {_id: parent},\n    //         { $pull: { children: result._id } }\n    //       ).exec();\n    //     }\n    //   });\n\n    // });\n\n    return this.subscriptionModel.findOneAndDelete({ uuid }).exec();\n  }\n\n  async create(createSubscriptionDto: CreateSubscriptionDto): Promise<Subscription> {\n    const createdSubscription = new this.subscriptionModel(createSubscriptionDto);\n    console.log(createdSubscription.get('type'));\n    const result = createdSubscription.save();\n    // result.then(syllabus => {\n    //   this.updateAssignments(syllabus);\n    // })\n\n    return result;\n  }\n\n  async editSubscriptionByUuid(\n    uuid: string,\n    request: any\n  ) {\n    let subscription = await this.subscriptionModel.findOneAndUpdate({ uuid }, request).exec();\n\n    var subscriptionId = subscription._id;\n    // var subscriptionData = await this.subscriptionModel.findOne({ _id: subscriptionId });\n    var users = await this.userModel.find({ \"subscriptions.subscription_id\": subscriptionId });\n    // var UserData = await this.userModel.findOne({_id:\"61ab1ab7bf26b8470417ae07\"});\n\n    var expiry = null;\n    users.map(async UserData => {\n      UserData.subscriptions.map(sub => {\n        if (sub.subscription_id.toHexString() == subscription._id.toHexString()) {\n          expiry = sub.expiry_date\n          request.newQbanks.map(res => {\n            UserData.qbanks = UserData?.qbanks.filter(e => {\n              return e.subject_id != res.toString()\n            })\n            UserData.qbanks.push({ 'subject_id': res, 'expiry_date': expiry });\n          })\n\n          request.newVideos.map(res => {\n            UserData.videos = UserData?.videos.filter(e => {\n              return e.subject_id != res.toString()\n            })\n            UserData.videos.push({ 'subject_id': res, 'expiry_date': expiry });\n          })\n\n          request.newTests.map(res => {\n            UserData.tests = UserData?.tests.filter(e => {\n              return e.category_id != res.toString()\n            })\n            UserData.tests.push({ 'category_id': res, 'expiry_date': expiry });\n          })\n          console.log(UserData.tests)\n        }\n      });\n      let update = await UserData.save();\n    });\n\n    // return {\n    //   \"status\": true, \"code\": 2000, 'message': 'User Subscription Data Updated', 'data': {\n    //     subscription: subscriptionData,\n    //     users: subscriptionData\n    //   }\n    // }\n  }\n\n  // async   getSubcriptionsGreaterToday() : Promise<Subscription[]>  {\n  //   let date = new Date();\n  //   let today=date.getTime(); \n  //  // return this.subscriptionModel.find( { validTo : { $gte: new Date( today - 1000 * 86400 * 1) } } ).exec();\n  //  return this.subscriptionModel\n  //  .aggregate([\n  //   { $match : {\"flags.active\":true,validTo : { $gte: new Date( today - 1000 * 86400 * 1) }}},\n  //    {\n  //      $lookup:\n  //      {\n  //        from: \"courses\",\n  //        localField: \"courses\",\n  //        foreignField: \"_id\",\n  //        as: \"course\",\n  //      }\n  //    },\n  //    {\n  //      $unwind: { path: \"$course\", preserveNullAndEmptyArrays: true }\n  //    },\n  //    {\n  //      $lookup: {\n  //        \"from\": \"qbanksubjects\",\n  //        \"let\": { \"qbanks\": \"$qbanks\" },\n  //        \"pipeline\": [\n  //          { \"$match\": { \"$expr\": { \"$in\": [\"$_id\", \"$$qbanks\"] } } }\n  //        ],\n  //        \"as\": \"qbank\"\n  //      }\n  //    },\n  //    {\n  //      $unwind: { path: \"$qbank\", preserveNullAndEmptyArrays: true }\n  //    },\n  //    {\n  //      $lookup: {\n  //        \"from\": \"videosubjects\",\n  //        \"let\": { \"videos\": \"$videos\" },\n  //        \"pipeline\": [\n  //          { \"$match\": { \"$expr\": { \"$in\": [\"$_id\", \"$$videos\"] } } }\n  //        ],\n  //        \"as\": \"videos\"\n  //      }\n  //    },\n  //    {\n  //      $unwind: { path: \"$videos\", preserveNullAndEmptyArrays: true }\n  //    },\n  //    {\n  //      $lookup: {\n  //        \"from\": \"tscategories\",\n  //        \"let\": { \"tests\": \"$tests\" },\n  //        \"pipeline\": [\n  //          { \"$match\": { \"$expr\": { \"$in\": [\"$_id\", \"$$tests\"] } } }\n  //        ],\n  //        \"as\": \"tscategories\"\n  //      }\n  //    },\n  //    {\n  //      $unwind: { path: \"$tscategories\", preserveNullAndEmptyArrays: true }\n  //    },\n  //    {\n  //      $lookup:\n  //      {\n  //        from: \"syllabuses\",\n  //        localField: \"qbank.syllabus\",\n  //        foreignField: \"_id\",\n  //        as: \"syllabuss\",\n  //      }\n  //    },\n  //    {\n  //      $unwind: { path: \"$syllabuss\", preserveNullAndEmptyArrays: true }\n  //    },\n  //    {\n  //      $lookup:\n  //      {\n  //        from: \"syllabuses\",\n  //        localField: \"videos.syllabus\",\n  //        foreignField: \"_id\",\n  //        as: \"syllabussss\",\n  //      }\n  //    },\n  //    {\n  //      $unwind: { path: \"$syllabussss\", preserveNullAndEmptyArrays: true }\n  //    },\n  //    {\n  //      $unwind: { path: \"$categories\", preserveNullAndEmptyArrays: true }\n  //    },\n  //    {\n  //      $group: {\n  //        _id: { _id: \"$_id\", title: \"$title\", order: \"$order\", uuid: \"$uuid\",\"originalPrice\":\"$originalPrice\",\n  //         createdOn: \"$createdOn\",validFrom: \"$validFrom\",validTo: \"$validTo\",period:\"$period\",actual: \"$actual\"\n  //         },\n  //        courses: {\n  //          $first: {\n  //            //  \"uuid\": \"$course.uuid\",\n  //            \"title\": \"$course.title\",\n  //            \"_id\": \"$course._id\"\n  //          }\n  //        },\n  //        qbank: {\n  //          $addToSet: {\n  //            \"_id\": \"$qbank._id\",\n  //            //\"subject_uuid\": \"$syllabuss.uuid\",\n  //            // \"subject_id\": \"$syllabuss._id\",\n  //            \"title\": \"$syllabuss.title\",\n  //          }\n  //        },\n  //        videos: {\n  //          $addToSet: {\n  //            \"_id\": \"$videos._id\",\n  //            // \"subject_uuid\": \"$syllabussss.uuid\",\n  //            //\"subject_id\": \"$syllabussss._id\",\n  //            \"title\": \"$syllabussss.title\",\n  //          }\n  //        },\n  //        tests: {\n  //          $addToSet: {\n  //            \"_id\": \"$tscategories._id\",\n  //            // \"subject_uuid\": \"$tscategories.categories.uuid\",\n  //            //\"subject_id\": \"$tscategories.categories._id\",\n  //            \"title\": \"$tscategories.categories.title\",\n  //          }\n  //        },\n  //      }\n  //    },\n  //    {\n  //      $project: {\n  //        \"_id\": '$_id._id',\n  //        \"title\": '$_id.title',\n  //        \"order\": '$_id.order',\n  //        \"uuid\": '$_id.uuid',\n  //        \"createdOn\": '$_id.createdOn',\n  //        \"actual\": \"$_id.actual\",\n  //        \"originalPrice\":\"$_id.originalPrice\",\n  //        \"validFrom\": \"$_id.validFrom\",\n  //        \"validTo\": \"$_id.validTo\",\n  //        \"period\":\"$_id.period\",\n  //        \"courses\": '$courses',\n  //        \"qbanks\": \"$qbank\",\n  //        \"videos\": \"$videos\",\n  //        \"tests\": \"$tests\",\n  //      }\n  //    },\n  //   //  { $match : { validTo : { $gte: new Date( today - 1000 * 86400 * 1) } } }\n  //  ]).exec();\n  // }\n  async getSubcriptionsGreaterToday(): Promise<Subscription[]> {\n    let date = new Date();\n    let today = date.getTime();\n    return this.subscriptionModel.find({ \"flags.active\": true, validTo: { $gte: new Date(today - 1000 * 86400 * 1) } },\n      { _id: 1, uuid: 1, title: 1, courses: 1, createdOn: 1, validFrom: 1, validTo: 1, flags: 1, order: 1, actual: 1, originalPrice: 1, period: 1,periodType:1 })\n      .populate({\n        path: 'courses',\n        select: {\n          \"uuid\": 1,\n          \"title\": 1,\n          \"_id\": 1,\n        }\n      }).sort({ order: 'ASC' }).exec()\n\n  }\n\n  async couponSubscriptions(): Promise<Subscription[]> {\n    let date = new Date();\n    let today = date.getTime();\n    return this.subscriptionModel.find({\n      flags: { active: true },\n      validTo: { $gte: new Date(today - 1000 * 86400 * 1) }\n    }, { _id: 1, uuid: 1, title: 1, actual: 1 }).exec();\n  }\n\n  async findByCourse(courseId: string): Promise<any> {\n    return this.subscriptionModel\n      .find({ courses: courseId }, { id: 1, uuid: 1, title: 1 })\n      .exec();\n\n  }\n\n  // async updateAssignments(result: Subscription) {\n  //   result?.parents?.forEach(par => {\n  //     if(par){\n  //       this.subscriptionModel.findByIdAndUpdate(\n  //         {_id: par},\n  //         { $push: { children: result._id } }\n  //       ).exec();\n  //     }\n  //   });\n  //   result?.children?.forEach(chi => {\n  //     if(chi){\n  //       this.subscriptionModel.findByIdAndUpdate(\n  //         {_id: chi},\n  //         { $push: { parents: result._id } }\n  //       ).exec();\n  //     }\n  //   });\n  // }\n}\n","import { SyllabusInterface } from '@application/api-interfaces';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateSyllabusDto } from '../dto';\nimport { Syllabus } from '../schema/syllabus.schema';\n\n@Injectable()\nexport class SyllabusService {\n  constructor(\n    @InjectModel('Syllabus') private syllabusModel: Model<Syllabus>\n  ) {}\n\n  async findAll(): Promise<Syllabus[]> {\n    return this.syllabusModel\n      .find()\n      .populate('parents')\n      .populate('children')\n      .populate('courses')\n      .sort({order:'ASC'})\n      .exec();\n  }\n  async findSubejcts(): Promise<Syllabus[]>{\n    return this.syllabusModel.find({ type: { $ne: 'CHAPTER'}},{type:'SUBJECT',uuid:1,title:1,shortcut:1}).exec();\n  }\n  async getActiveSyllabus(): Promise<Syllabus[]> {\n    return this.syllabusModel.find({ 'flags.active': true }).exec();\n    // .populate('parents')\n    // .populate('children')\n    // .populate('courses')\n    // .exec();\n  }\n  async getSubjectsAndChapters(): Promise<Syllabus[]> {\n    return this.syllabusModel.find({},{_id:1,uuid:1,title:1,type:1,shortcut:1,order:1,flags:1,createdOn:1})\n      .sort({ order: 'ASC' })\n      .exec();\n  }\n  async getSubjectOrChapterList(uuid: string): Promise<Syllabus> {\n    return this.syllabusModel\n      .findOne({ uuid },{_id:1,uuid:1,title:1,type:1,shortcut:1})\n      .populate(\n        {\n          path: 'parents',\n          match: {\n            \"type\": \"SUBJECT\",\n          },\n          select: {\n            \"uuid\": 1,\n            \"title\": 1,\n            \"_id\": 1,\n            \"shortcut\":1\n          }\n        })\n      .populate(\n        {\n          path: 'children',\n          match: {\n            \"type\": \"CHAPTER\",\n          },\n          select: {\n            \"uuid\": 1,\n            \"title\": 1,\n            \"_id\": 1,\n            \"shortcut\":1\n\n          }\n        })\n      .exec();\n  }\n  async onlySubjects(): Promise<Syllabus[]> {\n    return this.syllabusModel.find({ 'flags.active': true,type: { $ne: 'CHAPTER'} },{type:1,_id:1,uuid:1,title:1,shortcut:1}).exec();\n  }\n  async onlyChapters(): Promise<Syllabus[]> {\n    return this.syllabusModel.find({ 'flags.active': true,type: { $ne: 'SUBJECT'} },{type:1,_id:1,uuid:1,title:1,shortcut:1}).exec();\n  }\n\n  async findByUuid(uuid: string): Promise<Syllabus> {\n    return this.syllabusModel\n      .findOne({ uuid })\n      .populate('parents')\n      .populate('children')\n      .populate('courses')\n      .exec();\n  }\n\n  async deleteByUuid(uuid: string) {\n    this.findByUuid(uuid).then(result => {\n      result.children.forEach(child => {\n        if(child){\n          this.syllabusModel.findByIdAndUpdate(\n            {_id: child},\n            { $pull: { parents: result._id } }\n          ).exec();\n        }\n      });\n      result.parents.forEach(parent => {\n        if(parent){\n          this.syllabusModel.findByIdAndUpdate(\n            {_id: parent},\n            { $pull: { children: result._id } }\n          ).exec();\n        }\n      });\n\n    });\n\n    return this.syllabusModel.findOneAndDelete({ uuid }).exec();\n  }\n\n  async create(createSyllabusDto: CreateSyllabusDto): Promise<Syllabus> {\n    const createdSyllabus = new this.syllabusModel(createSyllabusDto);\n    console.log(createdSyllabus.get('type'));\n    const result = createdSyllabus.save();\n    result.then(syllabus => {\n      this.updateAssignments(syllabus);\n    })\n\n    return result;\n  }\n\n  async editSyllabusByUuid(\n    uuid: string,\n    request: SyllabusInterface\n  ): Promise<Syllabus> {\n    const result = this.syllabusModel.findOneAndUpdate(\n      { uuid },\n      request\n    ).exec();\n    // result.then(syllabus => {\n    //   this.updateAssignments(syllabus);\n    // })\n\n    return result;\n  }\n\n  async updateAssignments(result: Syllabus) {\n    result?.parents?.forEach(par => {\n      if(par){\n        this.syllabusModel.findByIdAndUpdate(\n          {_id: par},\n          { $push: { children: result._id } }\n        ).exec();\n      }\n    });\n    result?.children?.forEach(chi => {\n      if(chi){\n        this.syllabusModel.findByIdAndUpdate(\n          {_id: chi},\n          { $push: { parents: result._id } }\n        ).exec();\n      }\n    });\n  }\n  async fetChapters(request:any) {\n    return this.syllabusModel\n      .find({\n        _id :request.syllabusId,\n        'flags.active' : true,\n        'flags.questionBank' : true\n      },{\n          \"uuid\":1,\n          // \"title\":1,\n          // \"type\":1,\n          // \"order\":1,\n          // \"shortcut\":1,\n          // \"imgUrlVideos\":1,\n          // \"suggestedBanner\":1,\n          // \"createdBy\":1\n      })\n    //   .populate({\n    //     path: 'parents',\n    //     match: {\n    //       \"type\": \"SUBJECT\" ,\n    //       \"flags.questionBank\": true ,\n    //       'flags.active' : true\n    //     },\n    //     select:{\n    //       \"uuid\":1,\n    //       \"title\":1,\n    //       \"type\":1,\n    //       \"order\":1,\n    //       \"shortcut\":1,\n    //       \"imgUrlVideos\":1,\n    //       \"suggestedBanner\":1,\n    //       \"createdBy\":1\n    //     }\n    // })\n      .populate(\n        {\n          path: 'children',\n        match: {\n          \"type\": \"CHAPTER\" ,\n          \"flags.questionBank\": true ,\n          'flags.active' : true\n        },\n        select:{\n          \"uuid\":1,\n          \"title\":1,\n          \"_id\":1,\n          // \"type\":1,\n          // \"order\":1,\n          // \"shortcut\":1,\n          // \"imgUrlVideos\":1,\n          // \"suggestedBanner\":1,\n          // \"createdBy\":1\n        }\n      })\n      .then(res => {\n        return res[0].children\n      });\n  }\n  async getvideoChapters(request:any) {\n    return this.syllabusModel\n      .find({\n        _id :request.syllabusId,\n        'flags.active' : true,\n        'flags.videos' : true\n      },{\n          \"uuid\":1,\n      })\n      .populate(\n        {\n          path: 'children',\n        match: {\n          \"type\": \"CHAPTER\" ,\n          \"flags.videos\": true ,\n          'flags.active' : true\n        },\n        select:{\n          \"uuid\":1,\n          \"title\":1,\n          \"_id\":1,\n        }\n      })\n      .then(res => {\n        return res[0].children\n      });\n  }\n}\n","import { Injectable } from '@nestjs/common';\nimport {TagsInterface } from '@application/api-interfaces'; \nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateTagsDTO } from '../dto/create-tags.dto';\nimport { Tags } from '../schema/tags.schema';\n\n@Injectable()\nexport class TagsService {\n  constructor(@InjectModel('Tags') private tagsModel: Model<Tags>) { }\n\n  async create(createTagsDTO: CreateTagsDTO): Promise<Tags> {\n    const createdBanner = new this.tagsModel(createTagsDTO);\n    const result = createdBanner.save();\n    console.log('added tag', result);\n    return result;\n  }\n\n  async findAll(): Promise<Tags[]> {\n    return this.tagsModel.find().exec();\n  }\n\n  async findByUuid(uuid: string): Promise<Tags> {\n    return this.tagsModel.findOne({ uuid }, {\n      _id: 1, uuid: 1, title: 1, flags: 1\n    }).exec();\n    \n  }\n\n  async deleteByUuid(uuid: string) {\n    return this.tagsModel.findOneAndDelete({ uuid }).exec();\n  }\n\n  async editTagByUuid(\n    uuid: string,\n    request: TagsInterface\n  ): Promise<Tags> {\n     this.tagsModel.findOneAndUpdate({ uuid }, request).exec();\n     return this.tagsModel.findOne({ uuid }, {}).exec();\n  }\n\n  async getActiveTags() {\n\n    return this.tagsModel.find(  { flags: { active: true } },{_id: 1, uuid: 1, title: 1} ).exec();\n\n     \n  }\n\n}","import { TestCategoryInterface, TestInterface } from '@application/api-interfaces';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { ObjectId } from 'mongodb';\nimport { Model } from 'mongoose';\nimport { CreateTSCategoriesDTO } from '../../dto';\nimport { TSCategories, Question, Syllabus, Course, DailyTestQuestions, SubmittedTest, User } from '../../schema';\nimport * as Uuid from 'uuid';\nimport * as mongoose from 'mongoose';\n\n\n@Injectable()\nexport class TestCategoryService {\n  constructor(\n    @InjectModel('TSCategories') private TSCategoriesModel: Model<TSCategories>,\n    @InjectModel('Question') private questionModel: Model<Question>,\n    @InjectModel('Syllabus') private syllabusModel: Model<Syllabus>,\n    @InjectModel('Course') private courseModel: Model<Course>,\n    @InjectModel('DailyTestQuestions') private dailyTestQuestionsModel: Model<DailyTestQuestions>,\n    @InjectModel('SubmittedTest') private submittedTestModel: Model<SubmittedTest>,\n    @InjectModel('User') private userModel: Model<User>,\n\n  ) { }\n\n\n  async findByCourse(courseId: string): Promise<any> {\n    let sub = [];\n    return this.TSCategoriesModel\n      .find({ courses: courseId }, { _id: 1, uuid: 1, categories: 1 }).exec()\n      .then(result => {\n        result.forEach(syl => {\n          sub.push(\n            {\n              \"_id\": syl._id,\n              \"uuid\": syl.uuid,\n              \"title\": syl.categories.title,\n            }\n          )\n        })\n        return sub;\n      })\n\n  }\n\n\n  async findSubjectsByCoueseIds(coursesarr: any): Promise<any> {\n    let sub = [];\n    return this.TSCategoriesModel\n      .find({ courses: { $in: coursesarr } }, { _id: 1, uuid: 1, categories: 1 })\n      .populate({\n        path: 'courses',\n        select: {\n          \"title\": 1\n        }\n      }).exec()\n      // .populate({\n      //   path: 'categories',\n      //   select: {\n      //     \"uuid\": 1,\n      //     \"title\": 1,\n      //     // \"_id\": 1\n\n      //   }\n      // }).exec()\n      .then(result => {\n        result.forEach(syl => {\n          // let new_syl: any = syl.categories;\n          let new_courses: any = syl.courses;\n          sub.push(\n            {\n              \"_id\": syl._id,\n              \"uuid\": syl.uuid,\n              \"title\": syl.categories.title,\n              \"course_name\": new_courses.title,\n              \"course_id\": new_courses._id\n            }\n          )\n        })\n        return sub;\n      })\n\n  }\n\n  async findAll(employee): Promise<TSCategories[]> {\n\n    const courseListIds = [];\n    const empCourses = await this.courseModel.find({organizations:{$in:employee.organizations}},{_id:true})\n    empCourses.forEach(element => {\n      courseListIds.push(element._id)\n    });\n    // return this.TSCategoriesModel\n    //   .find()\n    //   .populate('courses')\n    //   .exec();\n    let data: any\n    data = await this.TSCategoriesModel\n      .find({courses:{$in:courseListIds}}, { 'courses': 1, '_id': 1, 'uuid': 1, 'categories.order': 1, 'categories.title': 1, 'categories.tests.length': 1, 'createdOn': 1, 'flags': 1 })\n      .populate({\n        path: 'courses',\n        match: {\n          // \"flags.testSeries\": true ,\n          // 'flags.active': true\n        },\n        select: {\n          \"uuid\": 1,\n          \"title\": 1,\n        }\n      })\n      .sort({ 'categories.order': 1 })\n      .exec()\n    // data.map((res,i)=>{\n    //  console.log('res.categories.tests.length',res.categories.tests.length);\n    //  res.categories.count = res.categories.tests.length;\n    // })\n\n    // data.count =data.categories.tests.length\n    return data\n\n  }\n  async getTests(catUuid) {\n    return this.TSCategoriesModel.find({ uuid: catUuid }, { '_id': 1, 'uuid': 1, 'categories': 1 }).sort({ 'categories.order': 'ASC' }).exec()\n  }\n\n  async findByUuid(uuid: string): Promise<TSCategories> {\n    // return this.TSCategoriesModel\n    //   .findOne({ uuid })\n    //   .populate('courses')\n    //   .exec();\n    return this.TSCategoriesModel\n      .findOne({ uuid })\n      .sort({ order: 'ASC' })\n      .populate({\n        path: 'courses',\n        match: {\n          'flags.active': true\n        },\n        select: {\n          \"uuid\": 1,\n          // \"title\":1,\n          // \"_id\":1,\n        }\n      })\n      .exec();\n  }\n\n  async deleteByUuid(uuid: string) {\n\n    // this.findCategoryByUuid(uuid).then(result => {\n    // result.children.forEach(child => {\n    //   if(child){\n    //     this.TSCategoriesModel.findByIdAndUpdate(\n    //       {_id: child},\n    //       { $pull: { parents: result._id } }\n    //     ).exec();\n    //   }\n    // });\n    // result.parents.forEach(parent => {\n    //   if(parent){\n    //     this.TSCategoriesModel.findByIdAndUpdate(\n    //       {_id: parent},\n    //       { $pull: { children: result._id } }\n    //     ).exec();\n    //   }\n    // });\n\n    // });\n\n    return this.TSCategoriesModel.findOneAndDelete({ uuid }).exec();\n\n  }\n\n  async create(createTSCategoriesDTO: CreateTSCategoriesDTO): Promise<TSCategories> {\n    const createdTSCategories = new this.TSCategoriesModel(createTSCategoriesDTO);\n    const result = createdTSCategories.save();\n    return result;\n  }\n\n  async editByUuid(request: any): Promise<any> {\n\n    return this.TSCategoriesModel.findOneAndUpdate({ uuid: request.uuid }, request).exec();\n\n  }\n\n\n\n  async getTestSeriesCourseByCategory(request: any) {\n    return this.TSCategoriesModel\n      .find({\n        _id: request.categorieId,\n        'flags.active': true\n      })\n      .populate(\n        {\n          path: 'courses',\n          match: { \"flags.testSeries\": true, 'flags.active': true, }\n        })\n      .exec();\n  }\n\n  async getTestsByUuid(uuid: string, testuuid: string) {\n    return this.TSCategoriesModel\n      .aggregate([\n        { $match: { \"uuid\": uuid } },\n        { $unwind: \"$categories\" },\n        {\n          '$project': {\n            'tests': {\n              '$filter': {\n                'input': '$categories.tests',\n                'cond': {\n                  '$eq': [\n                    '$$this.uuid', testuuid\n                  ]\n                }\n              }\n            }\n          }\n        }, {\n          '$unwind': '$tests'\n        },\n        {\n          $project: {\n            \"_id\": 0,\n            \"tests\": '$tests'\n            //\"tests\": '$categories.tests'\n          }\n        }\n      ]).exec()\n      .then(async res => {\n        // return res[0].tests;\n        // let totalres = res.filter(it => it.chapters.topics.length > 0)[0].chapters.topics[0];\n        let totalres = res[0].tests\n        if (totalres.que) {\n          for (var j = 0; j < totalres.que.length; j++) {\n            let name = '';\n            var obj = await this.questionModel.findOne({ \"uuid\": totalres.que[j].uuid }, { title: 1 }).exec();\n            if (obj) {\n              name = obj.title;\n            }\n            totalres.que[j]['title'] = name;\n          };\n        }\n        // totalres['chapter'] = chapterobj[0];\n        return totalres;\n      })\n      .catch(err => err);\n  }\n\n  async insertTSTests(request: any) {\n    // return res\n    return this.TSCategoriesModel\n      .updateOne(\n        {\n          uuid: request.uuid,\n          //'flags.active' : true\n        },\n        {\n          $push: { \"categories.tests\": request.tests }\n        }\n        // {\n        //   arrayFilters: [{ \"chelem.uuid\": { $eq: request.to_category } }]\n        // }\n      ).exec();\n  }\n\n  /* async editTestByUuid(request: any) {\n \n     var test_uuid = request.tests.uuid\n     this.TSCategoriesModel\n       .updateOne(\n         {\n           uuid: request.uuid,\n         },\n         {\n           $pull: { \"categories.tests\": { uuid: test_uuid } }\n         }\n       ).exec();\n \n     return this.TSCategoriesModel\n       .updateOne(\n         {\n           uuid: request.uuid,\n         },\n         {\n           $push: { \"categories.tests\": request.tests }\n         }\n       ).exec();\n \n   }*/\n\n  async editTestByUuid(request: any) {\n\n    return this.TSCategoriesModel\n      .findOneAndUpdate(\n\n        {\n          uuid: request.uuid\n        },\n\n        {\n          $set: {\n            \"categories.tests.$[elem1]\": request.tests,\n          }\n          // $inc : { 'count' : 1 }\n        },\n\n        {\n          arrayFilters: [\n            { \"elem1.uuid\": { $eq: request.tests.uuid } }\n          ]\n        },\n\n      ).exec();\n\n\n  }\n\n  async deleteTestByUuid(uuid: string, testUuid: string) {\n    return this.TSCategoriesModel\n      .updateOne(\n        {\n          uuid: uuid,\n        },\n        {\n          $pull: { \"categories.tests\": { uuid: testUuid } }\n        }\n      ).exec();\n  }\n\n\n  async getTestQuestionsByUuid(uuid: string, testuuid: string) {\n    return this.TSCategoriesModel\n      .aggregate([\n        { $match: { \"uuid\": uuid } },\n        { $unwind: \"$categories\" },\n        {\n          '$project': {\n            'tests': {\n              '$filter': {\n                'input': '$categories.tests',\n                'cond': {\n                  '$eq': [\n                    '$$this.uuid', testuuid\n                  ]\n                }\n              }\n            }\n          }\n        },\n        {\n          '$unwind': '$tests'\n        },\n\n        {\n          $unwind: \"$tests.que\"\n        },\n        { $sort: { 'tests.que.order': 1 } },\n        {\n          $lookup: // Equality Match\n          {\n            from: \"questions\",\n            localField: \"tests.que.uuid\",\n            foreignField: \"uuid\",\n            as: \"question\",\n          }\n        },\n\n        {\n          $unwind: \"$question\"\n        },\n\n\n\n        {\n          $project: {\n            \"order\": '$tests.que.order',\n            \"positive\": '$tests.que.positive',\n            \"negative\": '$tests.que.negative',\n            \"subjects\": \"$tests.subjects\",\n\n            \"_id\": \"$question._id\",\n            \"uuid\": \"$question.uuid\",\n            \"title\": \"$question.title\",\n            \"options\": \"$question.options\",\n            \"type\": \"$question.type\",\n            \"answer\": \"$question.answer\",\n            \"description\": \"$question.description\",\n            \"flags\": \"$question.flags\",\n            \"questionId\": \"$question.questionId\",\n            \"descriptionImgUrl\": \"$question.descriptionImgUrl\",\n\n            \"perals\": \"$question.perals\",\n            \"syllabus\": \"$question.syllabus\",\n            \"imgUrl\": \"$question.imgUrl\",\n            \"difficulty\": \"$question.difficulty\",\n            \"previousAppearances\": \"$question.previousAppearances\",\n            \"tags\": \"$question.tags\",\n            \"mathType\": \"$question.mathType\",\n            \"createdBy\": \"$question.createdBy\",\n            // \"matchRightSideOptions\":\"$question.matchRightSideOptions\",\n            // \"matchLeftSideOptions\":\"$question.matchLeftSideOptions\",\n            // \"createdOn\":\"$question.createdOn\",\n            // \"shortTitle\":\"$question.shortTitle\",\n          }\n        },\n\n        // {\n        //   $project: {\n        //     \"_id\":0,\n        //     \"tests\": '$tests'\n\n        //   }\n        // }\n      ]).exec();\n    // ]).exec()\n    // .then(res => {\n    //   return res[0].tests;\n    // })\n    // .catch(err => err);\n  }\n\n  async deleteTSQuestions(request: any): Promise<TSCategories> {\n    return this.TSCategoriesModel\n      .findOneAndUpdate(\n        { uuid: request.uuid },\n\n        {\n          $pull: { \"categories.tests.$[telem].que\": { \"uuid\": { $in: request.from_que } } },\n        },\n        {\n          arrayFilters: [\n            { \"telem.uuid\": { $eq: request.from_test } }\n          ]\n        },\n      )\n      .exec();\n  }\n\n  // async getTestsByTSUuid(uuid: string) {\n  //   return this.TSCategoriesModel\n  //     .aggregate([\n  //       { $match: { \"uuid\": uuid } },\n  //       { $unwind: \"$categories\" },\n  //       {\n  //         '$unwind': '$categories.tests'\n  //       },\n  //       {\n  //         $project: {\n  //           \"_id\": 0,\n  //           \"title\": '$categories.tests.title',\n  //           \"uuid\": '$categories.tests.uuid',\n  //         }\n  //       },\n\n  //     ]).exec();\n  // }\n\n\n  async copyTSQuestions(request: TestCategoryInterface): Promise<TSCategories> {\n\n    return this.TSCategoriesModel\n      .findOneAndUpdate(\n        {\n          uuid: request.uuid\n\n        },\n        // filter and push to the object\n        {\n          $push: { \"categories.tests.$[telem].que\": { $each: request.que } },\n\n        },\n        {\n          arrayFilters: [\n            { \"telem.uuid\": { $eq: request.to_test } }\n          ]\n        },\n\n      )\n      .exec();\n  }\n\n  async moveTSQuestions(request: TestCategoryInterface): Promise<TSCategories> {\n\n    this.TSCategoriesModel\n      .findOneAndUpdate(\n        { uuid: request.uuid },\n\n        {\n          $pull: { \"categories.tests.$[telem].que\": { \"uuid\": { $in: request.from_que } } }\n        },\n        {\n          arrayFilters: [\n            { \"telem.uuid\": { $eq: request.from_test } }\n          ]\n        },\n\n      )\n      .exec();\n    return this.TSCategoriesModel\n      .findOneAndUpdate(\n        {\n          uuid: request.to_uuid\n\n        },\n        // filter and push to the object\n        {\n          $push: { \"categories.tests.$[totelem].que\": { $each: request.que } },\n\n        },\n        {\n          arrayFilters: [\n            { \"totelem.uuid\": { $eq: request.to_test } }\n          ]\n        },\n\n      )\n      .exec();\n  }\n\n  async dragAndDropTSQuestions(request: TestCategoryInterface): Promise<TSCategories> {\n\n    return this.TSCategoriesModel\n      .findOneAndUpdate(\n\n        {\n          uuid: request.uuid\n        },\n\n        {\n          $set: {\n            \"categories.tests.$[elem1].que\": request.que,\n          }\n          // $inc : { 'count' : 1 }\n        },\n\n        {\n          arrayFilters: [\n            { \"elem1.uuid\": { $eq: request.to_test } }\n          ]\n        },\n\n      ).exec();\n  }\n\n  async dragAndDropTests(request: any): Promise<TSCategories> {\n\n    return this.TSCategoriesModel\n      .findOneAndUpdate(\n\n        {\n          uuid: request.uuid\n        },\n\n        {\n          $set: {\n            \"categories.tests\": request.tests,\n          }\n          // $inc : { 'count' : 1 }\n        },\n\n        // {\n        //   arrayFilters: [\n        //   { \"elem1.uuid\": { $eq: request.to_test } }\n        //   ]\n        // },\n\n      ).exec();\n  }\n\n\n  async copyTSTests(request: TestCategoryInterface): Promise<TSCategories> {\n    return this.TSCategoriesModel\n      .findOneAndUpdate(\n        {\n          uuid: request.uuid\n\n        },\n        // filter and push to the object\n        {\n          $push: { \"categories.tests\": { $each: request.tests } },\n          // $inc : { 'count' : request.count }\n        },\n        // {\n        //   arrayFilters: [{ \"chelem.uuid\": { $eq: request.to_chapter } }\n        //     //  { \"telem.uuid\": { $eq: request.to_topic } } \n        //   ]\n        // },\n\n      )\n      .exec();\n  }\n\n  async moveTSTests(request: TestCategoryInterface): Promise<TSCategories> {\n\n    this.TSCategoriesModel\n      .findOneAndUpdate(\n        { uuid: request.uuid },\n\n        {\n          $pull: { \"categories.tests\": { \"uuid\": { $in: request.from_test } } },\n          // $inc : { 'count' : -(request.count) }\n        },\n      )\n      .exec();\n\n    return this.TSCategoriesModel\n      .findOneAndUpdate(\n        {\n          uuid: request.to_uuid\n\n        },\n        // filter and push to the object\n        {\n          $push: { \"categories.tests\": { $each: request.tests } },\n          // $inc : { 'count' : request.count }\n        },\n      )\n      .exec();\n  }\n\n\n  async updateTestSeriesUpcoming() {\n    var tests = this.TSCategoriesModel.find({\n      'categories.tests.testStatus': 0,\n      \"flags.active\": true,\n      'categories.tests.scheduledDate': {\n        $lt: new Date().toDateString()\n      }\n    },\n      (err, events) => {\n        events.forEach(testes => {\n          var steps = testes.categories.tests.filter(test =>\n            (new Date(test.scheduledDate) < new Date() && test.testStatus == 0));\n          steps.forEach(async step => {\n            step.testStatus = 1\n            await this.TSCategoriesModel\n              .findOneAndUpdate(\n                {\n                  uuid: testes.uuid\n                },\n                {\n                  $set: {\n                    \"categories.tests.$[elem1].testStatus\": 1,\n                  }\n                },\n                {\n                  arrayFilters: [\n                    { \"elem1.uuid\": { $eq: step.uuid } }\n                  ]\n                },\n              ).exec();\n            // console.log(testes.uuid,step.uuid)\n          })\n        })\n      }\n    )\n    return 'Test Status Updated';\n  }\n\n\n  async createDailyTest(): Promise<any> {\n\n    var courses = await this.courseModel.find().exec();\n    courses.map(async course => {\n      var courseId = course._id;\n      var syllabus = course.syllabus\n      try {\n        var testSeries = await this.TSCategoriesModel.findOne({ 'courses': courseId, \"categories.title\": '9 PM 9 Questions For You' }).exec();\n\n        if (testSeries) {\n          var dailyQuestions = await this.dailyTestQuestionsModel.findOne({ 'courseId': courseId }).exec();\n          if (dailyQuestions) {\n            var questions = await this.questionModel.aggregate([\n              {\n                $match: {\n                  syllabus: { $in: syllabus }, _id: { $nin: dailyQuestions.questionIds }, 'flags.active': true,\n                  \"flags.testSeries\": true,\n                }\n              },\n              { $sample: { size: 9 } }]).exec();\n          } else {\n            var questions = await this.questionModel.aggregate([\n              {\n                $match: {\n                  syllabus: { $in: syllabus }, 'flags.active': true,\n                  \"flags.testSeries\": true,\n                }\n              },\n              { $sample: { size: 9 } }]).exec();\n          }\n\n          console.log(questions);\n          if (questions) {\n            var que = [];\n            var subjects = [];\n            var savedsubjects = [];\n            var index = 0;\n            questions.map(question => {\n              savedsubjects.push(question._id);\n              que.push(\n                {\n                  \"_id\": question._id,\n                  \"uuid\": question.uuid,\n                  \"order\": index + 1,\n                  \"positive\": 1,\n                  \"negative\": 0\n                }\n              )\n              index = index + 1;\n            })\n            if (dailyQuestions) {\n              console.log('found', dailyQuestions)\n              var createTest = await this.dailyTestQuestionsModel\n                .updateOne(\n                  {\n                    courseId: courseId,\n                  },\n                  {\n                    $push: { \"questionIds\": savedsubjects }\n                  }\n                ).exec();\n            } else {\n              var daily = new this.dailyTestQuestionsModel();\n              daily.courseId = courseId;\n              daily.questionIds = savedsubjects;\n              daily.createdOn = new Date();\n              daily.save();\n              console.log(daily);\n            }\n            for (var j = 0; j < syllabus.length; j++) {\n              var obj = await this.syllabusModel.findOne({ \"_id\": syllabus[j] }, { uuid: 1, title: 1 }).sort({ order: 1 }).exec();\n              subjects.push({\n                \"uuid\": obj.uuid,\n                \"_id\": syllabus[j]\n              })\n            }\n            if (testSeries) {\n\n              var testData = {\n                \"uuid\": Uuid.v4(),\n                \"title\": \"Today's Questions\",\n                \"description\": \"Test description\",\n                \"time\": 30,\n                \"order\": 1,\n                \"scheduledDate\": new Date(),\n                \"count\": 10,\n                \"negativeMarks\": 0,\n                \"positiveMarks\": 1,\n                \"que\": que,\n                \"testStatus\": 1,\n                \"subjects\": subjects,\n                \"status\": 0,\n                \"testType\": \"vanishing\",\n                \"flags\": {\n                  \"active\": true,\n                  \"suggested\": false,\n                  \"paid\": false,\n                  \"editable\": true\n                },\n                \"createdBy\": {\n                  \"uuid\": \"661229f5-8a01-47f8-8ec8-f5f872fb7127\",\n                  \"name\": \"Ramesh\"\n                },\n                \"createdOn\": new Date(),\n                \"modifiedOn\": null,\n                \"pdf\": \"\",\n                \"suggestedBanner\": \"\",\n                \"expiryDate\": \"\",\n                \"expiryTime\": \"\",\n                \"imgUrl\": \"\",\n                \"scheduledTime\": \"\"\n              };\n\n              var createTest = await this.TSCategoriesModel\n                .updateOne(\n                  {\n                    uuid: testSeries.uuid\n                  },\n                  {\n                    \"flags.active\": true,\n                    $push: { \"categories.tests\": testData },\n                  }\n                ).exec();\n              // console.log(que,course.title)\n            }\n          }\n        }\n      } catch (exception) {\n\n      }\n    });\n    return [];\n  }\n  async vanishDailyTest(): Promise<any> {\n\n    var courses = await this.courseModel.find().exec();\n    // var course = await this.courseModel.findOne({_id:'61c584dfb818531a54aea4ed'}).exec();\n    courses.map(async course => {\n      var courseId = course._id;\n      try {\n        var createTest = await this.TSCategoriesModel\n          .updateMany(\n            {\n              'courses': courseId,\n              \"categories.title\": '9 PM 9 Questions For You'\n            },\n            {\n              $set: { \"categories.tests.$[telem].flags.active\": false, \"flags.active\": false },\n\n            },\n            {\n              arrayFilters: [\n                { \"telem.title\": { $eq: \"Today's Questions\" } }\n              ]\n            },\n          ).exec();\n      } catch (exception) {\n\n      }\n\n    });\n    return [];\n  }\n\n  async getLeaderBoard(body) {\n    const ranks = await this.submittedTestModel.aggregate([\n      {\n        $match: {\n          \"testSeriesUuid\": body.testSeriesUuid,\n          \"categoryUuid\": body.categoryUuid,\n          \"courseId\": mongoose.Types.ObjectId(body.courseId),\n          \"status\": 2\n        }\n      },\n      {\n        $lookup:\n        {\n          from: \"users\",\n          let: {\n            userId: \"$userId\"\n          },\n          pipeline: [{\n            $match: {\n              $expr: { $eq: [\"$_id\", \"$$userId\"] }\n            }\n          },\n          {\n            $project: {\n              _id: 1,\n              name: 1,\n              uuid: 1,\n              mobile:1,\n            }\n          }\n          ],\n          as: \"users\",\n        }\n      },\n      {\n        $unwind: \"$users\"\n      },\n      {\n        $project: {\n          uuid: 1,\n          stats: 1,\n          userId: 1,\n          testSeriesUuid: 1,\n          submittedOn: 1,\n          count: 1,\n          rank: 1,\n          totalUsers: 1,\n          users: 1,\n          // \"answers.question.order\": 1,\n          // \"answers.question.answer\": 1,\n          // \"answers.question.positive\": 1,\n          // \"answers.question.negative\": 1,\n          // \"answers.question.uuid\": 1,\n          // \"answers.flags.correct\": 1,\n          // \"answers.flags.wrong\": 1\n        }\n      },\n      {\n        $sort: { 'stats.secureMarks': -1 }\n      }\n    ]).exec()\n\n    for (let i = 0; i < ranks.length; i++) {\n      const element = ranks[i];\n      var userdataSubmittedTestSeriesStatus = await this.userModel\n        .aggregate([\n          { $match: { '_id': mongoose.Types.ObjectId(element['userId']) } },\n          { $unwind: \"$testSeriesSubmissions\" },\n          {\n            $match: {\n              \"testSeriesSubmissions.testSeriesUuid\": element['testSeriesUuid']\n            }\n          },\n          {\n            $project: {\n              \"_id\": 0,\n              \"testSeriesSubmissions\": 1,\n            }\n          },\n        ])\n        .exec()\n        .then(\n          (res) => {\n            if (res[0]?.testSeriesSubmissions) {\n              var v = res[0]?.testSeriesSubmissions;\n              return v;\n            }\n            (err) => {\n              return;\n            }\n          }\n        );\n      if (userdataSubmittedTestSeriesStatus) {\n\n        let submittedOn = new Date(element['submittedOn']);\n        submittedOn.getTime() + (5.5 * 60 * 60 * 1000)\n        element['submittedOn'] = new Date(submittedOn.getTime() + (5.5 * 60 * 60 * 1000));\n        if (userdataSubmittedTestSeriesStatus.startedAt) {\n          let startedAt = new Date(userdataSubmittedTestSeriesStatus.startedAt);\n          startedAt.getTime() + (5.5 * 60 * 60 * 1000)\n          element['startedAt'] = new Date(startedAt.getTime() + (5.5 * 60 * 60 * 1000));\n        }\n        if (userdataSubmittedTestSeriesStatus.stoppedAt) {\n          let stoppedAt = new Date(userdataSubmittedTestSeriesStatus.stoppedAt);\n          stoppedAt.getTime() + (5.5 * 60 * 60 * 1000)\n          element['stoppedAt'] = new Date(stoppedAt.getTime() + (5.5 * 60 * 60 * 1000));\n        } else {\n          element['stoppedAt'] = '';\n        }\n\n        if (userdataSubmittedTestSeriesStatus.completedMcq) {\n          element['completedMcq'] = userdataSubmittedTestSeriesStatus['completedMcq'];\n        }\n        // element['userdataSubmittedTestSeriesStatus'] = userdataSubmittedTestSeriesStatus;\n      }\n\n    }\n    console.log('ranks8978', ranks);\n    return ranks\n\n  }\n\n  async resetUserTest(request) {\n\n    let userId          = request.userId;\n    let courseId        = request.courseId;\n    let subjectId    = request.subjectId;\n    let categoryUuid    = request.categoryUuid;\n    let testSeriesUuid  = request.testSeriesUuid;\n\n    this.userModel.findOneAndUpdate(\n      { _id: userId },\n      {\n        $pull: { \"testSeriesSubmissions\": { \"testSeriesUuid\": testSeriesUuid ,'categoryUuid':categoryUuid} },\n      },\n      { new: true, useFindAndModify: false }\n    ).exec();\n    this.submittedTestModel.remove(\n      {\n        userId: mongoose.Types.ObjectId(userId),\n        courseId: mongoose.Types.ObjectId(courseId),\n        subjectId: mongoose.Types.ObjectId(subjectId),\n        categoryUuid: categoryUuid,\n        testSeriesUuid: testSeriesUuid,\n      },\n    ).exec();\n    return true;\n  }\n}\n","import { TestInterface } from '@application/api-interfaces';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateTestDTO } from '../../dto';\nimport { Course, Test, TSCategories } from '../../schema';\n\n@Injectable()\nexport class TestsService {\n\n  constructor(\n    @InjectModel('Course') private courseModel: Model<Course>,\n    @InjectModel('Test') private testModel: Model<Test>,\n    @InjectModel('TSCategories') private TSCategoriesModel: Model<TSCategories>\n  ) {}\n\n  async findAll(): Promise<Test[]> {\n    return this.testModel\n      .find()\n      .populate('courses')\n      .populate('categories')\n      .populate('syllabus')\n      .exec();\n  }\n\n  async findByUuid(uuid: string): Promise<Test> {\n    return this.testModel.findOne({ uuid })\n    .populate('courses')\n    .populate('categories')\n    .populate('syllabus')\n    .exec();\n  }\n\n  async findByCourse(courseId: string): Promise<any> {\n\n    return this.testModel\n    .find({ courses: courseId }, { id: 1, uuid: 1, title: 1, catregories: 1 })\n    .populate({\n      path: 'categories',\n      select: '_id uuid title'\n    })\n    .exec();\n    \n\n  }\n\n  async deleteByUuid(uuid: string) {\n\n    const test = await this.testModel.findOne({ uuid });\n\n    return this.testModel.findOneAndDelete({ uuid }).exec().then(\n      (res) => {\n        console.log({ test });\n\n        return test.categories.map(it => {\n          return this.TSCategoriesModel\n          .findOneAndUpdate(\n            { _id: it },\n            {\n              $pull: { \"tests\": uuid },\n              $inc : { 'count' : -1 },\n            },\n          )\n          .exec().then(\n            (result) => {\n              return res;\n            }\n          )\n        })\n      }\n    )\n\n  }\n\n  async create(createTestDTO: CreateTestDTO): Promise<any> {\n    const createdTest = new this.testModel(createTestDTO);\n    return createdTest.save().then(\n      (res) => {\n        return createdTest.categories.map(it => {\n          return this.TSCategoriesModel\n          .findOneAndUpdate(\n            { _id: it },\n            {\n              $push: { \"tests\": res._id },\n              $inc : { 'count' : 1, 'userCompletedCount': 0 },\n            },\n          )\n          .exec().then(\n            (result) => {\n              return res;\n            }\n          )\n        })\n      }\n    )\n  }\n\n  async editByUuid(request: TestInterface): Promise<Test> {\n    const result = this.testModel.findOneAndUpdate(\n      { uuid: request.uuid },\n      request\n    ).exec();\n    // result.then(TestSeries => {\n    //   this.updateAssignments(TestSeries);\n    // })\n\n    return result;\n  }\n\n}\n","import { TestInterface } from '@application/api-interfaces';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateTestDTO } from '../../dto';\nimport { Course, Test, TSCategories, Question } from '../../schema';\n\n@Injectable()\nexport class TestSeriesService {\n\n  constructor(\n    @InjectModel('Course') private courseModel: Model<Course>,\n    @InjectModel('Test') private testModel: Model<Test>,\n    @InjectModel('TSCategories') private TSCategoriesModel: Model<TSCategories>,\n    @InjectModel('Question') private questionModel: Model<Question>\n  ) { }\n\n\n  async getTestSeriesQuestions(request: any) {\n    var data = request.subjectIds;\n    console.log(data)\n    return await this.questionModel.find({\n      syllabus:\n        { $in: data },\n      'flags.active': true,\n      \"flags.testSeries\": true,\n    },\n    ).exec();\n  }\n\n  find(options) {\n    return this.questionModel.find(options);\n  }\n  count(options) {\n    return this.questionModel.countDocuments(options)\n  }\n}\n","import { UserMessageInterface } from '@application/api-interfaces';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateUserMessageDto } from '../dto';\nimport { UserMessage } from '../schema';\n\n@Injectable()\nexport class UserMessagesService {\n\n  constructor(@InjectModel('UserMessage') private userMsgModel: Model<UserMessage>) {}\n\n  async createUserMessage(createUserMsgDto: CreateUserMessageDto): Promise<UserMessage> {\n\n    const createdMsg = new this.userMsgModel(createUserMsgDto);\n\n    return createdMsg.save();\n\n  }\n\n  async findAll(): Promise<UserMessage[]> {\n    return this.userMsgModel\n    .find()\n    .exec();\n  }\n\n  async findByUuid(uuid: string): Promise<UserMessage> {\n    return this.userMsgModel.findOne({ uuid }).exec();\n  }\n\n  async deleteByUuid(uuid: string) {\n    return this.userMsgModel.findOneAndDelete({ uuid }).exec();\n  }\n\n  async editByUuid(\n    uuid: string,\n    request: UserMessageInterface\n  ): Promise<UserMessage> {\n    return this.userMsgModel.findOneAndUpdate({ uuid }, request).exec();\n  }\n}\n","import { KeyInterface, SubscriptionInterface, UserInterface } from '@application/api-interfaces';\nimport { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport bcrypt from 'bcrypt';\nimport { Model } from 'mongoose';\nimport * as mongoose from 'mongoose';\nimport { CreateUserDto, RegisterUserDto } from '../dto';\nimport { Subscription, User, Coupon, Disableuserfortestsubmits,SubmittedTest,SubmittedQBankTopic,QBankSubject,TSCategories, Course } from '../schema';\nimport { ObjectId } from 'mongodb';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectModel('User') private userModel: Model<User>,\n    @InjectModel('Course') private courseModel: Model<Course>,\n    @InjectModel('Subscription') private subscriptionModel: Model<Subscription>,\n    @InjectModel('Coupon') private coupon: Model<Coupon>,\n    @InjectModel('SubmittedTest') private submittedTest: Model<SubmittedTest>,\n    @InjectModel('SubmittedQBankTopic')\n    private submittedQBankTopic: Model<SubmittedQBankTopic>,\n    @InjectModel('QBankSubject') private qBankSubjectmodel: Model<QBankSubject>,\n    @InjectModel('TSCategories') private TSCategoriesModel: Model<TSCategories>,\n    @InjectModel('Disableuserfortestsubmits')\n    private disableuserfortestsubmitsModel: Model<Disableuserfortestsubmits>\n  ) {}\n\n  find(options) {\n    return this.userModel.find(options);\n  }\n  count(options) {\n    return this.userModel.countDocuments(options);\n  }\n  async getEmployeeCourses(employee) {\n    return this.courseModel.find(\n      { organizations: { $in: employee.organizations } },\n      { _id: true }\n    );\n  }\n\n  async createMultiUsers(request: any) {\n    console.log('request', request);\n    return this.userModel.insertMany(request);\n  }\n\n  async addUser(createUserDto: CreateUserDto): Promise<User | Error> {\n    const createdUser = new this.userModel(createUserDto);\n    createdUser.password = await bcrypt.hash(createdUser.password, 10);\n    const uniqueMobile = await this.findByMobile(createdUser.mobile).then(\n      (res) => res\n    );\n    // const uniqueEmail = await this.findByEmail(createdUser.email).then(\n    //   (res) => res\n    // );\n    // if (!uniqueEmail && !uniqueMobile) {\n    if (!uniqueMobile) {\n      return createdUser.save();\n    }\n    // else if (uniqueEmail) {\n    //   throw new HttpException(\n    //     'The input email is already taken, please enter a new one',\n    //     HttpStatus.BAD_REQUEST\n    //   );\n    // }\n    else if (uniqueMobile) {\n      throw new HttpException(\n        'The input mobile is already taken, please enter a new one',\n        HttpStatus.BAD_REQUEST\n      );\n    }\n  }\n\n  async registerUser(registerUserDto: RegisterUserDto): Promise<User | Error> {\n    const createdUser = new this.userModel(registerUserDto);\n    createdUser.password = await bcrypt.hash(createdUser.password, 10);\n    const uniqueMobile = await this.findByMobile(createdUser.mobile).then(\n      (res) => res\n    );\n    const uniqueEmail = await this.findByEmail(createdUser.email).then(\n      (res) => res\n    );\n\n    if (!uniqueEmail && !uniqueMobile) {\n      return createdUser.save();\n    } else if (uniqueEmail) {\n      throw new HttpException(\n        'The input email is already taken, please enter a new one',\n        HttpStatus.BAD_REQUEST\n      );\n    } else if (uniqueMobile) {\n      throw new HttpException(\n        'The input mobile is already taken, please enter a new one',\n        HttpStatus.BAD_REQUEST\n      );\n    }\n  }\n\n  async login(request: { mobile: number; password: string }): Promise<User> {\n    const user = await this.findByMobile(request.mobile);\n\n    if (!user) {\n      throw new HttpException('User not found', HttpStatus.UNAUTHORIZED);\n    }\n\n    // compare passwords\n    return bcrypt.compare(request.password, user.password).then((val) => {\n      if (!val) {\n        throw new HttpException('Invalid credentials', HttpStatus.UNAUTHORIZED);\n      }\n      user.flags.isLoggedIn = true;\n\n      return user;\n    });\n  }\n\n  deviceLogout(uuid: string, deviceId?: string) {\n    const user = this.userModel\n      .findOne({ uuid })\n      .exec()\n      .then((res) => {\n        res.devices?.forEach((dev) => {\n          if (dev?.id === deviceId) {\n            dev.isLoggedIn = false;\n          }\n        });\n\n        const deviceIsLoggedIn = (device) => device.isLoggedIn;\n\n        if (!res.devices?.some(deviceIsLoggedIn)) {\n          res.flags.isLoggedIn = false;\n        }\n\n        return res;\n      });\n\n    return this.userModel.findOneAndUpdate({ uuid }, user).exec();\n  }\n\n  async findAll(): Promise<User[]> {\n    // return this.userModel\n    // .find({ type:  'SUPER' })\n    // .populate('subscriptions')\n    // .exec();\n    return (\n      this.userModel\n        .find({ type: { $ne: 'STUDENT' } })\n        // .populate('subscriptions')\n        .exec()\n    );\n  }\n\n  async findAllStudents(): Promise<User[]> {\n    return (\n      this.userModel\n        .find({ type: 'STUDENT' })\n        // .populate('subscriptions')\n        .exec()\n    );\n  }\n\n  async findByMobile(mobile): Promise<User> {\n    return this.userModel.findOne({ mobile }).exec();\n  }\n\n  async findByEmail(email: string): Promise<User> {\n    return this.userModel.findOne({ email }).exec();\n  }\n\n  async viewSubscriptionsByUuid(uuid: string) {\n    return this.userModel\n      .aggregate([\n        { $match: { uuid: uuid } },\n        // { $match : {_id: new ObjectId(id)}},\n        { $unwind: '$subscriptions' },\n        {\n          $lookup: {\n            from: 'subscriptions',\n            let: {\n              subscription_id: '$subscriptions.subscription_id',\n              // subscription_id: \"$subscriptions._id\"\n            },\n            pipeline: [\n              {\n                $match: {\n                  $expr: { $eq: ['$_id', '$$subscription_id'] },\n                },\n              },\n              {\n                $project: {\n                  _id: 1,\n                  uuid: 1,\n                  title: 1,\n                  description: 1,\n                  order: 1,\n                  period: 1,\n                  createdOn: 1,\n                  flags: 1,\n                  actual: 1,\n                  discounted: 1,\n                  courses: 1,\n                  qbanks: 1,\n                  videos: 1,\n                  tests: 1,\n                },\n              },\n            ],\n            as: 'subscription',\n          },\n        },\n        { $unwind: '$subscription' },\n        {\n          $lookup: {\n            from: 'courses',\n            let: {\n              courses: '$subscription.courses',\n            },\n            pipeline: [\n              {\n                $match: {\n                  $expr: { $eq: ['$_id', '$$courses'] },\n                },\n              },\n              { $project: { _id: 1, title: 1, uuid: 1 } },\n            ],\n            as: 'subscriptions.course',\n          },\n        },\n\n        {\n          $unwind: {\n            path: '$subscriptions.course',\n            preserveNullAndEmptyArrays: true,\n          },\n        },\n        {\n          $lookup: {\n            from: 'qbanksubjects',\n            let: { qbanks: '$subscription.qbanks' },\n            pipeline: [\n              { $match: { $expr: { $in: ['$_id', '$$qbanks'] } } },\n              { $project: { syllabus: 1 } },\n              {\n                $lookup: {\n                  from: 'syllabuses',\n                  let: { syllabus: '$syllabus' },\n                  pipeline: [\n                    {\n                      $match: {\n                        $expr: { $eq: ['$_id', '$$syllabus'] },\n                      },\n                    },\n                    {\n                      $project: {\n                        _id: 1,\n                        title: 1,\n                        uuid: 1,\n                      },\n                    },\n                  ],\n                  as: 'syllabus',\n                },\n              },\n            ],\n            as: 'subscriptions.qbanks',\n          },\n        },\n        {\n          $unwind: { path: '$qbank', preserveNullAndEmptyArrays: true },\n        },\n\n        {\n          $lookup: {\n            from: 'videosubjects',\n            let: { videos: '$subscription.videos' },\n            pipeline: [\n              { $match: { $expr: { $in: ['$_id', '$$videos'] } } },\n              { $project: { syllabus: 1 } },\n              {\n                $lookup: {\n                  from: 'syllabuses',\n                  let: { syllabus: '$syllabus' },\n                  pipeline: [\n                    {\n                      $match: {\n                        $expr: { $eq: ['$_id', '$$syllabus'] },\n                      },\n                    },\n                    {\n                      $project: {\n                        _id: 1,\n                        title: 1,\n                        uuid: 1,\n                      },\n                    },\n                  ],\n                  as: 'syllabus',\n                },\n              },\n            ],\n            as: 'subscriptions.videos',\n          },\n        },\n        {\n          $unwind: { path: '$videos', preserveNullAndEmptyArrays: true },\n        },\n\n        {\n          $lookup: {\n            from: 'tscategories',\n            let: { tests: '$subscription.tests' },\n            pipeline: [\n              { $match: { $expr: { $in: ['$_id', '$$tests'] } } },\n              {\n                $project: {\n                  'categories.title': 1,\n                  'categories.uuid': 1,\n                  'categories.order': 1,\n                },\n              },\n            ],\n            as: 'subscriptions.tests',\n          },\n        },\n        {\n          $group: {\n            _id: {\n              _id: '$_id',\n              uuid: '$uuid',\n              name: '$name',\n              email: '$email',\n              mobile: '$mobile',\n            },\n            subscription: {\n              $addToSet: {\n                _id: '$subscriptions._id',\n                subscription_id: '$subscriptions.subscription_id',\n                uuid: '$subscriptions.uuid',\n                expiry_date: '$subscriptions.expiry_date',\n                active: '$subscriptions.active',\n                createdOn: '$subscriptions.createdOn',\n                title: '$subscription.title',\n                description: '$subscription.description',\n                order: '$subscription.order',\n                period: '$subscription.period',\n                actual: '$subscription.actual',\n                discounted: '$subscription.discounted',\n                flags: '$subscription.flags',\n                course: '$subscriptions.course',\n                qbanks: '$subscriptions.qbanks',\n                videos: '$subscriptions.videos',\n                tests: '$subscriptions.tests',\n              },\n            },\n          },\n        },\n        {\n          $project: {\n            _id: '$_id._id',\n            uuid: '$_id.uuid',\n            name: '$_id.name',\n            email: '$_id.email',\n            mobile: '$_id.mobile',\n            subscription: '$subscription',\n          },\n        },\n      ])\n      .exec();\n\n    // return await this.userModel.findOne({ uuid })\n    //   .populate(\n    //     {\n    //       path: 'subscriptions',\n    //       select: '_id uuid title courses videos tests qbanks createdOn order',\n    //       // deep population method\n    //       populate: {\n    //         path: 'courses videos qbanks tests',\n    //         select: {\n    //           '_id ': 1,\n    //           'uuid': 1,\n    //           'title': 1,\n    //           // 'syllabus': 1,\n    //         },\n    //         // populate: {\n    //         //   path: 'syllabus',\n    //         //   select: 'title',\n    //         // }\n    //       },\n    //     }\n    //   )\n    //   .exec();\n  }\n\n  async findByUuid(uuid: string) {\n    return await this.userModel\n      .findOne({ uuid })\n      // .populate(\n      //   {\n      //     path: 'subscriptions',\n      //     select: '_id uuid title courses videos tests qbanks createdOn order',\n      //     // deep population method\n      //     populate: {\n      //       path: 'courses videos qbanks tests',\n      //       select: {\n      //         '_id ': 1,\n      //         'uuid': 1,\n      //         'title': 1,\n      //         // 'syllabus': 1,\n      //       },\n      //       // populate: {\n      //       //   path: 'syllabus',\n      //       //   select: 'title',\n      //       // }\n      //     },\n      //   }\n      // )\n      .exec();\n  }\n\n  async searchByMobile(request) {\n    // console.log('requestrequestrequest', request);\n\n    return await this.userModel.find({ mobile: request.mobile }).exec();\n  }\n\n  async deleteByUuid(uuid: string) {\n    return this.userModel.findOneAndDelete({ uuid }).exec();\n  }\n\n  async changePassword(\n    uuid: string,\n    oldPassword: string,\n    newPassword: string\n  ): Promise<{ message: string; result: User }> {\n    const hashOldPassword = await bcrypt.hash(oldPassword, 10);\n    const hashNewPassword = await bcrypt.hash(newPassword, 10);\n\n    const user = await this.userModel.findOne({ uuid });\n\n    if (user) {\n      return bcrypt.compare(oldPassword, user.password).then((val) => {\n        if (val) {\n          return this.userModel\n            .findOneAndUpdate({ uuid }, { password: hashNewPassword })\n            .exec()\n            .then((result) => {\n              return { message: 'Password reset success!!', result };\n            });\n        } else {\n          throw new HttpException(\n            'Old Password Validation Failed. Please try again.',\n            HttpStatus.UNAUTHORIZED\n          );\n        }\n      });\n    } else {\n      throw new HttpException('User not found', HttpStatus.UNAUTHORIZED);\n    }\n  }\n\n  async resetPassword(\n    uuid: string,\n    newPassword: string\n  ): Promise<{ message: string; result: User }> {\n    const hashNewPassword = await bcrypt.hash(newPassword, 10);\n    const user = await this.userModel.findOne({ uuid });\n    if (user) {\n      return this.userModel\n        .findOneAndUpdate({ uuid }, { password: hashNewPassword })\n        .exec()\n        .then((result) => {\n          return { message: 'Password reset success!!', result };\n        });\n    } else {\n      throw new HttpException('User not found', HttpStatus.UNAUTHORIZED);\n    }\n  }\n\n  async addOrganizationByUserUuid(uuid: string, request: any): Promise<User> {\n    return this.userModel.findOneAndUpdate({ uuid }, request).exec();\n  }\n\n  async assignSubscriptionsByUserUuid(uuid: string, request: any) {\n    var result = this.userModel.findOneAndUpdate({ uuid }, request).exec();\n\n    //let subscriptions=request.subscriptions;\n\n    return result;\n  }\n\n  // async deleteOrganizationByUserUuid(\n  //   uuid: string,\n  //   orgUuid: string\n  // ): Promise<User> {\n  //   return this.userModel\n  //     .update({}, { $pull: { organizations: { uuid: orgUuid } } })\n  //     .exec();\n  // }\n\n  async editByUuid(uuid: string, request: any): Promise<User> {\n    return this.userModel.findOneAndUpdate({ uuid }, request).exec();\n  }\n\n  async clearSubscrptions(uuid: string): Promise<User> {\n    return this.userModel\n      .findOneAndUpdate(\n        { uuid },\n        { qbanks: [], tests: [], videos: [], subscriptions: [] }\n      )\n      .exec();\n  }\n\n  // async fetchCouponsBysubscriptions(\n  //   UserId: string[], subscription_id: string): Promise<any>  {\n\n  //     const subscription = this.subscriptionModel.findOne({_id: new ObjectId(subscription_id)}).exec();\n\n  //     const specificCoupons =  this.coupon.find({\n  //       $or:[\n  //           { users      : {$in:UserId}},\n  //           { couponType : 'allUsers' },\n  //           { couponType : 'users' },\n  //           { valiedFrom :{$lte:new Date()}},\n  //           { valiedTo :{$gte:new Date()} }\n  //         ],\n  //       subscription: subscription_id,\n  //       availableCoupons: { $gt: 0 },\n  //       agent:null,\n  //       'flags.active':true,\n  //     }).exec();\n\n  //   return specificCoupons;\n  // }\n  async fetchCouponsBysubscriptions(\n    UserId: string[],\n    subscription_id: string\n  ): Promise<any> {\n    let datee = new Date();\n    let today = datee.getTime();\n\n    const specificCoupons = this.coupon\n      .find({\n        $or: [{ users: { $in: UserId } }, { couponType: 'allUsers' }],\n        valiedFrom: { $lte: new Date(today) },\n        valiedTo: { $gte: new Date(today) },\n        subscription: subscription_id,\n        availableCoupons: { $gt: 0 },\n        agent: null,\n        'flags.active': true,\n      })\n      .exec();\n\n    return specificCoupons;\n  }\n\n  async fetchAgentCouponsBysubscriptions(\n    subscription_id: string\n  ): Promise<any> {\n    let datee = new Date();\n    let today = datee.getTime();\n\n    const specificCoupons = this.coupon\n      .find({\n        $or: [{ couponType: 'agent' }],\n        valiedFrom: { $lte: new Date(today) },\n        valiedTo: { $gte: new Date(today) },\n        subscription: subscription_id,\n        availableCoupons: { $gt: 0 },\n        // agent:null,\n        'flags.active': true,\n      })\n      .exec();\n\n    return specificCoupons;\n  }\n\n  async getTransactionsDateFilter(transactionsInterface, employee) {\n    var fffdatetime = new Date(transactionsInterface.fromDate);\n    let fdatetime = new Date(fffdatetime.getTime() + 5.5 * 60 * 60 * 1000);\n\n    var fmonth = fdatetime.getMonth() + 1;\n    var fday = fdatetime.getDate();\n    var fyear = fdatetime.getFullYear();\n    var fdateTimeString = fyear + '-' + fmonth + '-' + fday;\n    let ftimee = new Date(fdateTimeString);\n    let ftime = new Date(ftimee).setUTCHours(0, 0, 0, 0);\n    // let fromDate = ftime.getTime() + (5.5 * 60 * 60 * 1000)\n\n    var ttimeeeee = new Date(transactionsInterface.toDate);\n    var tdatetime = new Date(ttimeeeee.getTime() + 5.5 * 60 * 60 * 1000);\n    var tmonth = tdatetime.getMonth() + 1;\n    var tday = tdatetime.getDate();\n    var tyear = tdatetime.getFullYear();\n    var tdateTimeString = tyear + '-' + tmonth + '-' + tday;\n    let ttimee = new Date(tdateTimeString);\n\n    let ttime = new Date(ttimee).setUTCHours(23, 59, 59, 999);\n    // let toDate = ttime.getTime() + (5.5 * 60 * 60 * 1000)\n\n    console.log('fromDate', new Date(ftime));\n    console.log('toDate', new Date(ttime));\n\n    const coursesList = await this.getEmployeeCourses(employee);\n\n    console.log('coursesList', coursesList);\n\n    return this.userModel\n      .find(\n        {\n          createdOn: {\n            $gte: new Date(ftime),\n            $lte: new Date(ttime),\n          },\n          courses: { $in: coursesList },\n        },\n        {\n          _id: 1,\n          uuid: 1,\n          name: 1,\n          email: 1,\n          mobile: 1,\n          createdOn: 1,\n          flags: 1,\n          accessToken: 1,\n          otp: 1,\n          subscriptions: 1,\n        }\n      )\n      .sort({ createdOn: 'DESC' })\n      .exec();\n\n    // return this.userModel\n    //   .aggregate([\n    //     {\n    //       $match: {\n    //         \"createdOn\": {\n    //           $gte: new Date(ftime),\n    //           $lte: new Date(ttime)\n    //         },\n    //         // \"courses\": { $in: coursesList }\n    //       }\n    //     },\n    //     {  $unwind: { path: '$subscriptions', preserveNullAndEmptyArrays: true } },\n    //     {\n    //       $lookup: {\n    //         from: 'subscriptions',\n    //         let: {\n    //           subscription_id: \"$subscriptions.subscription_id\"\n    //         },\n    //         pipeline: [{\n    //           $match: {\n    //             $expr: { $eq: [\"$_id\", \"$$subscription_id\"] }\n    //           }\n    //         },\n    //         {\n    //           $project: {\n    //             _id: 1,\n    //             uuid: 1,\n    //             title: 1,\n    //           }\n    //         }\n    //         ],\n    //         as: 'subscription'\n    //       }\n    //     },\n\n    //     {\n    //       $group: {\n\n    //         _id: {\n    //           _id: \"$_id\",\n    //           uuid: \"$uuid\",\n    //           name: \"$name\",\n    //           email: \"$email\",\n    //           mobile: \"$mobile\",\n    //           createdOn:\"$createdOn\",\n    //           flags:\"$flags\",\n    //           accessToken:\"$accessToken\",\n    //           otp:\"$otp\"\n    //         },\n    //         subscription: {\n    //           $addToSet: {\n    //             \"_id\": \"$subscriptions._id\",\n    //             \"subscription_id\": \"$subscriptions.subscription_id\",\n    //             \"uuid\": \"$subscriptions.uuid\",\n    //             \"expiry_date\": \"$subscriptions.expiry_date\",\n    //             \"active\": \"$subscriptions.active\",\n    //             \"createdOn\": \"$subscriptions.createdOn\",\n    //             \"title\": \"$subscription.title\"\n    //           }\n    //         },\n    //       }\n    //     },\n    //     {\n    //       $project: {\n    //         \"_id\": '$_id._id',\n    //         \"uuid\": '$_id.uuid',\n    //         \"name\": '$_id.name',\n    //         \"email\": '$_id.email',\n    //         \"mobile\": '$_id.mobile',\n    //         \"createdOn\":\"$_id.createdOn\",\n    //         \"flags\":\"$_id.flags\",\n    //         \"accessToken\":\"$_id.accessToken\",\n    //         \"otp\":\"$_id.otp\",\n    //         \"subscriptions\": \"$subscription\",\n    //       }\n    //     }\n    //   ]).exec()\n  }\n\n  async disableUserForTestSubmits(resuest) {\n    const disableuserfortestsubmits = new this.disableuserfortestsubmitsModel(\n      resuest\n    );\n    return disableuserfortestsubmits.save();\n  }\n  async disableUserForTestSubmitsList() {\n    return this.disableuserfortestsubmitsModel.find();\n  }\n\n  async disableUserForTestSubmitStatus(id, request) {\n    if (request.type == 'subscription') {\n      return this.disableuserfortestsubmitsModel\n        .findOneAndUpdate(\n          { _id: id },\n          {\n            subscription: request.status,\n          }\n        )\n        .exec();\n    } else if (request.type == 'showInActiveCourses') {\n      return this.disableuserfortestsubmitsModel\n        .findOneAndUpdate(\n          { _id: id },\n          {\n            showInActiveCourses: request.status,\n          }\n        )\n        .exec();\n    } else if (request.type == 'submission') {\n      return this.disableuserfortestsubmitsModel\n        .findOneAndUpdate(\n          { _id: id },\n          {\n            submission: request.status,\n          }\n        )\n        .exec();\n    } else if (request.type == 'status') {\n      return this.disableuserfortestsubmitsModel\n        .findOneAndUpdate(\n          { _id: id },\n          {\n            status: request.status,\n          }\n        )\n        .exec();\n    }\n  }\n\n  async disableUserForTestSubmitDelete(uuid) {\n    return this.disableuserfortestsubmitsModel\n      .findOneAndDelete({ uuid })\n      .exec();\n  }\n\n  async copyUsersToAnotherDatabase(body) {\n    var mongoose = require('mongoose');\n    var conn1 = mongoose.createConnection(\n      'URL',\n      {\n        useNewUrlParser: true,\n        useFindAndModify: true,\n        useCreateIndex: true,\n        useUnifiedTopology: true,\n      }\n    );\n    var conn2 = mongoose.createConnection(\n      'URL',\n      {\n        useNewUrlParser: true,\n        useFindAndModify: false,\n        useCreateIndex: true,\n        useUnifiedTopology: true,\n      }\n    );\n\n    const UserFirst = conn1.model(\n      'User',\n      new mongoose.Schema({}, { collection: `users`, strict: false })\n    );\n    const UserSecond = conn2.model(\n      'User',\n      new mongoose.Schema({}, { collection: `users`, strict: false })\n    );\n\n    const qbankfirst = conn1.model(\n      'SubmittedQBankTopic',\n      new mongoose.Schema(\n        {},\n        { collection: `submittedqbanktopics`, strict: false }\n      )\n    );\n    const qbankSecond = conn2.model(\n      'SubmittedQBankTopic',\n      new mongoose.Schema(\n        {},\n        { collection: `submittedqbanktopics`, strict: false }\n      )\n    );\n\n    const testSeriesFirst = conn1.model(\n      'SubmittedTest',\n      new mongoose.Schema({}, { collection: `submittedtests`, strict: false })\n    );\n    const testSeriesSecond = conn2.model(\n      'SubmittedTest',\n      new mongoose.Schema({}, { collection: `submittedtests`, strict: false })\n    );\n\n    var result = [];\n    if (body.type == 'mobile') {\n      result = await UserFirst.find({ mobile: body.mobile }).exec();\n    } else if (body.type == 'course') {\n      result = await UserFirst.find({\n        courses: mongoose.Types.ObjectId(body.course),\n      }).exec();\n    }\n    // console.log(\"Total Users \"+ result.length);\n\n    var UserCount = 1;\n    result.forEach(async (elements) => {\n      var element = elements.toObject();\n\n      // Copy Users Data Into Another Database\n      var check = await UserSecond.findOne({ mobile: element.mobile }).exec();\n      if (check) {\n        var uuid = element.uuid;\n        await UserSecond.findOneAndUpdate({ uuid }, element, {\n          useFindAndModify: false,\n        }).exec();\n        console.log('User updated');\n      } else {\n        let swap = new UserSecond(element); //or result.toObject\n        await swap.save();\n      }\n\n      // Copy Users Tests Data Into Another DataBase\n      await testSeriesFirst.find({ userId: element._id }, function (\n        err,\n        testresult\n      ) {\n        console.log('Test Count' + testresult.length);\n        var count = 1;\n        testresult.forEach(async (testelements) => {\n          var testelement = testelements.toObject();\n          var check = await testSeriesSecond\n            .findOne({ _id: testelement._id })\n            .exec();\n          if (check) {\n            var uuid = testelement.uuid;\n            delete testelement._id;\n            await testSeriesSecond\n              .findOneAndUpdate({ uuid }, testelement, {\n                useFindAndModify: false,\n              })\n              .exec();\n            console.log('Test updated ' + count);\n          } else {\n            let swap = new testSeriesSecond(testelement); //or result.toObject\n            await swap.save();\n          }\n          count = count + 1;\n          testelements.remove();\n        });\n      });\n\n      //Copy Users Qbank From One Database To another Database\n      await qbankfirst.find({ userId: element._id }, function (\n        err,\n        qbankresult\n      ) {\n        console.log('Qbank Count ' + qbankresult.length);\n        var countqbank = 1;\n        qbankresult.forEach(async (qbankelements) => {\n          var qbankelement = qbankelements.toObject();\n          var check = await qbankSecond\n            .findOne({ _id: qbankelement._id })\n            .exec();\n          if (check) {\n            var uuid = qbankelement.uuid;\n            delete qbankelement._id;\n            await qbankSecond\n              .findOneAndUpdate({ uuid }, qbankelement, {\n                useFindAndModify: false,\n              })\n              .exec();\n            console.log('Qbank updated ' + countqbank);\n          } else {\n            let swap = new qbankSecond(qbankelement); //or result.toObject\n            await swap.save();\n          }\n          countqbank = countqbank + 1;\n          qbankelements.remove();\n        });\n      });\n      elements.remove();\n      console.log('User Copied ' + UserCount);\n      UserCount = UserCount + 1;\n    });\n    return [];\n  }\n  // async getTransactionsDateFilter(transactionsInterface) {\n  //   let fromDate = transactionsInterface.fromDate;\n  //   let toDate = transactionsInterface.toDate;\n  //   return this.userModel.find({\n  //     createdOn: {\n  //       $gte:fromDate,\n  //       $lte: toDate\n  //     }\n  //   })\n  //   .exec();\n\n  // }\n\n  async fetchUsersSubmittedData(body) {\n    var userId = body.userId;\n    const user = await this.userModel\n      .findOne(\n        { _id: mongoose.Types.ObjectId(userId) },\n        {\n          courses: 1,\n          uuid: 1,\n        }\n      )\n      .exec();\n\n    var qbanksubmission = await this.submittedQBankTopic\n      .aggregate([\n        {\n          $match: {\n            userId: mongoose.Types.ObjectId(userId),\n          },\n        },\n        {\n          $lookup: {\n            from: 'courses',\n            let: { courseId: '$courseId' },\n            pipeline: [\n              { $match: { $expr: { $eq: ['$_id', '$$courseId'] } } },\n              { $project: { title: 1 } },\n            ],\n            as: 'courses',\n          },\n        },\n        {\n          $project: {\n            qbankTopicUuid: 1,\n            subjectId: 1,\n            courseId: 1,\n            courses: 1,\n          },\n        },\n      ])\n      .exec();\n\n    var qbankdata = [];\n\n    for (let index = 0; index < qbanksubmission.length; index++) {\n      const element = qbanksubmission[index];\n\n      var singleSubjectData = null;\n      var Qbank = await this.qBankSubjectmodel\n        .aggregate([\n          { $match: { 'chapters.topics.uuid': element.qbankTopicUuid } },\n          { $unwind: '$chapters' },\n          {\n            $addFields: {\n              'chapters.topics': {\n                $filter: {\n                  input: '$chapters.topics',\n                  cond: { $eq: ['$$this.uuid', element.qbankTopicUuid] },\n                },\n              },\n            },\n          },\n          {\n            $project: {\n              'chapters.uuid': 1,\n              'chapters.title': 1,\n              'chapters.topics.title': 1,\n              'chapters.topics.uuid': 1,\n              'chapters.topics.description': 1,\n            },\n          },\n        ])\n        .exec()\n        .then(async (res) => {\n          let totalres = res.filter((it) => it.chapters.topics.length > 0)[0]\n            .chapters.topics[0];\n          let res2 = res.filter((it) => it.chapters.topics.length > 0)[0]\n            .chapters;\n          if (res2) {\n            totalres['chapter_uuid'] = res2.uuid;\n            totalres['chapter_title'] = res2.title;\n          }\n          return totalres;\n        })\n        .catch((err) => err);\n      singleSubjectData = {\n        _id: element._id,\n        courseId: element.courseId,\n        qbankTopicUuid: element.qbankTopicUuid,\n        subjectId: element.subjectId,\n        courses: element.courses,\n        Qbank: Qbank,\n      };\n      qbankdata.push(singleSubjectData);\n    }\n\n    return { qbank_data: qbankdata, test_series: [] };\n  }\n\n  async fetchUsersSubmittedTests(body) {\n    var userId = body.userId;\n    var testseriesData = [];\n    const userTestSubmission = await this.submittedTest\n      .aggregate([\n        { $match: { userId: mongoose.Types.ObjectId(userId) } },\n        {\n          $lookup: {\n            from: 'courses',\n            let: { courseId: '$courseId' },\n            pipeline: [\n              { $match: { $expr: { $eq: ['$_id', '$$courseId'] } } },\n              { $project: { title: 1 } },\n            ],\n            as: 'courses',\n          },\n        },\n        {\n          $project: {\n            testSeriesUuid: 1,\n            courseId: 1,\n            subjectId: 1,\n            categoryUuid: 1,\n            courses: 1,\n          },\n        },\n      ])\n      .exec();\n\n    for (\n      let indexTest = 0;\n      indexTest < userTestSubmission.length;\n      indexTest++\n    ) {\n      const elementTest = userTestSubmission[indexTest];\n      var singletesttData = null;\n\n      var testSeries = await this.TSCategoriesModel.aggregate([\n        {\n          $match: {\n            uuid: elementTest.categoryUuid,\n            'categories.tests.uuid': elementTest.testSeriesUuid,\n          },\n        },\n        { $unwind: '$categories' },\n        {\n          $addFields: {\n            'categories.tests': {\n              $filter: {\n                input: '$categories.tests',\n                cond: { $eq: ['$$this.uuid', elementTest.testSeriesUuid] },\n              },\n            },\n          },\n        },\n        {\n          $project: {\n            uuid: 1,\n            'categories.uuid': 1,\n            'categories.title': 1,\n            'categories.tests.title': 1,\n            'categories.tests.uuid': 1,\n            'categories.tests.subjects': 1,\n            'categories.tests.description': 1,\n          },\n        },\n      ])\n        .exec()\n        .then(async (res) => {\n          // return res[0];\n          var totalres = res[0].categories.tests[0];\n          // let totalres = res.filter(it => it.chapters.topics.length > 0)[0].chapters.topics[0];\n\n          totalres['categorie_uuid'] = res[0].uuid;\n          totalres['categorie_title'] = res[0].categories.title;\n          return totalres;\n        })\n        .catch((err) => err);\n      singletesttData = {\n        _id: elementTest._id,\n        courseId: elementTest.courseId,\n        testSeriesUuid: elementTest.testSeriesUuid,\n        subjectId: elementTest.subjectId,\n        courses: elementTest.courses,\n        categoryUuid: elementTest.categoryUuid,\n        testSeries: testSeries,\n      };\n      testseriesData.push(singletesttData);\n    }\n\n    return { test_series: testseriesData };\n  }\n  async inActiveUsers(): Promise<User[]> {\n    return await this.userModel\n      .find(\n        { 'flags.isActive': false },\n        {\n          name: 1,\n          mobile: 1,\n          type: 1,\n          uuid: 1,\n          createdOn: 1,\n          flags: 1,\n          accessToken: 1,\n          email: 1,\n        }\n      )\n      .exec();\n  }\n}\n","import { HttpService, Injectable } from '@nestjs/common';\nimport { AxiosResponse } from 'axios'\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class VideoCipherService {\n\n  constructor(private httpService: HttpService) {}\n\n  findAll(query): Observable<AxiosResponse<any>> {\n    console.log({ query });\n\n    return this.httpService.get(`https://dev.vdocipher.com/api/videos?page=${query.page}&limit=${query.limit}&tags=${query.tags}`);\n  }\n\n}\n","import { VideoInterface } from '@application/api-interfaces';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateQBankDTO, CreateQBankSubjectDto, CreateSyllabusDto, CreateVideoDTO, CreateVideoSubjectDto } from '../dto';\nimport { Course, Syllabus, Video, VideoSubject } from '../schema';\n\n@Injectable()\nexport class VideoSubjectService {\n\n  constructor(\n    @InjectModel('Course') private courseModel: Model<Course>,\n    @InjectModel('VideoSubject') private videoSubjectModel: Model<VideoSubject>,\n    @InjectModel('Syllabus') private syllabusModel: Model<Syllabus>,\n  ) { }\n\n  // async findAll(): Promise<VideoSubject[]> {\n  //   // return this.videoSubjectModel\n  //   //   .find()\n  //   //   .populate('courses')\n  //   //   .exec();\n  //   const result = await this.videoSubjectModel\n  //     // return await this.videoSubjectModel\n  //     .find(\n  //       {\n  //         // 'flags.active': true,\n  //       }, {\n  //       \"uuid\": 1,\n  //       //  \"title\":1,\n  //       \"imgUrl\": 1,\n  //       \"order\": 1,\n  //       //\"chapters\":1,\n  //       \"count\": 1,\n  //       \"chapters\": 1,\n  //       \"createdOn\": 1,\n  //       \"modifiedOn\": 1,\n  //       //\"createdBy\":1,\n  //       \"flags\": 1\n  //     }).\n  //     populate({\n  //       path: 'courses',\n  //       match: {\n  //         // \"flags.qBank\": true ,\n  //         // \"flags.videos\": true ,\n  //         // 'flags.active': true\n  //       },\n  //       select: {\n  //         \"uuid\": 1,\n  //         \"title\": 1,\n  //         \"order\": 1,\n  //         // \"imgUrl\":1,\n  //         // \"flags\":1,\n  //         \"shortcut\": 1,\n  //       }\n  //     }).\n  //     sort({ order: 'ASC' })\n  //     .populate({\n  //       path: 'syllabus',\n  //       match: {\n  //         \"type\": \"SUBJECT\",\n  //         //\"flags.questionBank\": true ,\n  //         // 'flags.active': true\n  //       },\n  //       select: {\n  //         \"uuid\": 1,\n  //         \"title\": 1,\n  //         \"type\": 1,\n  //         \"order\": 1,\n  //         //\"shortcut\":1,\n  //         \"imgUrlVideos\": 1,\n  //         \"suggestedBanner\": 1,\n  //       }\n  //     }).exec()\n  //     .then(async res => {\n  //       if (res != undefined) {\n  //         for (var i = 0; i < res.length; i++) {\n  //           var array = res[i].chapters;\n\n  //           for (var j = 0; j < array.length; j++) {\n  //             let name = '';\n  //             var obj = await this.syllabusModel.findOne({ \"_id\": res[i].chapters[j]._id }, { title: 1 }).sort({ order: 'ASC' }).exec();\n\n  //             if (obj) {\n  //               name = obj.title;\n  //             }\n  //             res[i].chapters[j]['title'] = name;\n  //           }\n  //         }\n  //       }\n  //       return res;\n  //     })\n  //     .catch(err => err);\n  //   return result;\n  // }\n\n  async findAll(employee): Promise<VideoSubject[]> {\n    const courseListIds = [];\n    const empCourses = await this.courseModel.find({organizations:{$in:employee.organizations}},{_id:true})\n    empCourses.forEach(element => {\n      courseListIds.push(element._id)\n    });\n\n    return this.videoSubjectModel.find({courses:{$in:courseListIds}},{uuid:1,syllabus:1,flags:1,courses:1,count:1,order:1,createdOn:1})\n    .populate({\n      path: 'syllabus',\n      select: {\n        \"_id\": 1,\n        \"uuid\": 1,\n        \"title\": 1,\n      }\n    })\n    .populate({\n      path: 'courses',\n      select: {\n        \"_id\": 1,\n        \"uuid\": 1,\n        \"title\": 1,\n      }\n    })\n    .sort({order:'ASC'})\n    .exec()\n  }\n\n  // async findAll(): Promise<VideoSubject[]> {\n\n  //   const result = this.videoSubjectModel.aggregate([\n  //     {\n  //       $lookup: // Equality Match\n  //       {\n  //         from: \"syllabuses\",\n  //         localField: \"syllabus\",\n  //         foreignField: \"_id\",\n  //         as: \"syllabus\",\n  //       },\n  //     },\n\n  //     { $unwind: \"$syllabus\" },\n\n  //     {\n  //       $lookup: // Equality Match\n  //       {\n  //         from: \"courses\",\n  //         localField: \"courses\",\n  //         foreignField: \"_id\",\n  //         as: \"courses\",\n  //       },\n  //     },\n\n  //     { $unwind: \"$courses\" },\n\n  //     {\n  //       $group: {\n  //         _id: {\n  //           _id: \"$_id\",\n  //           uuid: \"$uuid\",\n  //           imgUrl: \"$imgUrl\",\n  //           count: \"$count\",\n  //           order: \"$order\",\n  //           createdOn: \"$createdOn\",\n  //           modifiedOn: \"$modifiedOn\",\n  //           createdBy: \"$createdBy\",\n  //           flags: \"$flags\",\n  //           chapters: \"$chapters\",\n  //           syllabus: \"$syllabus\",\n  //           courses: \"$courses\",\n  //           //likes: 1,\n  //         },\n  //       },\n\n  //     },\n\n\n  //     {\n  //       $project: {\n  //         \"_id\": \"$_id._id\",\n  //         \"uuid\": \"$_id.uuid\",\n  //         \"imgUrl\": \"$_id.imgUrl\",\n  //         \"count\": \"$_id.count\",\n  //         \"order\": \"$_id.order\",\n  //         \"createdOn\": \"$_id.createdOn\",\n  //         \"modifiedOn\": \"$_id.modifiedOn\",\n  //         \"createdBy\": \"$_id.createdBy\",\n  //         \"flags\": \"$_id.flags\",\n  //         \"chapters\": \"$_id.chapters\",\n  //         \"syllabus\": \"$_id.syllabus\",\n  //         \"courses\": \"$_id.courses\",\n\n\n  //       }\n  //     },\n  //    // { \"$sort\" : { \"order\" : -1}}\n  //    ])\n  //     // .sort({ order: 1 })\n  //     .exec();\n\n  //   return result;\n  // }\n\n  async findByUuid(uuid: string): Promise<VideoSubject> {\n    // return this.videoSubjectModel.findOne({ uuid })\n    // .populate('courses')\n    // .exec();\n    var result = await this.videoSubjectModel.findOne({ uuid }, { courses: 1, syllabus: 1, chapters: 1, _id: 1, uuid: 1, title: 1, imgUrl: 1, order: 1, flags: 1, count: 1, createdOn: 1, createdBy: 1 })\n      .exec().then(async res => {\n        //let cuuid='';\n        var qbcourse;\n        var qbsyllabus;\n        if (res != undefined) {\n          qbcourse = await this.courseModel.findOne({ '_id': res.courses }, { _id: 1, uuid: 1, title: 1 })\n            .populate({\n              path: 'syllabus',\n\n              select: {\n                \"uuid\": 1,\n                \"title\": 1,\n                \"_id\": 1,\n\n\n              }\n            }).exec();\n          qbsyllabus = await this.syllabusModel.findOne({ '_id': res.syllabus }, { _id: 1, uuid: 1, title: 1 })\n            .populate({\n              path: 'children',\n              math: {\n                \"type\": \"CHAPTER\",\n                //\"flags.active\":true,\n              },\n\n              select: {\n                \"uuid\": 1,\n                \"title\": 1,\n                \"_id\": 1,\n\n\n              }\n            }).exec();\n          //return await this.syllabusModel.findOne({ '_id': res.syllabus },{ _id:1,uuid:1,title: 1}).exec().then( async ssres => {\n          //})\n          /*.populate({\n            path: 'syllabus',\n        \n            select:{\n              \"uuid\":1,\n              \"title\":1,\n              \"_id\":1,\n              popolate:{\n                path: 'children',\n        \n                select:{\n                  \"uuid\":1,\n                  \"title\":1,\n                  \"_id\":1,\n                }\n              }*/\n\n\n          // }\n          //}).exec();\n          //  qbcourse =await this.courseModel.findOne({ '_id': res.courses }, {  _id:1,uuid:1,title: 1 }) .exec();\n          //  qbsyllabus =await this.syllabusModel.findOne({ '_id': res.syllabus }, {  _id:1,uuid:1,title: 1,children:1 }) .exec();\n          // cuuid=course.uuid;\n          //console.log(cuuid);\n          res.courses = qbcourse;\n          res.syllabus = qbsyllabus;\n\n          var array = res.chapters;\n          res.chapters.sort((a, b) => (a.order > b.order) ? 1 : -1);\n          for (var j = 0; j < array.length; j++) {\n            let name = '';\n            var obj = await this.syllabusModel.findOne({ \"_id\": res.chapters[j]._id }, { title: 1 }).exec();\n\n            if (obj) {\n              name = obj.title;\n            }\n            let videos = [];\n            videos = res.chapters[j].videos;\n            res.chapters[j]['title'] = name;\n            res.chapters[j]['count'] = res.chapters[j].videos.length\n            res.chapters[j]['videos'] = videos.sort((a, b) => (a.order > b.order) ? 1 : -1);\n            /* for(var k =0;k< res.chapters[j].topics.length;k++){\n               for(var l =0;l< res.chapters[j].topics[k].que.length;l++){\n\n                 var  questionsData= await this.questionModel.findOne({\"_id\": res.chapters[j].topics[k].que[l]._id,\n                 'flags.qBank':true\n               },{\n                   options:1,\n                   title:1,\n                 }\n                 ).exec();\n                   if(questionsData){\n                     res.chapters[j].topics[k].que[l]['options'] = questionsData.options;\n                     res.chapters[j].topics[k].que[l]['title'] = questionsData.title;\n                   }\n               }\n               res.chapters[j].topics[k]['count'] = res.chapters[j].topics[k].que.length\n             }*/\n          }\n        }\n        return res;\n      })\n      .catch(err => err);;\n    return result;\n  }\n\n  async findByCourse(courseId: string): Promise<any> {\n\n    let sub = [];\n    return this.videoSubjectModel\n      .find({ courses: courseId }, { _id: 1, uuid: 1 })\n      .populate({\n        path: 'syllabus',\n        select: {\n          \"title\": 1,\n        }\n      }).exec()\n      .then(result => {\n        result.forEach(syl => {\n          let new_syl: any = syl.syllabus;\n          sub.push(\n            {\n              \"_id\": syl._id,\n              \"uuid\": syl.uuid,\n              \"title\": new_syl.title,\n            }\n          )\n        })\n        return sub;\n      })\n\n  }\n\n  async findSubjectsByCoueseIds(coursesarr: any): Promise<any> {\n    let sub = [];\n    return this.videoSubjectModel\n      .find({ courses: { $in: coursesarr } }, { _id: 1, uuid: 1 })\n      .populate({\n        path: 'courses',\n        select: {\n          \"title\": 1\n        }\n      })\n      .populate({\n        path: 'syllabus',\n        select: {\n          \"uuid\": 1,\n          \"title\": 1,\n          \"_id\": 1,\n\n        }\n      }).exec()\n      .then(result => {\n        result.forEach(syl => {\n          let new_syl: any = syl.syllabus;\n          let new_courses: any = syl.courses;\n          sub.push(\n            {\n              \"_id\": syl._id,\n              \"uuid\": syl.uuid,\n              \"title\": new_syl.title,\n              \"course_name\": new_courses.title,\n              \"course_id\": new_courses._id\n            }\n          )\n        })\n        return sub;\n      })\n\n  }\n\n\n  async deleteByUuid(uuid: string) {\n\n    // this.findCategoryByUuid(uuid).then(result => {\n    // result.children.forEach(child => {\n    //   if(child){\n    //     this.videoSubjectModel.findByIdAndUpdate(\n    //       {_id: child},\n    //       { $pull: { parents: result._id } }\n    //     ).exec();\n    //   }\n    // });\n    // result.parents.forEach(parent => {\n    //   if(parent){\n    //     this.videoSubjectModel.findByIdAndUpdate(\n    //       {_id: parent},\n    //       { $pull: { children: result._id } }\n    //     ).exec();\n    //   }\n    // });\n\n    // });\n\n    return this.videoSubjectModel.findOneAndDelete({ uuid }).exec();\n\n  }\n\n  async create(createQBankSubjectDTO: CreateVideoSubjectDto): Promise<VideoSubject> {\n    const createdQBankSubject = new this.videoSubjectModel(createQBankSubjectDTO);\n\n    // const createSyllabusDto: CreateSyllabusDto = {\n    //   uuid: createdQBankSubject.uuid,\n    //   title: createdQBankSubject.title,\n    //   order: createdQBankSubject.order,\n    //   imgUrlVideos: 'url',\n    //   suggestedBanner: '',\n    //   imgUrlQBank: '',\n    //   parents: null,\n    //   children: null,\n    //   createdOn: new Date(),\n    //   flags: {\n    //     active: true,\n    //     editable: true,\n    //     testSeries: false,\n    //     videos: true,\n    //     materials: false,\n    //     flashCards: false,\n    //     questionBank: false,\n    //     mcq: false,\n    //     suggested: false,\n    //   },\n    //   createdBy: createdQBankSubject.createdBy,\n    //   type: 'SUBJECT',\n    //   shortcut: 'test'\n    // };\n    // const createdSyllabus = new this.syllabusModel(createSyllabusDto);\n    // await createdSyllabus.save();\n    const result = createdQBankSubject.save();\n    return result;\n\n  }\n\n  async editByUuid(request: VideoInterface): Promise<VideoSubject> {\n    const result =await this.videoSubjectModel.findOneAndUpdate(\n      { uuid: request.uuid },\n      request\n    ).exec();\n    return result;\n\n    /////////****** For All videos free    *******///////////\n\n    // result.chapters.map(res=>{\n    //   res.videos.map(vid=>{\n    //      vid.flags.paid=false;\n    //      console.log('vid8978',vid);\n    //      this.videoSubjectModel\n    //      .findOneAndUpdate(\n    //        {\n    //          uuid: result.uuid\n    //        },\n    //        {\n    //          $set: {\n    //            \"chapters.$[elem].videos.$[elem1]\": vid,\n    //          }\n    //          // $inc : { 'count' : 1 }\n    //        },\n    //        {\n    //          arrayFilters: [{ \"elem.uuid\": { $eq: res.uuid } },\n    //          { \"elem1.uuid\": { $eq: vid.uuid } }\n    //          ]\n    //        },\n    //      ).exec();\n    //   })\n    // })\n  }\n\n  async copyVideos(request: VideoInterface): Promise<VideoSubject> {\n    return this.videoSubjectModel\n      .findOneAndUpdate(\n        {\n          uuid: request.to_subject\n\n        },\n        // filter and push to the object\n        {\n          $push: { \"chapters.$[chelem].videos\": { $each: request.videos } },\n          $inc: { 'count': request.count }\n\n        },\n        {\n          arrayFilters: [{ \"chelem.uuid\": { $eq: request.to_chapter } }\n            //  { \"telem.uuid\": { $eq: request.to_topic } } \n          ]\n        },\n\n      )\n      .exec();\n  }\n  async copyVideosChapters(request: VideoInterface): Promise<VideoSubject> {\n    return this.videoSubjectModel\n      .findOneAndUpdate(\n        {\n          uuid: request.to_subject\n\n        },\n        // filter and push to the object\n        {\n          $push: { \"chapters\": { $each: request.chapter } },\n          $inc: { 'count': request.count }\n\n        },\n        //   { arrayFilters: [ { \"chelem.uuid\": { $eq: request.to_chapter } }\n        //                       //  { \"telem.uuid\": { $eq: request.to_topic } } \n        // ] },\n\n      )\n      .exec();\n  }\n\n  async moveVideos(request: VideoInterface): Promise<VideoSubject> {\n\n    this.videoSubjectModel\n      .findOneAndUpdate(\n        { uuid: request.from_subject },\n\n        {\n          $pull: { \"chapters.$[chelem].videos\": { \"uuid\": { $in: request.from_video } } },\n          $inc: { 'count': -(request.count) }\n        },\n        {\n          arrayFilters: [{ \"chelem.uuid\": { $eq: request.from_chapter } },\n            // { \"telem.uuid\": { $eq: request.from_topic } } \n          ]\n        },\n\n      )\n      .exec();\n\n    return this.videoSubjectModel\n      .findOneAndUpdate(\n        {\n          uuid: request.to_subject\n\n        },\n        // filter and push to the object\n        {\n          $push: { \"chapters.$[tochelem].videos\": { $each: request.videos } },\n          $inc: { 'count': request.count }\n\n        },\n        {\n          arrayFilters: [{ \"tochelem.uuid\": { $eq: request.to_chapter } },\n            //  { \"totelem.uuid\": { $eq: request.to_topic } } \n          ]\n        },\n\n      )\n      .exec();\n\n\n  }\n\n  async moveVideoChapters(request: VideoInterface): Promise<VideoSubject> {\n\n    this.videoSubjectModel\n      .findOneAndUpdate(\n        { uuid: request.from_subject },\n\n        {\n          $pull: { \"chapters\": { \"uuid\": { $in: request.from_chapter } } },\n          $inc: { 'count': -(request.count) }\n        },\n        //   { arrayFilters: [ { \"chelem.uuid\": { $eq: request.from_chapter } },\n        //  // { \"telem.uuid\": { $eq: request.from_topic } } \n        //   ]},\n\n      )\n      .exec();\n\n    return this.videoSubjectModel\n      .findOneAndUpdate(\n        {\n          uuid: request.to_subject\n\n        },\n        // filter and push to the object\n        {\n          $push: { \"chapters\": { $each: request.chapter } },\n          $inc: { 'count': request.count }\n        },\n        //   { arrayFilters: [ { \"tochelem.uuid\": { $eq: request.to_chapter } },\n        //                   //  { \"totelem.uuid\": { $eq: request.to_topic } } \n        // ] },\n\n      )\n      .exec();\n\n\n  }\n\n  async deleteVideoChapters(request: VideoInterface): Promise<VideoSubject> {\n\n    return this.videoSubjectModel\n      .findOneAndUpdate(\n        { uuid: request.to_subject },\n\n        {\n          $pull: { \"chapters\": { \"uuid\": { $in: request.from_chapter } } },\n          $inc: { 'count': -(request.count) }\n        },\n        //   { arrayFilters: [ { \"chelem.uuid\": { $eq: request.from_chapter } },\n        //  // { \"telem.uuid\": { $eq: request.from_topic } } \n        //   ]},\n\n      )\n      .exec();\n\n  }\n\n  async deleteMultipleVideos(request: VideoInterface) {\n\n    this.videoSubjectModel\n      .findOneAndUpdate(\n        { uuid: request.from_subject },\n\n        {\n          $pull: { \"chapters.$[chelem].videos\": { \"uuid\": { $in: request.from_video } } },\n          $inc: { 'count': -(request.count) }\n        },\n        {\n          arrayFilters: [{ \"chelem.uuid\": { $eq: request.from_chapter } },\n            // { \"telem.uuid\": { $eq: request.from_topic } } \n          ]\n        },\n\n      )\n      .exec();\n  }\n\n  async dragAndDropVideos(request: any){\n    //console.log('QBankSubject',QBankSubject);\n    return this.videoSubjectModel\n      .findOneAndUpdate(\n        {\n          uuid: request.from_subject\n        },\n        {\n          $set: {\n            \"chapters.$[elem].videos\": request.videos,\n          }\n          // $inc : { 'count' : 1 }\n        },\n        {\n          arrayFilters: [\n            { \"elem.uuid\": { $eq: request.from_chapter } },\n            // { \"elem1.uuid\": { $eq: request.from_topic } }\n          ]\n        },\n      ).exec();\n  }\n\n  async dragAndDropChapters(request: any){\n    //console.log('QBankSubject',QBankSubject);\n    return this.videoSubjectModel\n      .findOneAndUpdate(\n        {\n          uuid: request.from_subject\n        },\n        {\n          $set: {\n            \"chapters\": request.chapters,\n          }\n          // $inc : { 'count' : 1 }\n        },\n        // {\n        //   arrayFilters: [\n        //     { \"elem.uuid\": { $eq: request.from_chapter } },\n        //     // { \"elem1.uuid\": { $eq: request.from_topic } }\n        //   ]\n        // },\n      ).exec();\n  }\n\n  async dragAndDropSubjects(request: any){\n    return request.map(res=>{\n      this.videoSubjectModel.findOneAndUpdate({uuid:res.uuid},{order:res.order}).exec();\n   })\n  }\n}\n","import { VideoInterface } from '@application/api-interfaces';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateVideoDTO } from '../dto/create-video.dto';\nimport { Course, Video, VideoSubject, Syllabus } from '../schema';\nimport * as mongoose from 'mongoose';\n\n@Injectable()\nexport class VideosService {\n\n  constructor(\n    @InjectModel('Course') private courseModel: Model<Course>,\n    @InjectModel('VideoSubject') private videoSubjectModel: Model<VideoSubject>,\n    @InjectModel('Syllabus') private syllabusModel: Model<Syllabus>,\n  ) { }\n\n  async addSubjectVideo(createVideoDTO: CreateVideoDTO): Promise<VideoSubject> {\n    return this.videoSubjectModel\n      .findOneAndUpdate(\n        { uuid: createVideoDTO.videoSubjectUuid },\n        // filter and push to the object\n        {\n          $push: { \"chapters.$[elem].videos\": createVideoDTO.videos },\n          $inc: { 'count': 1 }\n        },\n        { arrayFilters: [{ \"elem.uuid\": { $eq: createVideoDTO.chapter } }] },\n      )\n      .exec();\n  }\n\n  async createBulkVideos(response: any) {\n    console.log('responseresponseresponseresponse',response);\n    \n    response.map(res=>{\n      return this.videoSubjectModel\n      .findOneAndUpdate(\n        { uuid: res.videoSubjectUuid },\n        // filter and push to the object\n        {\n          $push: { \"chapters.$[elem].videos\": res.videos },\n          $inc: { 'count': 1 }\n        },\n        { arrayFilters: [{ \"elem.uuid\": { $eq: res.chapter } }] },\n      )\n      .exec();\n    })\n    \n  }\n\n  async deleteByUuid(subjectUuid: string, videoUuid: string) {\n    return this.videoSubjectModel\n      .findOneAndUpdate(\n        { uuid: subjectUuid },\n        // filter and push to the object\n        {\n          $pull: { \"chapters.$[].videos\": { uuid: videoUuid } },\n          $inc: { 'count': -1 }\n        },\n      )\n      .exec();\n  }\n\n\n\n  // async editVideoByUuid(\n  //   request: VideoInterface\n  // ): Promise<any> {\n  //    this.videoSubjectModel\n  //     .findOneAndUpdate(\n  //       { uuid: request.videoSubjectUuid },\n  //       // filter and push to the object\n  //       {\n  //         $pull: { \"chapters.$[].videos\": { uuid: request.videos.uuid } },\n  //         //   $inc : { 'count' : -1 }\n  //       },\n  //     )\n  //     .exec();\n  //   // pushing into new chapter\n  //    return this.videoSubjectModel\n  //     .findOneAndUpdate(\n  //       {\n  //         // courses: request.courses,\n  //         uuid: request.videoSubjectUuid\n  //        },\n  //       // filter and push to the object\n  //       {\n  //         $push: { \"chapters.$[elem].videos\": request.videos }\n  //        // $inc : { 'count' : 1 }\n  //       },\n  //       { arrayFilters: [ { \"elem.uuid\": { $eq: request.chapter } } ] },\n  //     )\n  //     .exec();\n  // }\n\n  async editVideoByUuid(\n    request: VideoInterface\n  ): Promise<any> {\n\n    this.videoSubjectModel\n      .findOneAndUpdate(\n\n        {\n          uuid: request.videoSubjectUuid\n        },\n\n        {\n          $set: {\n            \"chapters.$[elem].videos.$[elem1]\": request.videos,\n          }\n          // $inc : { 'count' : 1 }\n        },\n\n        {\n          arrayFilters: [{ \"elem.uuid\": { $eq: request.chapter } },\n          { \"elem1.uuid\": { $eq: request.videos.uuid } }\n          ]\n        },\n\n      ).exec();\n\n  }\n\n  /* ****************************CLEAN-UP****************************************** */\n\n  // @TODO\n\n  // async findAll(subjectUuid: string): Promise<Video[]> {\n  //   return this.videoSubjectModel\n  //   .find({ 'subject.uuid': subjectUuid })\n  //   .exec();\n  // }\n\n  // async findByCourse(courseId: string): Promise<any> {\n\n  //   const matchedCourse = await this.courseModel.find({ _id: courseId }).exec();\n\n  //   return this.videoSubjectModel\n  //   .find({ courses: courseId }, { id: 1, uuid: 1, title: 1})\n  //   .exec();\n\n  // }\n\n  // async findSuggestedSeries(): Promise<Video[]> {\n  //   return this.videoModel.find({$eq: [{ flags : { suggested:true } }] })\n  //   .populate('courses')\n  //   .populate('subjects')\n  //   .populate('chapters')\n  //   .exec();\n  // }\n\n  async findByUuid(subjectUuid: string, chapterUuid: string, uuid: string, course:string): Promise<any> {\n    let chapterobj = await this.syllabusModel.find({ uuid: chapterUuid }, { \"_id\": 1, \"uuid\": 1, \"title\": 1 }).exec();\n    return this.videoSubjectModel\n      .aggregate([\n        { $match: { courses: mongoose.Types.ObjectId(course), uuid: subjectUuid, \"chapters.videos.uuid\": uuid } },\n        { $unwind: \"$chapters\" },\n        {\n          $addFields: {\n            \"chapters.videos\": {\n              $filter: {\n                input: \"$chapters.videos\",\n                cond: { $eq: [\"$$this.uuid\", uuid] }\n              }\n            }\n          }\n        },\n      ])\n      // .sort({order:'ASC'})\n      .exec()\n      .then(res => {\n        let totalres = res.filter(it => it.chapters.videos.length > 0)[0].chapters.videos[0];\n        totalres['chapter'] = chapterobj[0];\n        return totalres;\n      })\n      .catch(err => err);\n  }\n\n}\n","import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreatePearlsDto } from '../dto/create-pearls.dto';\nimport { Pearls } from '../schema';\nimport {PearlsInputInterface } from '@application/api-interfaces'; \n\n@Injectable()\nexport class PearlsService {\n  constructor(@InjectModel('Pearls') private pearlsModel: Model<Pearls>) {}\n\n  async create(createPearlsDTO: CreatePearlsDto): Promise<Pearls> {\n    const createdPearls = new this.pearlsModel(createPearlsDTO);\n    const result = createdPearls.save();\n    console.log('added pearl', result);\n    \n    return result;\n  }\n\n  async findAll(): Promise<Pearls[]> {\n    return this.pearlsModel.find().exec();\n  }\n\n  async findByUuid(uuid: string): Promise<Pearls> {\n    return this.pearlsModel.findOne({ uuid}).exec();\n    \n  }\n  async getPeralQuestions(uuid:string){\n    return this.pearlsModel.findOne({ uuid},{queIds:1,uuid:1,title:1})\n    .populate({\n      path: 'queIds',\n      model: \"Question\",\n      select: {\n        \"title\": 1,\n        \"options\":1,\n        \"imgUrl\":1,\n        \"matchRightSideOptions\":1,\n        \"matchLeftSideOptions\":1,\n        \"_id\": 1,\n        \"uuid\": 1\n      }\n    })\n    .exec();\n  }\n\n  async editPearlsByUuid(\n    uuid: string,\n    request: PearlsInputInterface\n  ): Promise<Pearls> {\n     this.pearlsModel.findOneAndUpdate({ uuid }, request).exec();\n     return this.pearlsModel.findOne({ uuid }, {}).exec();\n  }\n\n  async deleteByUuid(uuid: string) {\n    return this.pearlsModel.findOneAndDelete({ uuid }).exec();\n  }\n\n}","import { Coupon, Course, CreateEmployeeDto, Employee, Faculty, Subscription } from '@application/shared-api';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { Model } from 'mongoose';\nimport bcrypt from 'bcrypt';\nimport { EmployeeInterface } from '@application/api-interfaces';\n\n@Injectable()\nexport class EmployeeService {\n  constructor(\n    @InjectModel('Employee') private employeeModel: Model<Employee>,\n    @InjectModel('Faculty') private facultyModel: Model<Faculty>,\n    @InjectModel('Course') private coursesModel: Model<Course>,\n\n    @InjectModel('Subscription') private subscriptionModel: Model<Subscription>,\n    @InjectModel('Coupon') private coupon: Model<Coupon>\n  ) { }\n\n  async addUser(createEmployeeDto: CreateEmployeeDto): Promise<Employee | Error> {\n    const createdUser = new this.employeeModel(createEmployeeDto);\n    createdUser.password = await bcrypt.hash(createdUser.password, 10);\n    const uniqueMobile = await this.findByMobile(createdUser.mobile).then(\n      (res) => res\n    );\n    const uniqueEmail = await this.findByEmail(createdUser.email).then(\n      (res) => res\n    );\n\n    if (!uniqueEmail && !uniqueMobile) {\n      return createdUser.save();\n    } else if (uniqueEmail) {\n      throw new HttpException(\n        'The input email is already taken, please enter a new one',\n        HttpStatus.BAD_REQUEST\n      );\n    } else if (uniqueMobile) {\n      throw new HttpException(\n        'The input mobile is already taken, please enter a new one',\n        HttpStatus.BAD_REQUEST\n      );\n    }\n\n  }\n\n  // async registerUser(registerUserDto: RegisterUserDto): Promise<Employee | Error> {\n\n  //   const createdUser = new this.employeeModel(registerUserDto);\n  //   createdUser.password = await bcrypt.hash(createdUser.password, 10);\n  //   const uniqueMobile = await this.findByMobile(createdUser.mobile).then(\n  //     (res) => res\n  //   );\n  //   const uniqueEmail = await this.findByEmail(createdUser.email).then(\n  //     (res) => res\n  //   );\n\n  //   if (!uniqueEmail && !uniqueMobile) {\n  //     return createdUser.save();\n  //   } else if (uniqueEmail) {\n  //     throw new HttpException(\n  //       'The input email is already taken, please enter a new one',\n  //       HttpStatus.BAD_REQUEST\n  //     );\n  //   } else if (uniqueMobile) {\n  //     throw new HttpException(\n  //       'The input mobile is already taken, please enter a new one',\n  //       HttpStatus.BAD_REQUEST\n  //     );\n  //   }\n\n  // }\n\n  async login(request: { mobile: number; password: string }): Promise<Employee | Faculty> {\n    const user = await this.findByMobile(request.mobile);\n    const agent = await this.findfacultyByMobile(request.mobile);\n    console.log('useruser',user);\n    console.log('agentagent',agent);\n    \n    \n    if (user) {\n      if (!user) {\n        throw new HttpException('Employee not found', HttpStatus.UNAUTHORIZED);\n      }\n      // compare passwords\n      return bcrypt.compare(request.password, user.password).then((val) => {\n        if (!val) {\n          throw new HttpException('Invalid credentials', HttpStatus.UNAUTHORIZED);\n        }\n        user.flags.isLoggedIn = true;\n        return user;\n      });\n    }\n    else if (agent) {\n      if (!agent) {\n        throw new HttpException('Agent not found', HttpStatus.UNAUTHORIZED);\n      }\n      // compare passwords\n      return bcrypt.compare(request.password, agent.password).then((val) => {\n        if (!val) {\n          throw new HttpException('Invalid credentials', HttpStatus.UNAUTHORIZED);\n        }\n        //agent.flags.isLoggedIn = true;\n        return agent;\n      });\n    }\n  }\n\n  deviceLogout(uuid: string, deviceId?: string) {\n\n    const user = this.employeeModel.findOne({ uuid }).exec().then(res => {\n\n      res.devices?.forEach(dev => {\n        if (dev?.id === deviceId) {\n          dev.isLoggedIn = false;\n        }\n      });\n\n      const deviceIsLoggedIn = (device) => device.isLoggedIn;\n\n      if (!res.devices?.some(deviceIsLoggedIn)) {\n        res.flags.isLoggedIn = false;\n      }\n\n      return res;\n\n    })\n\n    return this.employeeModel.findOneAndUpdate({ uuid }, user).exec();\n\n  }\n\n  async findAll(employee): Promise<Employee[]> {\n\n    return this.employeeModel.find({organizations:{$in:employee.organizations}})\n      .populate({\n        path: 'role',\n        select: {\n          \"uuid\": 1,\n          \"title\": 1,\n        }\n      })\n      .populate({\n        path:'organizations',\n        model: \"Organization\",\n        select: {\n          \"uuid\": 1,\n          \"title\": 1,\n          \"_id\": 1,\n        }\n      })\n      .populate({\n        path: 'department',\n        model:'Department',\n        select: {\n          \"_id\":1,\n          \"uuid\": 1,\n          \"title\": 1,\n        }\n      }).exec();\n  }\n\n  async findByUuid(uuid: string) {\n    return await this.employeeModel.findOne({ uuid }).populate({\n      path: 'department',\n      model:'Department',\n      select: {\n        \"_id\":1,\n        \"uuid\": 1,\n        \"title\": 1,\n      }\n    })\n    .populate({\n      path:'organizations',\n      model: \"Organization\",\n      select: {\n        \"uuid\": 1,\n        \"title\": 1,\n        \"_id\": 1,\n      }\n    }).exec();\n  }\n\n  async findByUuidEdit(uuid: string) {\n    return await this.employeeModel.findOne({ uuid })\n      .populate({\n        path: 'role',\n        select: {\n          \"uuid\": 1,\n          \"title\": 1,\n        }\n      })\n      .populate({\n        path:'organizations',\n        model: \"Organization\",\n        select: {\n          \"uuid\": 1,\n          \"title\": 1,\n          \"_id\": 1,\n        }\n      })\n      .exec();\n  }\n\n\n  async deleteByUuid(uuid: string) {\n    return this.employeeModel.findOneAndDelete({ uuid }).exec();\n  }\n\n  async editByUuid(uuid: string, request: EmployeeInterface): Promise<Employee> {\n    return this.employeeModel.findOneAndUpdate({ uuid }, request).exec();\n  }\n\n  async findByMobile(mobile): Promise<Employee> {\n    return this.employeeModel.findOne({ mobile }).exec();\n  }\n  async findfacultyByMobile(mobile) {\n    return this.facultyModel.findOne({ mobile }).exec();\n  }\n\n\n  async findByEmail(email: string): Promise<Employee> {\n    return this.employeeModel.findOne({ email }).exec();\n  }\n\n\n\n\n  // async viewSubscriptionsByUuid(uuid: string) {\n\n  //   return this.employeeModel\n  //     .aggregate([\n  //       { $match : {\"uuid\":uuid}},\n  //       // { $match : {_id: new ObjectId(id)}},\n  //       { $unwind: '$subscriptions' },\n  //       {\n  //           $lookup: {\n  //               from: 'subscriptions',\n  //               let: {\n  //                 subscription_id: \"$subscriptions.subscription_id\"\n  //                 // subscription_id: \"$subscriptions._id\"\n  //               },\n  //               pipeline: [{\n  //                   $match: {\n  //                     $expr: { $eq: [ \"$_id\", \"$$subscription_id\" ] }\n  //                   }\n  //                 },\n  //                 { $project: { _id: 1 ,\n  //                               uuid:1,\n  //                               title:1,\n  //                               description:1,\n  //                               order:1,\n  //                               period:1,\n  //                               createdOn:1,\n  //                               flags:1,\n  //                               actual:1,\n  //                               discounted:1,\n  //                               courses:1,\n  //                               qbanks:1,\n  //                               videos:1,\n  //                               tests:1,\n  //                             }\n  //                           }\n  //               ],\n  //               as: 'subscription'\n  //           }\n  //       },\n  //       { $unwind: '$subscription' },\n  //       {\n  //         $lookup:\n  //         {\n  //           from: \"courses\",\n  //           let: {\n  //             courses: \"$subscription.courses\"\n  //           },\n  //           pipeline: [{\n  //               $match: {\n  //                 $expr: { $eq: [ \"$_id\", \"$$courses\" ] }\n  //               }\n  //             },\n  //             { $project: { _id: 1 ,title:1,uuid:1} }\n  //           ],\n  //           as: \"subscriptions.course\",\n  //         }\n  //       },\n\n  //       {\n  //         $unwind: { path: \"$subscriptions.course\", preserveNullAndEmptyArrays: true }\n  //       },\n  //       {\n  //         $lookup: {\n  //           \"from\": \"qbanksubjects\",\n  //           \"let\": { \"qbanks\": \"$subscription.qbanks\" },\n  //           \"pipeline\": [\n  //             { \"$match\": { \"$expr\": { \"$in\": [\"$_id\", \"$$qbanks\"] } } },\n  //             { \"$project\": { \"syllabus\": 1 }},\n  //             {\n  //               $lookup: {\n  //                 from: \"syllabuses\",\n  //                 \"let\": { \"syllabus\": \"$syllabus\" },\n  //                 pipeline: [\n  //                   {\n  //                     $match: {\n  //                       $expr: { $eq: [ \"$_id\", \"$$syllabus\" ] }\n  //                     }\n  //                   },\n  //                   { $project: {\n  //                     \"_id\": 1 ,'title':1,'uuid':1\n  //                   } }\n  //                 ],\n  //                 as: \"syllabus\"\n  //               }\n  //             }\n  //           ],\n  //           \"as\": \"subscriptions.qbanks\"\n  //         }\n  //       },\n  //       {\n  //         $unwind: { path: \"$qbank\", preserveNullAndEmptyArrays: true }\n  //       },\n\n  //       {\n  //         $lookup: {\n  //           \"from\": \"videosubjects\",\n  //           \"let\": { \"videos\": \"$subscription.videos\" },\n  //           \"pipeline\": [\n  //             { \"$match\": { \"$expr\": { \"$in\": [\"$_id\", \"$$videos\"] } } },\n  //             { \"$project\": { \"syllabus\": 1 }},\n  //             {\n  //               $lookup: {\n  //                 from: \"syllabuses\",\n  //                 \"let\": { \"syllabus\": \"$syllabus\" },\n  //                 pipeline: [\n  //                   {\n  //                     $match: {\n  //                       $expr: { $eq: [ \"$_id\", \"$$syllabus\" ] }\n  //                     }\n  //                   },\n  //                   { $project: {\n  //                     \"_id\": 1 ,'title':1,'uuid':1\n  //                   } }\n  //                 ],\n  //                 as: \"syllabus\"\n  //               }\n  //             }\n  //           ],\n  //           \"as\": \"subscriptions.videos\"\n  //         }\n  //       },\n  //       {\n  //         $unwind: { path: \"$videos\", preserveNullAndEmptyArrays: true }\n  //       },\n\n  //       {\n  //         $lookup: {\n  //           \"from\": \"tscategories\",\n  //           \"let\": { \"tests\": \"$subscription.tests\" },\n  //           \"pipeline\": [\n  //             { \"$match\": { \"$expr\": { \"$in\": [\"$_id\", \"$$tests\"] } } },\n  //             { \"$project\": { \"categories.title\": 1,\"categories.uuid\": 1 ,'categories.order':1}},\n  //           ],\n  //           \"as\": \"subscriptions.tests\"\n  //         }\n  //       },\n  //       {\n  //         $group: {\n\n  //           _id: {\n  //             _id: \"$_id\",\n  //             uuid: \"$uuid\",\n  //             name:\"$name\" ,\n  //             email:\"$email\",\n  //             mobile:\"$mobile\",\n  //           },\n  //           subscription : { $addToSet : {\n\n  //                   \"_id\":\"$subscriptions._id\",\n  //                   \"subscription_id\":\"$subscriptions.subscription_id\",\n  //                   \"uuid\":\"$subscriptions.uuid\",\n  //                   \"expiry_date\":\"$subscriptions.expiry_date\",\n  //                   \"active\":\"$subscriptions.active\",\n  //                   \"createdOn\":\"$subscriptions.createdOn\",\n  //                   \"title\":\"$subscription.title\",\n  //                   \"description\":\"$subscription.description\",\n  //                   \"order\":\"$subscription.order\",\n  //                   \"period\":\"$subscription.period\",\n  //                   \"actual\":\"$subscription.actual\",\n  //                   \"discounted\":\"$subscription.discounted\",\n  //                   \"flags\":\"$subscription.flags\",\n  //                   \"course\":\"$subscriptions.course\",\n  //                   \"qbanks\":\"$subscriptions.qbanks\",\n  //                   \"videos\":\"$subscriptions.videos\",\n  //                   \"tests\":\"$subscriptions.tests\",\n  //           }},\n  //         }\n  //       },\n  //       {\n  //         $project: {\n  //           \"_id\": '$_id._id',\n  //           \"uuid\": '$_id.uuid',\n  //           \"name\": '$_id.name',\n  //           \"email\": '$_id.email',\n  //           \"mobile\": '$_id.mobile',\n  //           \"subscription\" : \"$subscription\",\n  //         }\n  //       }\n  //     ]).exec()\n\n  //   // return await this.employeeModel.findOne({ uuid })\n  //   //   .populate(\n  //   //     {\n  //   //       path: 'subscriptions',\n  //   //       select: '_id uuid title courses videos tests qbanks createdOn order',\n  //   //       // deep population method\n  //   //       populate: {\n  //   //         path: 'courses videos qbanks tests',\n  //   //         select: {\n  //   //           '_id ': 1,\n  //   //           'uuid': 1,\n  //   //           'title': 1,\n  //   //           // 'syllabus': 1,\n  //   //         },\n  //   //         // populate: {\n  //   //         //   path: 'syllabus',\n  //   //         //   select: 'title',\n  //   //         // }\n  //   //       },\n  //   //     }\n  //   //   )\n  //   //   .exec();\n  // }\n\n\n\n  async changePassword(\n    uuid: string,\n    oldPassword: string,\n    newPassword: string\n  ): Promise<{ message: string; result: Employee }> {\n    const hashOldPassword = await bcrypt.hash(oldPassword, 10);\n    const hashNewPassword = await bcrypt.hash(newPassword, 10);\n\n    const user = await this.employeeModel.findOne({ uuid });\n\n    if (user) {\n      return bcrypt.compare(oldPassword, user.password).then((val) => {\n        if (val) {\n          return this.employeeModel.findOneAndUpdate(\n            { uuid },\n            { password: hashNewPassword })\n            .exec().then(result => {\n              return { message: 'Password reset success!!', result };\n            })\n        } else {\n          throw new HttpException('Old Password Validation Failed. Please try again.', HttpStatus.UNAUTHORIZED);\n        }\n      });\n    } else {\n      throw new HttpException('Employee not found', HttpStatus.UNAUTHORIZED);\n    }\n  }\n\n  async resetPassword(\n    uuid: string,\n    newPassword: string\n  ): Promise<{ message: string; result: Employee }> {\n    const hashNewPassword = await bcrypt.hash(newPassword, 10);\n    const user = await this.employeeModel.findOne({ uuid });\n    if (user) {\n      return this.employeeModel.findOneAndUpdate(\n        { uuid },\n        { password: hashNewPassword })\n        .exec().then(result => {\n          return { message: 'Password reset success!!', result };\n        })\n    } else {\n      throw new HttpException('Employee not found', HttpStatus.UNAUTHORIZED);\n    }\n  }\n\n  async addOrganizationByUserUuid(\n    uuid: string,\n    request: EmployeeInterface\n  ): Promise<Employee> {\n    return this.employeeModel\n      .findOneAndUpdate({ uuid }, request)\n      .exec();\n  }\n\n  // async assignSubscriptionsByUserUuid(\n  //   uuid: string,\n  //   request: EmployeeInterface\n  // ) {\n  //   return this.employeeModel.findOneAndUpdate({ uuid }, request).exec();\n  // }\n\n  // async deleteOrganizationByUserUuid(\n  //   uuid: string,\n  //   orgUuid: string\n  // ): Promise<Employee> {\n  //   return this.employeeModel\n  //     .update({}, { $pull: { organizations: { uuid: orgUuid } } })\n  //     .exec();\n  // }\n\n\n\n  // async fetchCouponsBysubscriptions(\n  //   UserId: string[], subscription_id: string): Promise<any>  {\n\n  //     const subscription = this.subscriptionModel.findOne({_id: new ObjectId(subscription_id)}).exec();\n\n  //     const specificCoupons =  this.coupon.find({\n  //       $or:[\n  //           { users      : {$in:UserId}},\n  //           { couponType : 'allUsers' },\n  //           { couponType : 'users' },\n  //           { valiedFrom :{$lte:new Date()}},\n  //           { valiedTo :{$gte:new Date()} }\n  //         ],\n  //       subscription: subscription_id,\n  //       availableCoupons: { $gt: 0 },\n  //       agent:null,\n  //       'flags.active':true,\n  //     }).exec();\n\n  //   return specificCoupons;\n  // }\n  // async fetchCouponsBysubscriptions(\n  //   UserId: string[], subscription_id: string): Promise<any>  {\n\n  //  let datee = new Date();\n  //   let today=datee.getTime();\n\n  //     const specificCoupons =  this.coupon.find({\n  //       $or:[\n  //           { users      : {$in:UserId}},\n  //           { couponType : 'allUsers' },\n  //         ],\n  //       valiedFrom : { $lte: new Date( today) },\n  //       valiedTo : { $gte: new Date( today) },\n  //       subscription: subscription_id,\n  //       availableCoupons: { $gt: 0 },\n  //       agent:null,\n  //       'flags.active':true,\n  //     }).exec();\n\n  //   return specificCoupons;\n  // }\n\n}\n","import { Injectable } from '@nestjs/common';\nimport { ModeOfPaymentEnum, PaymentStatusEnum, TagsInterface } from '@application/api-interfaces';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateUserTransactionsDTO } from '../dto/create-transactions.dto';\nimport { UserTransactions } from '../schema/user-transactions.schema';\nimport { Coupon } from '../schema/coupon.schema';\nimport { Subscription, User } from '../schema';\nimport { CommonFunctions } from '../helpers/functions';\n\n@Injectable()\nexport class UserTransactionsService {\n\n  constructor(\n    @InjectModel('UserTransactions') private userTransactionsModel: Model<UserTransactions>,\n    @InjectModel('Coupon') private couponsModel: Model<Coupon>,\n    @InjectModel('User') private userModel: Model<User>,\n    @InjectModel('Subscription') private subscriptionModel: Model<Subscription>\n  ) { }\n\n\n  async create(createUserTransactionsDTO: CreateUserTransactionsDTO): Promise<UserTransactions> {\n\n    const createdTransaction = new this.userTransactionsModel(createUserTransactionsDTO);\n    //console.log('createdTransaction',createdTransaction);\n    //let transactionId;\n    let random = Math.floor(Math.random() * 10000000);\n\n    let dateOfPayment = createdTransaction.dateOfPayment;\n    let month = dateOfPayment.getMonth() + 1;\n    let dt = dateOfPayment.getDate();\n    let dt1: any;\n    let month1: any;\n    let currentYear = new Date().getFullYear();\n    let year = currentYear.toString().split('');\n    currentYear = parseInt(year[year.length - 2] + year[year.length - 1]);\n\n    if (dt < 10) {\n      dt1 = '0' + dt;\n    } else { dt1 = dt }\n    if (month < 10) {\n      month1 = '0' + month;\n\n    } else { month1 = month; }\n\n    createdTransaction.transactionId = 'TXN' + random + 'D' + currentYear + month1 + dt1;\n    const result = createdTransaction.save();\n    if ((await result).paymentStatus == \"SUCCESS\") {\n\n      if ((await result).couponId != null) {\n        let couponId = (await result).couponId;\n\n\n        let couponData = await this.couponsModel.findOne({ _id: couponId });\n        let agentAmount = couponData.agentAmount;\n        let appliedUsersCount = couponData.appliedUsersCount + 1\n        let agentTotalAmount = agentAmount * appliedUsersCount\n        let agentDueAmount = couponData.agentDueAmount + agentAmount\n\n        this.couponsModel.findOneAndUpdate(\n          { _id: couponId },\n          {\n            agentTotalAmount: agentTotalAmount,\n            agentDueAmount: agentDueAmount,\n            $inc: {\n              'availableCoupons': -1,\n              'appliedUsersCount': 1,\n            }\n          },\n        ).exec();\n      }\n      let expiry = new Date((await result).expiryDate);\n      var subscriptionDate = expiry.toLocaleDateString('en-US', {\n        weekday: 'long',\n        month: 'long',\n        day: 'numeric',\n        year: 'numeric',\n      });\n      let subscriptionData = await this.subscriptionModel.findOne({ _id: (await result).subscriptionId });\n      let UserData = await this.userModel.findOne({ _id: (await result).userId });\n      console.log('added transaction', result);\n\n    }\n\n    return result;\n  }\n\n  async getUserTransactions(employee): Promise<UserTransactions[]> {\n\n    // return this.userTransactionsModel.find()\n    //   .populate({\n    //     path: \"userId\",\n    //     model: \"User\",\n    //     select: {\n    //       \"name\": 1,\n    //       \"mobile\": 1\n\n    //     }\n    //   })\n    //   .populate({\n    //     path: \"subscriptionId\",\n    //     model: \"Subscription\",\n    //     select: {\n    //       \"title\": 1,\n    //     }\n    //   })\n    //   .populate({\n    //     path: \"couponId\",\n    //     model: \"Coupon\",\n    //     select: {\n    //       \"code\": 1,\n    //       \"discountType\": 1,\n    //       \"discount\": 1\n\n    //     }\n    //   })\n    //   .sort({ dateOfPayment: 'DESC' })\n    //   .exec();\n    return this.userTransactionsModel.aggregate([\n      {\n        $lookup: {\n          from: \"users\",\n          localField: \"userId\",\n          foreignField: \"_id\",\n          as: \"userId\"\n        }\n      },\n      {\n        $unwind: \"$userId\"\n      },\n      {\n        $lookup: {\n          from: \"courses\",\n          localField: \"userId.courses\",\n          foreignField: \"_id\",\n          as: \"courses\"\n        }\n      },\n      {\n        $unwind: \"$courses\"\n      },\n      {\n        $match: { // Filter users based on organizations\n          \"courses.organizations\": { $in: employee.organizations }\n        }\n      },\n      {\n        $lookup: {\n          from: \"subscriptions\",\n          localField: \"subscriptionId\",\n          foreignField: \"_id\",\n          as: \"subscriptionId\"\n        }\n      },\n      {\n        $lookup: {\n          from: \"coupons\",\n          localField: \"couponId\",\n          foreignField: \"_id\",\n          as: \"couponId\"\n        }\n      },\n      {\n        $project: {\n          \"_id\": 1,\n          \"actualPrice\": 1,\n          \"discountPrice\": 1,\n          \"finalPaidAmount\": 1,\n          \"subscriptionId.title\": 1,\n          \"courses.title\":1,\n          \"billNumber\": 1,\n          \"chequeNumber\": 1,\n          \"chequeDate\": 1,\n          \"bankName\": 1,\n          \"referenceNumber\": 1,\n          \"creditORdebitCard\": 1,\n          \"CardType\": 1,\n          \"upiId\": 1,\n          \"mode_transactionNumber\": 1,\n          \"couponId.code\": 1,\n          \"couponId.discountType\": 1,\n          \"couponId.discount\": 1,\n          \"transactionId\": 1,\n          \"uuid\": 1,\n          \"userId.name\": 1,\n          \"userId.mobile\": 1,\n          \"dateOfPayment\": 1,\n          \"expiryDate\": 1,\n          \"createdBy\": 1,\n          \"paymentType\": 1,\n          \"modeOfPayment\": 1,\n          \"paymentStatus\": 1,\n          \"razorpayOrderId\": 1,\n        }\n      },\n      {\n        $sort: { dateOfPayment: -1 }\n      }\n    ]).exec();\n\n  }\n\n  async findByUuid(uuid: string): Promise<UserTransactions> {\n    return this.userTransactionsModel\n      .findOne({ uuid })\n      .populate({\n        path: \"userId\",\n        model: \"User\",\n        select: {\n          \"name\": 1,\n          \"mobile\": 1\n        }\n      })\n      .populate({\n        path: \"subscriptionId\",\n        model: \"Subscription\",\n        select: {\n          \"title\": 1,\n        }\n      })\n      .populate({\n        path: \"couponId\",\n        model: \"Coupon\",\n        select: {\n          \"code\": 1,\n          \"discountType\": 1,\n          \"discount\": 1\n        }\n      })\n      .exec()\n  }\n\n  async assignedSubscriptions(id: any) {\n    return this.userTransactionsModel.find({ subscriptionId: id })\n      .populate({\n        path: \"userId\",\n        model: \"User\",\n        select: {\n          \"name\": 1,\n          \"mobile\": 1\n        }\n      })\n      .populate({\n        path: \"subscriptionId\",\n        model: \"Subscription\",\n        select: {\n          \"title\": 1,\n        }\n      })\n      .populate({\n        path: \"couponId\",\n        model: \"Coupon\",\n        select: {\n          \"code\": 1,\n          \"discountType\": 1,\n          \"discount\": 1\n        }\n      })\n      .exec()\n  }\n\n  async getTransactionsDateFilter(transactionsInterface, employee) {\n\n    let fromDate = new Date(transactionsInterface.fromDate).getTime() + (5.5 * 60 * 60 * 1000);\n    let toDate = new Date(transactionsInterface.toDate);\n    let newFromDate = new Date(fromDate).setUTCHours(0, 0, 0, 0);\n    let newToDate = new Date(toDate).setUTCHours(23, 59, 59, 999);\n    // console.log('fromDate', new Date(newFromDate));\n    // console.log('toDate', new Date(newToDate));\n    return this.userTransactionsModel.aggregate([\n      {\n        $match: {\n          dateOfPayment: {\n            $gte: new Date(newFromDate),\n            $lte: new Date(newToDate)\n          }\n        }\n      },\n      {\n        $lookup: {\n          from: \"users\",\n          localField: \"userId\",\n          foreignField: \"_id\",\n          as: \"userId\"\n        }\n      },\n      {\n        $unwind: \"$userId\"\n      },\n      {\n        $lookup: {\n          from: \"courses\",\n          localField: \"userId.courses\",\n          foreignField: \"_id\",\n          as: \"courses\"\n        }\n      },\n      {\n        $unwind: \"$courses\"\n      },\n      {\n        $match: { // Filter users based on organizations\n          \"courses.organizations\": { $in: employee.organizations }\n        }\n      },\n      {\n        $lookup: {\n          from: \"subscriptions\",\n          localField: \"subscriptionId\",\n          foreignField: \"_id\",\n          as: \"subscriptionId\"\n        }\n      },\n      {\n        $lookup: {\n          from: \"coupons\",\n          localField: \"couponId\",\n          foreignField: \"_id\",\n          as: \"couponId\"\n        }\n      },\n      {\n        $project: {\n          \"_id\": 1,\n          \"actualPrice\": 1,\n          \"discountPrice\": 1,\n          \"finalPaidAmount\": 1,\n          \"subscriptionId.title\": 1,\n          \"courses.title\":1,\n          \"billNumber\": 1,\n          \"chequeNumber\": 1,\n          \"chequeDate\": 1,\n          \"bankName\": 1,\n          \"referenceNumber\": 1,\n          \"creditORdebitCard\": 1,\n          \"CardType\": 1,\n          \"upiId\": 1,\n          \"mode_transactionNumber\": 1,\n          \"couponId.code\": 1,\n          \"couponId.discountType\": 1,\n          \"couponId.discount\": 1,\n          \"transactionId\": 1,\n          \"uuid\": 1,\n          \"userId.name\": 1,\n          \"userId.mobile\": 1,\n          \"dateOfPayment\": 1,\n          \"expiryDate\": 1,\n          \"createdBy\": 1,\n          \"paymentType\": 1,\n          \"modeOfPayment\": 1,\n          \"paymentStatus\": 1,\n          \"razorpayOrderId\": 1,\n        }\n      },\n      {\n        $sort: { dateOfPayment: -1 }\n      }\n    ]).exec();\n\n    // return this.userTransactionsModel.find({\n    //   dateOfPayment: {\n    //     $gte: new Date(newFromDate),\n    //     $lte: new Date(newToDate)\n    //   }\n    // })\n    //   .populate({\n    //     path: \"userId\",\n    //     model: \"User\",\n    //     select: {\n    //       \"name\": 1,\n    //       \"mobile\": 1,\n    //       \"organizations\":1\n    //     },\n    //     match: { organizations: { $in: employee.organizations } },\n    //   })\n    //   .populate({\n    //     path: \"subscriptionId\",\n    //     model: \"Subscription\",\n    //     select: {\n    //       \"title\": 1,\n    //     }\n    //   })\n    //   .populate({\n    //     path: \"couponId\",\n    //     model: \"Coupon\",\n    //     select: {\n    //       \"code\": 1,\n    //       \"discountType\": 1,\n    //       \"discount\": 1\n    //     }\n    //   })\n    //   .sort({ dateOfPayment: 'DESC' })\n    //   .exec();\n\n  }\n\n  async getMasterAdviceTransactions() {\n    return this.userTransactionsModel.find({ modeOfPayment: ModeOfPaymentEnum.MasterAdvise ,paymentStatus:PaymentStatusEnum.SUCCESS})\n      .populate({\n        path: \"userId\",\n        model: \"User\",\n        select: {\n          \"name\": 1,\n          \"mobile\": 1\n        }\n      })\n      .populate({\n        path: \"subscriptionId\",\n        model: \"Subscription\",\n        select: {\n          \"title\": 1,\n        }\n      })\n      .populate({\n        path: \"couponId\",\n        model: \"Coupon\",\n        select: {\n          \"code\": 1,\n          \"discountType\": 1,\n          \"discount\": 1\n        }\n      })\n      .sort({ dateOfPayment: 'DESC' })\n      .exec();\n\n  }\n\n  async getmasterAdviceDateFilter(transactionsInterface) {\n    let fromDate = new Date(transactionsInterface.fromDate).getTime() + (5.5 * 60 * 60 * 1000);\n    let toDate = new Date(transactionsInterface.toDate);\n    let newFromDate = new Date(fromDate).setUTCHours(0, 0, 0, 0);\n    let newToDate = new Date(toDate).setUTCHours(23, 59, 59, 999);\n    console.log('fromDate', new Date(newFromDate));\n    console.log('toDate', new Date(newToDate));\n    return this.userTransactionsModel.find({\n      dateOfPayment: {\n        $gte: new Date(newFromDate),\n        $lte: new Date(newToDate)\n      },\n      modeOfPayment: ModeOfPaymentEnum.MasterAdvise ,\n      paymentStatus:PaymentStatusEnum.SUCCESS\n    })\n      .populate({\n        path: \"userId\",\n        model: \"User\",\n        select: {\n          \"name\": 1,\n          \"mobile\": 1\n        }\n      })\n      .populate({\n        path: \"subscriptionId\",\n        model: \"Subscription\",\n        select: {\n          \"title\": 1,\n        }\n      })\n      .populate({\n        path: \"couponId\",\n        model: \"Coupon\",\n        select: {\n          \"code\": 1,\n          \"discountType\": 1,\n          \"discount\": 1\n        }\n      })\n      .sort({ dateOfPayment: 'DESC' })\n      .exec();\n\n  }\n\n  // getMonth(month) {\n  //   month = month - 1;\n  //   if (this.months[month] != null) {\n  //     return this.months[month];\n  //   } else {\n  //     throw new Error('Invalid Month No');\n  //   }\n  // }\n\n  async yearlyPayments(res, employee) {\n    // let data = await this.userTransactionsModel.aggregate([\n    //   { $match: { paymentStatus: \"SUCCESS\", } },\n    //   {\n    //     '$group': {\n    //       _id: {\n    //         //  month:{'$dateToString': { date: \"$dateOfPayment\", format: \"%Y-%m\" }},\n    //         //  yearMonthDate: { $dateToString: { format: \"%Y-%m\", date: \"$dateOfPayment\" } }\n    //         yearMonthDate: { $dateToString: { format: \"%Y-%m\", date: \"$dateOfPayment\" } }\n    //       },\n    //       count: { '$sum': 1 },\n    //       total: { '$sum': '$finalPaidAmount' },\n    //     }\n    //   },\n    //   { '$sort': { _id: -1 } },\n    //   { \"$limit\": res.months },\n    // ])\n    let data =  await this.userTransactionsModel.aggregate([\n\n      { $match: { paymentStatus: \"SUCCESS\", } },\n      {\n        $lookup: {\n          from: \"users\",\n          localField: \"userId\",\n          foreignField: \"_id\",\n          as: \"userId\"\n        }\n      },\n      {\n        $unwind: \"$userId\"\n      },\n      {\n        $lookup: {\n          from: \"courses\",\n          localField: \"userId.courses\",\n          foreignField: \"_id\",\n          as: \"courses\"\n        }\n      },\n      {\n        $unwind: \"$courses\"\n      },\n      {\n        $match: { // Filter users based on organizations\n          \"courses.organizations\": { $in: employee.organizations }\n        }\n      },\n      {\n        '$group': {\n          _id: {\n            //  month:{'$dateToString': { date: \"$dateOfPayment\", format: \"%Y-%m\" }},\n            //  yearMonthDate: { $dateToString: { format: \"%Y-%m\", date: \"$dateOfPayment\" } }\n            yearMonthDate: { $dateToString: { format: \"%Y-%m\", date: \"$dateOfPayment\" } }\n          },\n          count: { '$sum': 1 },\n          total: { '$sum': '$finalPaidAmount' },\n        }\n      },\n      { '$sort': { _id: -1 } },\n      { \"$limit\": res.months },\n    ]).exec();\n\n    const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    var yearData = [];\n    var dataa = data.reverse();\n    dataa.forEach(element => {\n      var d = new Date(element._id.yearMonthDate)\n      var date = monthNames[d.getMonth()];\n      var year = date + '(' + d.getFullYear() + \")\";\n      yearData.push([year, element.total])\n\n    });\n    return yearData;\n\n\n  }\n\n  async weeklyPayments(employee) {\n    // let data = await this.userTransactionsModel.aggregate([\n    //   { $match: { paymentStatus: \"SUCCESS\", } },\n    //   {\n    //     '$group': {\n    //       _id: {\n    //         yearMonthDate: { $dateToString: { format: \"%Y-%m-%d\", date: \"$dateOfPayment\" } }\n    //       },\n    //       count: { '$sum': 1 },\n    //       total: { '$sum': '$finalPaidAmount' },\n    //     }\n    //   },\n    //   { '$sort': { _id: -1 } },\n    //   { \"$limit\": 7 },\n    // ])\n\n    let data =  await this.userTransactionsModel.aggregate([\n\n      { $match: { paymentStatus: \"SUCCESS\", } },\n      {\n        $lookup: {\n          from: \"users\",\n          localField: \"userId\",\n          foreignField: \"_id\",\n          as: \"userId\"\n        }\n      },\n      {\n        $unwind: \"$userId\"\n      },\n      {\n        $lookup: {\n          from: \"courses\",\n          localField: \"userId.courses\",\n          foreignField: \"_id\",\n          as: \"courses\"\n        }\n      },\n      {\n        $unwind: \"$courses\"\n      },\n      {\n        $match: { // Filter users based on organizations\n          \"courses.organizations\": { $in: employee.organizations }\n        }\n      },\n      {\n        '$group': {\n          _id: {\n            //  month:{'$dateToString': { date: \"$dateOfPayment\", format: \"%Y-%m\" }},\n            //  yearMonthDate: { $dateToString: { format: \"%Y-%m\", date: \"$dateOfPayment\" } }\n            yearMonthDate: { $dateToString: { format: \"%Y-%m-%d\", date: \"$dateOfPayment\" } }\n          },\n          count: { '$sum': 1 },\n          total: { '$sum': '$finalPaidAmount' },\n        }\n      },\n      { '$sort': { _id: -1 } },\n      { \"$limit\": 7 },\n    ]).exec();\n    var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    var yearData = [];\n    var dataa = data.reverse();\n    dataa.forEach(element => {\n      var d = new Date(element._id.yearMonthDate)\n      var day = days[d.getDay()];\n      yearData.push([day, element.total])\n\n    });\n    return yearData;\n\n\n  }\n\n  async paymentReports(employee) {\n    // var currentDate = new Date().getTime() + (5.5 * 60 * 60 * 1000);\n    var date = new Date();\n\n    let newFromDate = new Date().setUTCHours(0, 0, 0, 0);\n    let newToDate = new Date().setUTCHours(23, 59, 59, 999);\n    let today =  await this.userTransactionsModel.aggregate([\n\n      {\n        $match: {\n          paymentStatus: \"SUCCESS\", dateOfPayment: {\n            $gte: new Date(newFromDate), $lte: new Date(newToDate)\n          }\n        }\n      },\n      {\n        $lookup: {\n          from: \"users\",\n          localField: \"userId\",\n          foreignField: \"_id\",\n          as: \"userId\"\n        }\n      },\n      {\n        $unwind: \"$userId\"\n      },\n      {\n        $lookup: {\n          from: \"courses\",\n          localField: \"userId.courses\",\n          foreignField: \"_id\",\n          as: \"courses\"\n        }\n      },\n      {\n        $unwind: \"$courses\"\n      },\n      {\n        $match: { // Filter users based on organizations\n          \"courses.organizations\": { $in: employee.organizations }\n        }\n      },\n      {\n        '$group': {\n          _id: null,\n          total: { '$sum': '$finalPaidAmount' },\n        }\n      }\n    ]).exec();\n\n    var firstDay = new Date(date.getFullYear(), date.getMonth(), 1).getTime() + (5.5 * 60 * 60 * 1000);\n    var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0).getTime() + (5.5 * 60 * 60 * 1000);\n    let monthFromDate = new Date(firstDay).setUTCHours(0, 0, 0, 0);\n    let monthToDate = new Date(lastDay).setUTCHours(23, 59, 59, 999);\n\n    let this_month =  await this.userTransactionsModel.aggregate([\n\n      {\n        $match: {\n          paymentStatus: \"SUCCESS\", dateOfPayment: {\n            $gte: new Date(monthFromDate), $lte: new Date(monthToDate)\n          }\n        }\n      },\n      {\n        $lookup: {\n          from: \"users\",\n          localField: \"userId\",\n          foreignField: \"_id\",\n          as: \"userId\"\n        }\n      },\n      {\n        $unwind: \"$userId\"\n      },\n      {\n        $lookup: {\n          from: \"courses\",\n          localField: \"userId.courses\",\n          foreignField: \"_id\",\n          as: \"courses\"\n        }\n      },\n      {\n        $unwind: \"$courses\"\n      },\n      {\n        $match: { // Filter users based on organizations\n          \"courses.organizations\": { $in: employee.organizations }\n        }\n      },\n      {\n        '$group': {\n          _id: null,\n          total: { '$sum': '$finalPaidAmount' },\n        }\n      }\n    ]).exec();\n\n    var yearstart = new Date(date.getFullYear(), 0, 1).getTime() + (5.5 * 60 * 60 * 1000);\n    var yearlast = new Date(date.getFullYear(), 11, 31).getTime() + (5.5 * 60 * 60 * 1000);\n    let yearFromDate = new Date(yearstart).setUTCHours(0, 0, 0, 0);\n    let yearToDate = new Date(yearlast).setUTCHours(23, 59, 59, 999);\n   \n    let this_year =  await this.userTransactionsModel.aggregate([\n      {\n        $match: {\n          paymentStatus: \"SUCCESS\", dateOfPayment: {\n            $gte: new Date(yearFromDate), $lte: new Date(yearToDate)\n          }\n        }\n      },\n      {\n        $lookup: {\n          from: \"users\",\n          localField: \"userId\",\n          foreignField: \"_id\",\n          as: \"userId\"\n        }\n      },\n      {\n        $unwind: \"$userId\"\n      },\n      {\n        $lookup: {\n          from: \"courses\",\n          localField: \"userId.courses\",\n          foreignField: \"_id\",\n          as: \"courses\"\n        }\n      },\n      {\n        $unwind: \"$courses\"\n      },\n      {\n        $match: { // Filter users based on organizations\n          \"courses.organizations\": { $in: employee.organizations }\n        }\n      },\n      {\n        '$group': {\n          _id: null,\n          total: { '$sum': '$finalPaidAmount' },\n        }\n      }\n    ]).exec();\n\n    var firstweek = new Date(date.setDate(date.getDate() - date.getDay())).getTime() + (5.5 * 60 * 60 * 1000);\n    var lastweek = new Date(date.setDate(date.getDate() - date.getDay() + 6)).getTime() + (5.5 * 60 * 60 * 1000);\n    let weekFromDate = new Date(firstweek).setUTCHours(0, 0, 0, 0);\n    let weekToDate = new Date(lastweek).setUTCHours(23, 59, 59, 999);\n  \n    let this_week =  await this.userTransactionsModel.aggregate([\n      {\n        $match: {\n          paymentStatus: \"SUCCESS\", dateOfPayment: {\n            $gte: new Date(weekFromDate), $lte: new Date(weekToDate)\n          }\n        }\n      },\n      {\n        $lookup: {\n          from: \"users\",\n          localField: \"userId\",\n          foreignField: \"_id\",\n          as: \"userId\"\n        }\n      },\n      {\n        $unwind: \"$userId\"\n      },\n      {\n        $lookup: {\n          from: \"courses\",\n          localField: \"userId.courses\",\n          foreignField: \"_id\",\n          as: \"courses\"\n        }\n      },\n      {\n        $unwind: \"$courses\"\n      },\n      {\n        $match: { // Filter users based on organizations\n          \"courses.organizations\": { $in: employee.organizations }\n        }\n      },\n      {\n        '$group': {\n          _id: null,\n          total: { '$sum': '$finalPaidAmount' },\n        }\n      }\n    ]).exec();\n\n    return { 'today': today[0]?.total, 'this_week': this_week[0]?.total, 'this_month': this_month[0]?.total, 'this_year': this_year[0]?.total };\n  }\n\n\n}","import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateRoleValuesDTO } from '../dto/create-role-values.dto';\nimport { RoleModules } from '../schema/role-values.schema';\nimport { RoleValueInterface } from '@application/api-interfaces';\n\n@Injectable()\nexport class RoleValuesService {\n  constructor(@InjectModel('RoleModules') private roleValuesModel: Model<RoleModules>) { }\n\n  async create(createRoleValuesDTO: CreateRoleValuesDTO): Promise<RoleModules> {\n    const createdRoleVales = new this.roleValuesModel(createRoleValuesDTO);\n    const result = createdRoleVales.save();\n    console.log('added Role Values', result);\n    return result;\n  }\n\n  async findAll(): Promise<RoleModules[]> {\n    // return this.roleValuesModel.find().exec();\n    return this.roleValuesModel\n      .aggregate([\n        {\n          $lookup: {\n            \"from\": \"rolesubmodules\",\n            \"let\": { \"subModules\": \"$subModules\" },\n            \"pipeline\": [\n              { \"$match\": { \"$expr\": { \"$in\": [\"$_id\", \"$$subModules\"] } } }\n            ],\n            \"as\": \"subModules\"\n          }\n        },\n        {\n          $unwind: { path: \"$subModules\", preserveNullAndEmptyArrays: true }\n        },\n        {\n          $group: {\n            _id: {\n              _id: \"$_id\", title: \"$title\", uuid: \"$uuid\",\n              createdOn: \"$createdOn\", flags: \"$flags\"\n            },\n            subModules: {\n              $addToSet: {\n                \"_id\": \"$subModules._id\",\n                \"title\": \"$subModules.title\",\n              }\n            },\n          }\n        },\n        {\n          $project: {\n            \"_id\": '$_id._id',\n            \"title\": '$_id.title',\n            \"uuid\": '$_id.uuid',\n            \"flags\": '$_id.flags',\n            \"createdOn\": '$_id.createdOn',\n            \"subModules\": \"$subModules\",\n          }\n        }\n      ]).sort({ title: 'ASC' }).exec()\n  }\n\n  async findByUuid(uuid: string): Promise<RoleModules> {\n    // return this.roleValuesModel.findOne({ uuid }).exec();\n    return this.roleValuesModel\n    .aggregate([\n      {\n        $match: { \"uuid\": uuid }\n      },\n      {\n        $lookup: {\n          \"from\": \"rolesubmodules\",\n          \"let\": { \"subModules\": \"$subModules\" },\n          \"pipeline\": [\n            { \"$match\": { \"$expr\": { \"$in\": [\"$_id\", \"$$subModules\"] } } }\n          ],\n          \"as\": \"subModules\"\n        }\n      },\n      {\n        $unwind: { path: \"$subModules\", preserveNullAndEmptyArrays: true }\n      },\n      {\n        $group: {\n          _id: {\n            _id: \"$_id\", title: \"$title\", uuid: \"$uuid\",\n            createdOn: \"$createdOn\", flags: \"$flags\",createdBy:\"$createdBy\"\n          },\n          subModules: {\n            $addToSet: {\n              \"_id\": \"$subModules._id\",\n              \"uuid\": \"$subModules.uuid\",\n              // \"title\": \"$subModules.title\",\n            }\n          },\n        }\n      },\n      {\n        $project: {\n          \"_id\": '$_id._id',\n          \"title\": '$_id.title',\n          \"uuid\": '$_id.uuid',\n          \"flags\": '$_id.flags',\n          \"createdOn\": '$_id.createdOn',\n          \"createdBy\":\"$_id.createdBy\",\n          \"subModules\": \"$subModules\",\n        }\n      }\n    ]).exec()\n\n  }\n\n  async deleteByUuid(uuid: string) {\n    return this.roleValuesModel.findOneAndDelete({ uuid }).exec();\n  }\n\n  async editRoleValuesByUuid(\n    uuid: string,\n    request: RoleValueInterface\n  ): Promise<RoleModules> {\n    this.roleValuesModel.findOneAndUpdate({ uuid }, request).exec();\n    return this.roleValuesModel.findOne({ uuid }, {}).exec();\n  }\n\n  async getActiveRoleValues() {\n    // return this.roleValuesModel.find({ flags: { active: true } }).sort({ title: 'ASC' }).exec();\n    return this.roleValuesModel\n    .aggregate([\n      {\n        $match: { \"flags\": { active: true }}\n      },\n      {\n        $lookup: {\n          \"from\": \"rolesubmodules\",\n          \"let\": { \"subModules\": \"$subModules\" },\n          \"pipeline\": [\n            { \"$match\": { \"$expr\": { \"$in\": [\"$_id\", \"$$subModules\"] } } }\n          ],\n          \"as\": \"subModules\"\n        }\n      },\n      {\n        $unwind: { path: \"$subModules\", preserveNullAndEmptyArrays: true }\n      },\n      {\n        $group: {\n          _id: {\n            _id: \"$_id\", title: \"$title\", uuid: \"$uuid\",\n            createdOn: \"$createdOn\", flags: \"$flags\"\n          },\n          subModules: {\n            $addToSet: {\n              \"_id\": \"$subModules._id\",\n              \"title\": \"$subModules.title\",\n            }\n          },\n        }\n      },\n      {\n        $project: {\n          \"_id\": '$_id._id',\n          \"title\": '$_id.title',\n          \"uuid\": '$_id.uuid',\n          \"flags\": '$_id.flags',\n          \"createdOn\": '$_id.createdOn',\n          \"subModules\": \"$subModules\",\n        }\n      }\n    ]).sort({ title: 'ASC' }).exec()\n  }\n\n}","import { Injectable } from '@nestjs/common';\nimport { RoleSubModuleInterface } from '@application/api-interfaces'; \nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateRoleSubModulesDTO } from '../dto/create-role-submodules.dto';\nimport { RoleSubModules } from '../schema/role-submodules.schema';\n\n@Injectable()\nexport class RoleSubModulesService {\n  constructor(@InjectModel('RoleSubModules') private roleSubModulesModel: Model<RoleSubModules>) { }\n\n  async create(createRoleSubModulesDTO: CreateRoleSubModulesDTO): Promise<RoleSubModules> {\n    const createdRecord = new this.roleSubModulesModel(createRoleSubModulesDTO);\n    const result = createdRecord.save();\n    console.log('added Record', result);\n    return result;\n  }\n\n  async findAll(): Promise<RoleSubModules[]> {\n    return this.roleSubModulesModel.find().sort({ title: 'ASC' }).exec();\n  }\n\n  async findByUuid(uuid: string): Promise<RoleSubModules> {\n    return this.roleSubModulesModel.findOne({ uuid }, {\n      _id: 1, uuid: 1, title: 1, flags: 1\n    }).exec();\n    \n  }\n\n  async deleteByUuid(uuid: string) {\n    return this.roleSubModulesModel.findOneAndDelete({ uuid }).exec();\n  }\n\n  async editRoleSubModulesByUuid(\n    uuid: string,\n    request: RoleSubModuleInterface\n  ): Promise<RoleSubModules> {\n     this.roleSubModulesModel.findOneAndUpdate({ uuid }, request).exec();\n     return this.roleSubModulesModel.findOne({ uuid }, {}).exec();\n  }\n\n  async getActiveRoleSubModules() {\n\n    return this.roleSubModulesModel.find(  { flags: { active: true } } ).exec();\n\n     \n  }\n\n}","import { RoleInterface } from '@application/api-interfaces';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateRolesDTO } from '../dto/create-roles.dto';\nimport { Roles } from '../schema/roles.schema';\n\n\n@Injectable()\nexport class RolesService {\n  constructor(@InjectModel('Roles') private rolesModel: Model<Roles>) { }\n\n  async create(createRolesDTO: CreateRolesDTO): Promise<Roles> {\n    const createdRoles = new this.rolesModel(createRolesDTO);\n    const result = createdRoles.save();\n    console.log('added Roles', result);\n    return result;\n  }\n\n  async findAll(): Promise<Roles[]> {\n\n    return this.rolesModel\n    .aggregate([\n      {\n        $unwind: { path: \"$rolePermissions\", preserveNullAndEmptyArrays: true }\n      },\n      {\n        $lookup:\n        {\n          from: \"rolemodules\",\n          let: {\n            module: \"$rolePermissions.module\"\n          },\n          pipeline: [{\n              $match: {\n                $expr: { $eq: [ \"$_id\", \"$$module\" ] }\n              }\n            },\n            { $project: { _id: 1 ,title:1,uuid:1} }\n          ],\n          as: \"rolePermissions.module\",\n        }\n      },\n      {\n        $lookup:\n        {\n          from: \"rolesubmodules\",\n          let: {\n            subModules: \"$rolePermissions.subModules\"\n          },\n          pipeline: [\n            { $match  : { \"$expr\": { \"$in\": [\"$_id\", \"$$subModules\"] } } },\n            { $project: { _id: 1 ,title:1,uuid:1} }\n          ],\n          as: \"rolePermissions.subModules\",\n        }\n      },\n      {\n        $group: {\n          _id: {\n            _id: \"$_id\",\n            uuid: \"$uuid\",\n            title : \"$title\",\n            flags:\"$flags\",\n            createdOn:\"$createdOn\"\n          },\n          rolePermissions: {\n            $addToSet: \"$rolePermissions\"\n          }\n        }\n      },\n      {\n        $project: {\n          \"_id\":\"$_id._id\",\n          \"uuid\": '$_id.uuid',\n          \"title\": '$_id.title',\n          \"flags\": '$_id.flags',\n          \"createdOn\": '$_id.createdOn',\n          \"rolePermissions\": '$rolePermissions',\n        }\n      }\n    ]).sort({ title: 'ASC' }).exec()\n  }\n\n\n\n  async findByUuid(uuid: string): Promise<Roles> {\n    // return this.rolesModel.findOne({ uuid }).exec();\n    return this.rolesModel\n    .aggregate([\n      {\n        $match: { \"uuid\": uuid }\n      },\n      {\n        $unwind: { path: \"$rolePermissions\", preserveNullAndEmptyArrays: true }\n      },\n      {\n        $lookup:\n        {\n          from: \"rolemodules\",\n          let: {\n            module: \"$rolePermissions.module\"\n          },\n          pipeline: [{\n              $match: {\n                $expr: { $eq: [ \"$_id\", \"$$module\" ] }\n              }\n            },\n            { $project: { _id: 1 ,title:1,uuid:1} }\n          ],\n          as: \"rolePermissions.module\",\n        }\n      },\n      {\n        $lookup:\n        {\n          from: \"rolesubmodules\",\n          let: {\n            subModules: \"$rolePermissions.subModules\"\n          },\n          pipeline: [\n            { $match  : { \"$expr\": { \"$in\": [\"$_id\", \"$$subModules\"] } } },\n            { $project: { _id: 1 ,title:1,uuid:1} }\n          ],\n          as: \"rolePermissions.subModules\",\n        }\n      },\n      {\n        $group: {\n          _id: {\n            _id: \"$_id\",\n            uuid: \"$uuid\",\n            title : \"$title\",\n            flags:\"$flags\",\n            createdOn:\"$createdOn\",\n            createdBy:\"$createdBy\"\n          },\n          rolePermissions: {\n            $addToSet: \"$rolePermissions\"\n          }\n        }\n      },\n      {\n        $project: {\n          \"_id\":0,\n          \"uuid\": '$_id.uuid',\n          \"title\": '$_id.title',\n          \"flags\":\"$_id.flags\",\n          \"createdOn\": '$_id.createdOn',\n          \"createdBy\":\"$_id.createdBy\",\n          \"rolePermissions\": '$rolePermissions',\n        }\n      }\n    ]).exec()\n  }\n\n\n  async findById(id: any) {\n    let data= this.rolesModel.findOne({ _id:id }).exec();\n    return this.rolesModel\n    .aggregate([\n      {\n        $match: { \"uuid\": (await data).uuid }\n      },\n      {\n        $unwind: { path: \"$rolePermissions\", preserveNullAndEmptyArrays: true }\n      },\n      {\n        $lookup:\n        {\n          from: \"rolemodules\",\n          let: {\n            module: \"$rolePermissions.module\"\n          },\n          pipeline: [{\n              $match: {\n                $expr: { $eq: [ \"$_id\", \"$$module\" ] }\n              }\n            },\n            { $project: { _id: 1 ,title:1,uuid:1} }\n          ],\n          as: \"rolePermissions.module\",\n        }\n      },\n      {\n        $lookup:\n        {\n          from: \"rolesubmodules\",\n          let: {\n            subModules: \"$rolePermissions.subModules\"\n          },\n          pipeline: [\n            { $match  : { \"$expr\": { \"$in\": [\"$_id\", \"$$subModules\"] } } },\n            { $project: { _id: 1 ,title:1,uuid:1} }\n          ],\n          as: \"rolePermissions.subModules\",\n        }\n      },\n      {\n        $group: {\n          _id: {\n            _id: \"$_id\",\n            uuid: \"$uuid\",\n            title : \"$title\",\n            // flags:\"$flags\",\n            // createdOn:\"$createdOn\",\n            // createdBy:\"$createdBy\"\n          },\n          rolePermissions: {\n            $addToSet: \"$rolePermissions\"\n          }\n        }\n      },\n      {\n        $project: {\n          \"_id\":0,\n          \"uuid\": '$_id.uuid',\n          \"title\": '$_id.title',\n          // \"flags\":\"$_id.flags\",\n          // \"createdOn\": '$_id.createdOn',\n          // \"createdBy\":\"$_id.createdBy\",\n          \"rolePermissions\": '$rolePermissions',\n        }\n      }\n    ]).exec()\n  }\n\n\n  async deleteByUuid(uuid: string) {\n    return this.rolesModel.findOneAndDelete({ uuid }).exec();\n  }\n  async editRolesByUuid(\n    uuid: string,\n    request: RoleInterface\n  ): Promise<Roles> {\n    this.rolesModel.findOneAndUpdate({ uuid }, request).exec();\n    return this.rolesModel.findOne({ uuid }, {}).exec();\n  }\n\n  async getActiveRole() {\n    return this.rolesModel.find(  { flags: { active: true } } ).exec();\n\n     \n  }\n}","import { Injectable } from '@nestjs/common';\nimport { TagsInterface } from '@application/api-interfaces';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateAgentTransactionsDTO } from '../dto/create-agent-transactions.dto';\nimport { Coupon } from '../schema/coupon.schema';\nimport { AgentTransactions } from '../schema/agent-transactions.schema';\n\n@Injectable()\nexport class AgentTransactionsService {\n\n  constructor(@InjectModel('AgentTransactions') private agentTransactionsModel: Model<AgentTransactions>,\n    @InjectModel('Coupon') private couponsModel: Model<Coupon>) { }\n\n  async create(createAgentTransactionsDTO: CreateAgentTransactionsDTO): Promise<AgentTransactions> {\n\n    const createdTransaction = new this.agentTransactionsModel(createAgentTransactionsDTO);\n    //let transactionId;\n    let random = Math.floor(Math.random() * 10000000);\n\n    let dateOfPayment = createdTransaction.dateOfPayment;\n    let month = dateOfPayment.getMonth() + 1;\n    let dt = dateOfPayment.getDate();\n    let dt1: any;\n    let month1: any;\n    let currentYear = new Date().getFullYear();\n    let year = currentYear.toString().split('');\n    currentYear = parseInt(year[year.length - 2] + year[year.length - 1]);\n\n    if (dt < 10) {\n      dt1 = '0' + dt;\n    } else { dt1 = dt }\n    if (month < 10) {\n      month1 = '0' + month;\n\n    } else { month1 = month; }\n\n    createdTransaction.transactionId = 'TXN' + random + 'D' + currentYear + month1 + dt1;\n    const result = createdTransaction.save();\n    if ((await result).paymentStatus == \"SUCCESS\") {\n      if ((await result).couponId) {\n        let couponId = (await result).couponId;\n        let paidAmount = (await result).paidAmount;\n\n        let couponData = await this.couponsModel.findOne({ _id: couponId });\n        let agentDueAmount = couponData.agentDueAmount - paidAmount;\n        this.couponsModel.findOneAndUpdate(\n          { _id: couponId },\n          {\n            agentDueAmount: agentDueAmount,\n          },\n        ).exec();\n      }\n    }\n    return result;\n  }\n\n  async getAgentTransactions(): Promise<AgentTransactions[]> {\n\n    return this.agentTransactionsModel.find()\n      .populate({\n        path: \"couponId\",\n        model: \"Coupon\",\n        select: {\n          \"code\": 1,\n          \"discountType\": 1,\n          \"discount\": 1,\n          'agentTotalAmount': 1,\n          'agentDueAmount': 1\n        }\n      })\n      .populate({\n        path: \"agent\",\n        model: \"Faculty\",\n        select: {\n          \"name\": 1,\n          \"specialization\": 1,\n          \"uuid\": 1\n        }\n      })\n      .sort({ dateOfPayment: 'DESC' })\n      .exec();\n\n  }\n  // async findByUuid(uuid: string): Promise<Banner> {\n\n  async AgentTransationsByUuid(id: string) {\n    return await this.agentTransactionsModel.find({ agent: id })\n      .populate({\n        path: \"couponId\",\n        model: \"Coupon\",\n        select: {\n          \"code\": 1,\n          \"discountType\": 1,\n          \"discount\": 1,\n          'agentTotalAmount': 1,\n          'agentDueAmount': 1\n\n        }\n      })\n      .populate({\n        path: \"agent\",\n        model: \"Faculty\",\n        select: {\n          \"name\": 1,\n          \"specialization\": 1,\n          \"uuid\": 1\n        }\n      })\n      .sort({ dateOfPayment: 'DESC' })\n      .exec();\n\n  }\n\n  async findByUuid(uuid: string): Promise<AgentTransactions> {\n    return this.agentTransactionsModel\n      .findOne({ uuid })\n      .populate({\n        path: \"couponId\",\n        model: \"Coupon\",\n        select: {\n          \"code\": 1,\n          \"discountType\": 1,\n          \"discount\": 1,\n          'agentTotalAmount': 1,\n          'agentDueAmount': 1\n        }\n      })\n      .populate({\n        path: \"agent\",\n        model: \"Faculty\",\n        select: {\n          \"name\": 1,\n          \"specialization\": 1,\n          \"uuid\": 1\n        }\n      })\n      .exec()\n  }\n\n  async getTransactionsDateFilter(transactionsInterface) {\n\n    let fromDate = transactionsInterface.fromDate;\n    let toDate = transactionsInterface.toDate;\n\n    return this.agentTransactionsModel.find({\n      dateOfPayment: {\n        $gte: fromDate,\n        $lte: toDate\n      }\n    })\n    .populate({\n      path: \"couponId\", \n      model:\"Coupon\", \n      select: {\n        \"code\": 1,\n        \"discountType\":1,\n        \"discount\":1,\n        'agentTotalAmount':1,\n        'agentDueAmount':1\n\n       }\n    })\n    .populate({\n      path: \"agent\", \n      model:\"Faculty\", \n      select: {\n        \"name\": 1,\n        \"specialization\":1,\n        \"uuid\":1\n       }\n    })\n    .sort({ dateOfPayment: 'DESC' })\n    .exec();\n\n  }\n\n\n}","import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport * as mongoose from 'mongoose';\nimport { CreatePearlSubjectsDto } from '../dto/create-pearl-subjects.dto';\nimport { PearlSubjects } from '../schema';\nimport { PearlSubjectInputInterface, PeralSubjectInterface } from '@application/api-interfaces';\nimport { ObjectId } from 'mongodb';\n\n@Injectable()\nexport class PearlSubjectsService {\n  constructor(\n    @InjectModel('PearlSubjects') private PearlSubjectsModel: Model<PearlSubjects>\n  ) { }\n\n\n  // async  checkSubjectPearl(subjectId){\n  //     let subjectData=[];\n  //     return subjectData=await this.PearlSubjectsModel.find({ \"subjectId\" : subjectId }).exec();\n\n  //   }\n\n\n  // async addPearlSubjects(pearlSubjects : PearlSubjectInputInterface){\n  //  // console.log('ssssubjectId',pearlSubjects.subjectId);\n  //   let subjectId=pearlSubjects.subjectId;\n  //   let chapterId=pearlSubjects.chapterId;\n  //   let pearlId=pearlSubjects.pearlId;\n\n  //  // console.log('subjectId',subjectId);\n\n  //   let subjectData=await this.PearlSubjectsModel.find({ \"subjectId\": subjectId }).exec();\n\n  //   console.log('subjectData.length',subjectData.length);\n  //   if(subjectData.length > 0){\n\n  //     let db_chapter=await this.PearlSubjectsModel.aggregate([\n  //       {$match:{ \"subjectId\" : mongoose.Types.ObjectId(subjectId) } },\n  //       {$unwind: \"$chapter\"},\n  //       {$match: {'chapter.chapterId': mongoose.Types.ObjectId(chapterId)}}\n  //       ]).exec();\n\n\n  //     if(db_chapter.length > 0 ){\n  //       console.log('chapter_exists')\n  //       return this.PearlSubjectsModel.findOneAndUpdate(\n  //         { subjectId: subjectId },\n  //         { $push: { \"chapter.$[elem].pearlIds\": pearlId  } },\n  //         {\n  //           arrayFilters: [{ \"elem.chapterId\": { $eq: chapterId } } ]\n  //         },\n  //       ).exec();\n  //     }else{\n  //       console.log('chapter_noT_exists')\n  //       let chapter={ \"chapterId\": chapterId, \"pearlIds\": [ pearlId ] }\n  //       return this.PearlSubjectsModel.findOneAndUpdate(\n  //         { subjectId: subjectId },\n  //         { $push: { \"chapter\": chapter  } }\n  //       ).exec();\n\n  //     }\n  //   }else{\n  //     let new_subject={\n  //       \"subjectId\":subjectId,\n  //       \"chapter\":[{\n  //         \"chapterId\":chapterId,\n  //         \"pearlIds\": [pearlId],\n  //       }]\n  //     }\n  //     //console.log('new_subject',new_subject)\n  //   const createdPearlSubjects = new this.PearlSubjectsModel(new_subject);\n  //   const result =await createdPearlSubjects.save();\n  //   return result;\n  //   }\n  // }\n\n\n  async addPearlSubjects(request: any) {\n    console.log('request', request);\n    let uuid = request.uuid;\n    let createdOn = request.createdOn;\n    let createdBy = request.createdBy;\n\n    let requestSubject = request.subject;\n    for (var j = 0; j < requestSubject.length; j++) {\n\n      let subjectId = requestSubject[j].subjectId;\n      let chapterId = requestSubject[j].chapterId;\n      let pearlId = requestSubject[j].pearlId;\n      let qUuid = requestSubject[j].qUuid;\n      let subjectData: any;\n      // console.log('subjectId',subjectId);\n\n      subjectData = await this.PearlSubjectsModel.find({ \"subjectId\": subjectId }).exec();\n\n      console.log('subjectData.length', subjectData.length);\n      if (subjectData.length > 0) {\n\n        let db_chapter = await this.PearlSubjectsModel.aggregate([\n          { $match: { \"subjectId\": mongoose.Types.ObjectId(subjectId) } },\n          { $unwind: \"$chapter\" },\n          { $match: { 'chapter.chapterId': mongoose.Types.ObjectId(chapterId) } }\n        ]).exec();\n\n\n        if (db_chapter.length > 0) {\n          console.log('chapter_exists')\n          this.PearlSubjectsModel.findOneAndUpdate(\n            { subjectId: subjectId },\n            { $push: { \"chapter.$[elem].pearlIds\": { \"pearlId\": mongoose.Types.ObjectId(pearlId) } } },\n            {\n              arrayFilters: [{ \"elem.chapterId\": { $eq: chapterId } }]\n            },\n          ).exec();\n        } else {\n          console.log('chapter_noT_exists')\n          let chapter = { \"chapterId\": chapterId, \"pearlIds\": [{ \"pearlId\": mongoose.Types.ObjectId(pearlId) }] }\n          this.PearlSubjectsModel.findOneAndUpdate(\n            { subjectId: subjectId },\n            { $push: { \"chapter\": chapter } }\n          ).exec();\n\n        }\n      } else {\n        console.log('pearlId', pearlId);\n\n        let new_subject = {\n          \"uuid\": uuid,\n          \"qUuid\": qUuid,\n          \"subjectId\": subjectId,\n          \"chapter\": [{\n            \"chapterId\": chapterId,\n            \"pearlIds\": [{ \"pearlId\": mongoose.Types.ObjectId(pearlId) }],\n          }],\n          \"createdOn\": createdOn,\n          \"createdBy\": createdBy\n        }\n        console.log('new_subject', new_subject)\n        const createdPearlSubjects = new this.PearlSubjectsModel(new_subject);\n        const result = await createdPearlSubjects.save();\n        //return result;\n      }\n    }\n\n  }\n\n  async getSubjectsAndChapters(pearlId: string) {\n\n    console.log('pearlId', pearlId);\n    return this.PearlSubjectsModel.aggregate([\n      { $unwind: \"$chapter\" },\n\n      {\n        '$project': {\n          'cu': '$chapter',\n          's': '$subjectId',\n          'qUuids': '$qUuid'\n        }\n      },\n\n      {\n        '$project': {\n          'z': '$cu.pearlIds',\n          'zc': '$cu.chapterId',\n          'ss': '$s',\n          'qqUuuid': '$qUuids',\n        },\n\n      },\n\n\n      {\n        $lookup: // Equality Match\n        {\n          from: \"syllabuses\",\n          localField: \"ss\",\n          foreignField: \"_id\",\n          as: \"subjectName\",\n        }\n      },\n\n      {\n        $lookup: // Equality Match\n        {\n          from: \"syllabuses\",\n          localField: \"zc\",\n          foreignField: \"_id\",\n          as: \"chapterName\",\n        }\n      },\n\n\n\n      {\n        \"$match\": {\n\n          \"z\": { \"pearlId\": mongoose.Types.ObjectId(pearlId) },\n        }\n      },\n\n\n      {\n        $unwind: \"$subjectName\"\n      },\n\n      {\n        $unwind: \"$chapterName\"\n      },\n\n\n      {\n        $group: {\n          _id: {\n            chapterId: \"$chapterName._id\",\n            chapterUuid: \"$chapterName.uuid\",\n            chapterName: \"$chapterName.title\",\n          },\n\n\n          // $addFields: {\n          //    \"subjectId\": \"$subjectName._id\"\n          // },\n\n\n          //subject: {$addToSet: \"$subjectName._id\" },\n\n          //subject: { $push:  { subjectId: \"$subjectName._id\",subjectUuid: \"$subjectName.uuid\", subjectName: \"$subjectName.title\" } }\n\n          subject: {\n            $push: {\n              syllabus: {\n                _id: \"$subjectName._id\",\n              },\n              uuid: \"$qqUuuid\",\n              title: \"$subjectName.title\",\n              chapters: [{\n                _id: \"$chapterName._id\",\n                uuid: \"$chapterName.uuid\",\n                title: \"$chapterName.title\",\n              }],\n            }\n          }\n\n        },\n\n      },\n\n\n\n\n      {\n        $project: {\n          \"_id\": 0,\n          //\"chapter\":\"$_id\",\n          \"subject\": \"$subject\",\n\n        }\n      },\n\n\n\n\n    ]).exec();\n\n\n  }\n\n\n  async editPearlSubjectByUuid(\n    subjectId: string,\n    request: PearlSubjectInputInterface\n  ): Promise<PearlSubjects> {\n    return this.PearlSubjectsModel.findOneAndUpdate({ subjectId }, request).exec();\n\n  }\n\n  async updatePearlSubjects(request: any) {\n\n    //let deleteSubject:any;\n    let deleteArray = request.deleteArray;\n    //let objectIdArray = deleteSubject.map(s => mongoose.Types.ObjectId(s));\n    //console.log(objectIdArray);\n    for (var j = 0; j < deleteArray.length; j++) {\n\n      this.PearlSubjectsModel.findOneAndUpdate(\n        { subjectId: deleteArray[j].subjectId },\n        {\n          //$pull: { \"chapter.$.chapterId\": { chapterId: mongoose.Types.ObjectId(deleteSubject[j].chapterId) } },\n          $pull: { \"chapter.$[outer].pearlIds\": { \"pearlId\": mongoose.Types.ObjectId(deleteArray[j].pearlId) } },\n        },\n        {\n          arrayFilters: [\n            { \"outer.chapterId\": mongoose.Types.ObjectId(deleteArray[j].chapterId) },\n          ]\n        }\n      ).exec();\n\n    }\n    // this.PearlSubjectsModel.remove({ subjectId: { $in: objectIdArray } }).exec();\n\n    let uuid = request.uuid;\n    let modifiedOn = request.modifiedOn;\n    let modifiedBy = request.modifiedBy;\n\n    let requestSubject = request.subject;\n\n    for (var j = 0; j < requestSubject.length; j++) {\n\n      let subjectId = requestSubject[j].subjectId;\n      let chapterId = requestSubject[j].chapterId;\n      let pearlId = requestSubject[j].pearlId;\n      let qUuid = requestSubject[j].qUuid;\n      let subjectData: any;\n      // console.log('subjectId',subjectId);\n\n      subjectData = await this.PearlSubjectsModel.find({ \"subjectId\": subjectId }).exec();\n\n      console.log('subjectData.length', subjectData.length);\n      if (subjectData.length > 0) {\n\n        let db_chapter = await this.PearlSubjectsModel.aggregate([\n          { $match: { \"subjectId\": mongoose.Types.ObjectId(subjectId) } },\n          { $unwind: \"$chapter\" },\n          { $match: { 'chapter.chapterId': mongoose.Types.ObjectId(chapterId) } }\n        ]).exec();\n\n\n        if (db_chapter.length > 0) {\n          console.log('chapter_exists')\n          this.PearlSubjectsModel.findOneAndUpdate(\n            { subjectId: subjectId },\n            { $addToSet: { \"chapter.$[elem].pearlIds\": { \"pearlId\": mongoose.Types.ObjectId(pearlId) } } },\n            {\n              arrayFilters: [{ \"elem.chapterId\": { $eq: chapterId } }]\n            },\n          ).exec();\n        } else {\n          console.log('chapter_noT_exists')\n          let chapter = { \"chapterId\": chapterId, \"pearlIds\": [{ \"pearlId\": mongoose.Types.ObjectId(pearlId) }] }\n          this.PearlSubjectsModel.findOneAndUpdate(\n            { subjectId: subjectId },\n            { $push: { \"chapter\": chapter } }\n          ).exec();\n\n        }\n      } else {\n        let new_subject = {\n          \"uuid\":uuid,\n          \"qUuid\": qUuid,\n          \"subjectId\": subjectId,\n          \"chapter\": [{\n            \"chapterId\": chapterId,\n            \"pearlIds\": [{ \"pearlId\": mongoose.Types.ObjectId(pearlId) }],\n          }],\n          \"modifiedOn\": modifiedOn,\n          \"modifiedBy\": modifiedBy\n        }\n        console.log('new_subject', new_subject)\n        const createdPearlSubjects = new this.PearlSubjectsModel(new_subject);\n        const result = await createdPearlSubjects.save();\n        return result;\n      }\n    }\n\n  }\n}","import { SubscriptionInterface } from '@application/api-interfaces';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { identity } from 'rxjs';\nimport { CreateSubscriptionDto } from '../dto';\nimport { VideoSubject, SuggestedVideos } from '../schema';\n//import { Course, QBank, QBankSubject, Syllabus } from '../schema';\n\n@Injectable()\nexport class SuggestedVideosService {\n\n  constructor(\n    @InjectModel('SuggestedVideos') private suggestedVideosModel: Model<SuggestedVideos>,\n    @InjectModel('VideoSubject') private videoSubjectModel: Model<VideoSubject>,\n\n  ) { }\n\n  async create(request) {\n    let courseId = request.courseId;\n    let subjectId = request.subjectId;\n    let chapterId = request.chapterId;\n    let videoUuid = request.videoUuid;\n    let status = request.status;\n    let videoData: any;\n    videoData = await this.suggestedVideosModel.find(\n      {\n        \"courseId\": courseId,\n        \"subjectId\": subjectId,\n        \"chapterId\": chapterId,\n        \"videoUuid\": videoUuid\n      }\n    ).exec();\n    if (videoData.length > 0) {\n\n      this.suggestedVideosModel.findOneAndUpdate(\n        // filter and push to the object\n        { courseId: courseId, subjectId: subjectId, chapterId: chapterId, videoUuid: videoUuid },\n\n        // filter and set to the object\n        {\n          $set: { \"status\": status },\n        },\n\n      ).exec();\n      return videoData\n    } else {\n      if (status == true) {\n        const createdSuggestedVideos = new this.suggestedVideosModel(request);\n        const result = await createdSuggestedVideos.save();\n        return result\n      }\n    }\n\n  }\n  async updateStatus(id, status) {    \n    return this.suggestedVideosModel.findOneAndUpdate(\n      { _id: id },\n      {\n        \"status\": status.status,\n      },\n    ).exec();\n  }\n  async deleteByCourse(courseId) {    \n    let data =await this.suggestedVideosModel.find(\n      { courseId: courseId}\n    ).exec();\n    console.log('data8978',data);\n    \n    data.map(res=>{\n      this.suggestedVideosModel.findOneAndDelete(\n        { _id: res._id }\n      ).exec();\n    })\n  }\n  async findAll(): Promise<SuggestedVideos[]> {\n    //return 1;\n    let new_result = [];\n    await this.suggestedVideosModel.find()\n      .populate({\n        path: 'courseId',\n        select: {\n          \"uuid\": 1,\n          \"title\": 1,\n          \"_id\": 1,\n        }\n      })\n      .populate({\n        path: 'subjectId',\n\n        select: {\n          \"uuid\": 1,\n          \"title\": 1,\n          \"_id\": 1,\n\n\n        }\n      }).populate({\n        path: 'chapterId',\n\n        select: {\n          \"uuid\": 1,\n          \"title\": 1,\n          \"_id\": 1,\n\n\n        }\n      }).exec().then(async videos => {\n        for (var k = 0; k < videos.length; k++) {\n          let videoss = await this.videoSubjectModel\n            .aggregate([\n              { $match: { \"chapters.videos.uuid\": videos[k]['videoUuid'] } },\n              { $unwind: \"$chapters\" },\n              {\n                $addFields: {\n                  \"chapters.videos\": {\n                    $filter: {\n                      input: \"$chapters.videos\",\n                      cond: { $eq: [\"$$this.uuid\", videos[k]['videoUuid']] }\n                    }\n                  }\n                }\n              }\n            ])\n            .exec()\n            .then(res => {\n              let totalres = res.filter(it => it.chapters.videos.length > 0)[0].chapters.videos[0];\n              // console.log('totalrestotalres', totalres.title);\n              // return totalres\n              return { title: totalres.title, uuid: totalres.uuid };\n            })\n            .catch(err => err);\n          // console.log('videoss',videoss);\n\n          new_result.push({\n            _id: videos[k]._id,\n            course: videos[k].courseId,\n            subject: videos[k].subjectId,\n            chapter: videos[k].chapterId,\n            video: videoss,\n            status: videos[k].status,\n            createdOn: videos[k].createdOn\n          })\n        };\n\n      }).catch(err => err);\n\n    return new_result;\n  }\n\n\n\n\n\n\n}","import { SubscriptionInterface } from '@application/api-interfaces';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateSubscriptionDto } from '../dto';\nimport { SuggestedTests } from '../schema/suggested-tests.schema';\nimport { TSCategories } from '../schema';\n\n@Injectable()\nexport class SuggestedTestsService {\n\n    constructor(\n        @InjectModel('SuggestedTests') private suggestedTestsModel: Model<SuggestedTests>,\n        @InjectModel('TSCategories') private testSeriesModel: Model<TSCategories>,\n\n    ) { }\n\n    async create(request) {\n        // let request=  requ.CreateSuggestedTestsDto\n        let courseId = request.courseId;\n        let categoryId = request.categoryId;\n        let testUuid = request.testUuid;\n        let status = request.status;\n\n        let testData: any;\n\n        testData = await this.suggestedTestsModel.find(\n            {\n                \"courseId\": courseId,\n                \"categoryId\": categoryId,\n                \"testUuid\": testUuid\n            }\n        ).exec();\n        console.log('testData', testData);\n\n        if (testData.length > 0) {\n\n            this.suggestedTestsModel.findOneAndUpdate(\n                // filter and push to the object\n                { courseId: courseId, categoryId: categoryId, testUuid: testUuid },\n\n                // filter and set to the object\n                {\n                    $set: { \"status\": status },\n                },\n\n            ).exec();\n            return testData\n\n        } else {\n            console.log('requestrequest', request);\n\n            const createdSuggestedTests = new this.suggestedTestsModel(request);\n            const result = await createdSuggestedTests.save();\n            return result\n        }\n\n    }\n\n    async updateStatus(id, status) {\n        return this.suggestedTestsModel.findOneAndUpdate(\n            { _id: id },\n            {\n                \"status\": status.status,\n            },\n        ).exec();\n    }\n\n    async findAll(): Promise<SuggestedTests[]> {\n        //return 1;\n        let new_result = [];\n        await this.suggestedTestsModel.find()\n            .populate({\n                path: 'courseId',\n                select: {\n                    \"uuid\": 1,\n                    \"title\": 1,\n                    \"_id\": 1,\n                }\n            })\n            .populate({\n                path: 'categoryId',\n                select: {\n                    \"uuid\": 1,\n                    \"categories.title\": 1,\n                    \"_id\": 1,\n                }\n            })\n            .exec().then(async tests => {\n                for (var k = 0; k < tests.length; k++) {\n                    let testss = await this.testSeriesModel\n                        .aggregate([\n                            { $match: { \"categories.tests.uuid\": tests[k]['testUuid'] } },\n                            { $unwind: \"$categories\" },\n                            {\n                                $addFields: {\n                                    \"categories.tests\": {\n                                        $filter: {\n                                            input: \"$categories.tests\",\n                                            cond: { $eq: [\"$$this.uuid\", tests[k]['testUuid']] }\n                                        }\n                                    }\n                                }\n                            }\n                        ])\n                        .exec()\n                        .then(res => {\n                            let totalres = res.filter(it => it.categories.tests.length > 0)[0].categories.tests[0];\n                            return { title: totalres.title, uuid: totalres.uuid };\n                        })\n                        .catch(err => err);\n\n                    new_result.push({\n                        _id: tests[k]._id,\n                        course: tests[k].courseId,\n                        category: tests[k].categoryId,\n                        test: testss,\n                        status: tests[k].status,\n                        createdOn: tests[k].createdOn\n                    })\n                };\n\n            }).catch(err => err);\n\n        return new_result;\n    }\n\n\n}","import { SubscriptionInterface } from '@application/api-interfaces';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateSubscriptionDto } from '../dto';\nimport { QBankSubject } from '../schema';\nimport { SuggestedQbank } from '../schema/suggested-qbank.schema';\n//import { Course, QBank, QBankSubject, Syllabus } from '../schema';\n\n@Injectable()\nexport class SuggestedQbankService {\n\n  constructor(\n\n    @InjectModel('SuggestedQbank') private suggestedQbankModel: Model<SuggestedQbank>,\n    @InjectModel('QBankSubject') private qbankSubjectModel: Model<QBankSubject>\n  ) { }\n\n  async create(request) {\n\n    let courseId = request.courseId;\n    let subjectId = request.subjectId;\n    let chapterId = request.chapterId;\n    let qbankUuid = request.qbankUuid;\n    let status = request.status;\n\n    let qbankData: any;\n\n    qbankData = await this.suggestedQbankModel.find(\n      {\n        \"courseId\": courseId,\n        \"subjectId\": subjectId,\n        \"chapterId\": chapterId,\n        \"qbankUuid\": qbankUuid\n      }\n    ).exec();\n    if (qbankData.length > 0) {\n\n      this.suggestedQbankModel.findOneAndUpdate(\n        // filter and push to the object\n        { courseId: courseId, subjectId: subjectId, chapterId: chapterId, qbankUuid: qbankUuid },\n\n        // filter and set to the object\n        {\n          $set: { \"status\": status },\n        },\n\n      ).exec();\n      return qbankData\n    } else {\n      if (status == true) {\n        const createdSuggestedQbank = new this.suggestedQbankModel(request);\n        const result = await createdSuggestedQbank.save();\n        return result\n      }\n\n    }\n\n  }\n  async updateStatus(id, status) {\n    return this.suggestedQbankModel.findOneAndUpdate(\n      { _id: id },\n      {\n        \"status\": status.status,\n      },\n    ).exec();\n  }\n\n  async findAll(): Promise<SuggestedQbank[]> {\n    //return 1;\n    let new_result = [];\n    await this.suggestedQbankModel.find()\n      .populate({\n        path: 'courseId',\n        select: {\n          \"uuid\": 1,\n          \"title\": 1,\n          \"_id\": 1,\n        }\n      })\n      // .populate({\n      //   path: 'subjectId',\n\n      //   select: {\n      //     \"uuid\": 1,\n      //     \"title\": 1,\n      //     \"_id\": 1,\n\n\n      //   }\n      // })\n      .populate({\n        path: 'chapterId',\n\n        select: {\n          \"uuid\": 1,\n          \"title\": 1,\n          \"_id\": 1,\n\n\n        }\n      }).exec().then(async topics => {\n        for (var k = 0; k < topics.length; k++) {\n          var result = await this.qbankSubjectModel.findOne({ _id: topics[k]['subjectId'] }, { syllabus: 1 })\n            .populate({\n              path: 'syllabus',\n              select: {\n                \"uuid\": 1,\n                \"title\": 1,\n                \"_id\": 1,\n              }\n            })\n          console.log('result8978', result);\n          let topicss = await this.qbankSubjectModel\n            .aggregate([\n              { $match: { \"chapters.topics.uuid\": topics[k]['qbankUuid'] } },\n              { $unwind: \"$chapters\" },\n              {\n                $addFields: {\n                  \"chapters.topics\": {\n                    $filter: {\n                      input: \"$chapters.topics\",\n                      cond: { $eq: [\"$$this.uuid\", topics[k]['qbankUuid']] }\n                    }\n                  }\n                }\n              }\n            ])\n            .exec()\n            .then(res => {\n              let totalres = res.filter(it => it.chapters.topics.length > 0)[0].chapters.topics[0];\n              return { title: totalres.title, uuid: totalres.uuid };\n            })\n            .catch(err => err);\n          new_result.push({\n            _id: topics[k]._id,\n            course: topics[k].courseId,\n            // subject: topics[k].subjectId,\n            subject: result.syllabus,\n            chapter: topics[k].chapterId,\n            topic: topicss,\n            status: topics[k].status,\n            createdOn: topics[k].createdOn\n          })\n        };\n\n      }).catch(err => err);\n\n    return new_result;\n  }\n\n}","import { SubscriptionInterface } from '@application/api-interfaces';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateSubscriptionDto } from '../dto';\nimport { MCQOfTheDay } from '../schema/mcq-of-the-day.schema';\n//import { Course, QBank, QBankSubject, Syllabus } from '../schema';\nimport { Course, Question,User } from '../schema';\nimport { firebase } from './../../../../../config/firebase-configuration';\nimport { FirebaseService } from './firebase-service';\n\n@Injectable()\nexport class MCQOfTheDayService {\n\n  constructor(\n\n    private readonly firebaseService: FirebaseService,\n    @InjectModel('MCQOfTheDay') private mCQOfTheDayModel: Model<MCQOfTheDay>,\n    @InjectModel('User') private userModel: Model<User>,\n    @InjectModel('Course') private courseModel: Model<Course>,\n    @InjectModel('Question') private questionModel: Model<Question>,\n  ) { }\n\n  async create(request) {\n\n    let courseId = request.courseId;\n    let subjectId = request.subjectId;\n    let questionId = request.questionId;\n    let status = request.status;\n\n    let qbankData: any;\n\n    qbankData = await this.mCQOfTheDayModel.find(\n      {\n        \"courseId\": courseId,\n        \"subjectId\": subjectId,\n        \"questionId\": questionId\n      }\n    ).exec();\n    if (qbankData.length > 0) {\n\n      this.mCQOfTheDayModel.findOneAndUpdate(\n        // filter and push to the object\n        { courseId: courseId, subjectId: subjectId, questionId: questionId },\n\n        // filter and set to the object\n        {\n          $set: { \"status\": status },\n        },\n\n      ).exec();\n       return qbankData\n    } else {\n      if (status == true) {\n      await this.mCQOfTheDayModel.updateMany({ status: true },\n          {\n            $set: { \"status\": false },\n          },\n        ).exec();\n        const createdSuggestedQbank = new this.mCQOfTheDayModel(request);\n        const result = await createdSuggestedQbank.save();\n        return result\n      }\n\n    }\n\n  }\n\n  async updateStatus(id, status) {\n    return this.mCQOfTheDayModel.findOneAndUpdate(\n      { _id: id },\n      {\n        \"status\": status.status,\n      },\n    ).exec();\n  }\n\n  async getMCQs(){\n    //return 1;\n    return this.mCQOfTheDayModel.find()\n      .populate({\n        path: 'courseId',\n        select: {\n          \"uuid\": 1,\n          \"title\": 1,\n          \"_id\": 1,\n        }\n      })\n      .populate({\n        path: 'subjectId',\n        select: {\n          \"uuid\": 1,\n          \"title\": 1,\n          \"_id\": 1,\n        }\n      }).populate({\n        path: 'questionId',\n        select: {\n          \"uuid\": 1,\n          \"_id\": 1,\n          \"title\": 1,\n          \"options\":1,\n          \"matchRightSideOptions\":1,\n          \"matchLeftSideOptions\":1,\n          \"imgUrl\":1,\n          \"type\":1,\n        }\n      }).exec()\n\n  }\n\n\nasync updateMcqOfTheDay() {\n\n    var courses = await this.courseModel.find().exec();\n    courses.map(async course => {\n      var courseId = course._id;\n      var length = course.syllabus.length\n      var key = Math.floor(Math.random() * (length - 1) + 1)\n      if (course.syllabus[key]) {\n        var subjectId = course.syllabus[key];\n\n        var questionModel = await this.checkQuestionsExistOrNot(subjectId, courseId)\n        if (questionModel) {\n\n        } else {\n          var subjectId = course.syllabus[Math.floor(Math.random() * (length - 1) + 1)];\n          questionModel = await this.checkQuestionsExistOrNot(subjectId, courseId)\n        }\n        if (questionModel) {\n          var questionId = questionModel._id;\n          let status = true;\n          var request = {\n            courseId: courseId,\n            questionId: questionId,\n            subjectId: subjectId,\n            status: status,\n            createdOn: new Date(),\n            createdBy: {\n              uuid: \"f4022395-51f8-4801-ab35-124db1a76e52\",\n              name: \"Plato\"\n            }\n          };\n          await this.mCQOfTheDayModel.updateMany({ courseId: courseId, status: true },\n            {\n              $set: { \"status\": false },\n            },\n          ).exec();\n          const createdSuggestedQbank = new this.mCQOfTheDayModel(request);\n          const result = await createdSuggestedQbank.save();\n        }\n      }\n    })\n    return '';\n    return [];\n\n  }\n\n  async checkQuestionsExistOrNot(syllabus, courseId) {\n    var question = await this.questionModel.findOne({ syllabus: syllabus,mathType:'no','flags.active':true }).exec();\n\n    if (question) {\n      var existOrNot = await this.mCQOfTheDayModel.findOne(\n        {\n          \"courseId\": courseId,\n          \"subjectId\": syllabus,\n          \"questionId\": question._id\n        }\n      ).exec();\n      if (existOrNot) {\n        var question = await this.questionModel.findOne({ syllabus: syllabus,mathType:'no','flags.active':true }).exec();\n        if (question) {\n          return question;\n        }\n        return null;\n      } else {\n\n        return question;\n      }\n    } else {\n      return null;\n    }\n\n  }\n\n  async sendPushNotificationMCQOfTheOfDay() {\n\n    const mcqOfTheDay = await this.mCQOfTheDayModel.aggregate([\n      { $match: { status: true } },\n      {\n        $lookup: {\n          \"from\": \"questions\",\n          \"let\": { \"questionId\": \"$questionId\" },\n          \"pipeline\": [\n            { \"$match\": { \"$expr\": { \"$eq\": [\"$_id\", \"$$questionId\"] } } }\n          ],\n          \"as\": \"questions\"\n        }\n      },\n      { $unwind: \"$questions\" },\n    ]).exec();\n    mcqOfTheDay.map(async mcq => {\n      var data = {\n        title: \"MCQ Of The Day\",\n        body: mcq.questions.title.replace(/<\\/?[^>]+(>|$)/g, \"\"),\n        icon: mcq.questions.imgUrl,\n        notificationType: \"courses\"\n      };\n      var shortTitle = \"MCQ OF the Day\";\n      var branchUrl = '';\n      try {\n        shortTitle  = mcq.questions.shortTitle\n      \n        let branchPayload = {\n          \"branch_key\": \"key_live_jj8zAGPOliW8euvIDwQWUemjssfsR1yK\",\n          \"channel\": \"plato\",\n          \"feature\": \"mcq\",\n          \"campaign\": \"MCQ OF the Day\",\n          \"stage\": \"MCQ of the day\",\n          \"tags\": [\"questions\"],\n          \"data\": {\n            \"$canonical_identifier\": \"mcq\",\n            \"$og_title\": shortTitle,\n            \"$og_description\": shortTitle,\n            \"questionId\": mcq.questions._id\n          }\n        }\n        var request = require('request')\n        var optionss = {\n          'method': 'POST',\n          'url': 'https://api2.branch.io/v1/url',\n          'headers': {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(branchPayload)\n        };\n        var url = ''\n        const result = new Promise((resolve, reject) => {\n          request(optionss, function(error, response) {\n            if (error) return reject(error);\n            return resolve(JSON.parse(response.body));\n          });\n        })\n        var fromapi = await result;\n        branchUrl = fromapi['url'];\n      }catch (e) {\n        shortTitle = \"question Test\";\n      }\n      const message = {\n        \n        data: {\n          creatorName: 'Plato',\n          title: data.title,\n          body: data.body,\n          color: '#2eb5dd',\n          imagePath: data.icon,\n          branch: branchUrl ? branchUrl : ''\n        }\n      }\n      const registrationToken = [];\n      const userIds = [];\n      const options = {\n        priority: \"high\",\n        timeToLive: 60 * 60 * 24\n      };\n\n      var users = await this.userModel.find({\n        \"devices.isLoggedIn\": true,\n        'flags.isActive': true, 'courses':mcq.courseId\n      }, { uuid: 1, devices: 1 }).exec().then(user => {\n        user.map(details => {\n          details.devices.forEach(element => {\n            if (element.isLoggedIn == true) {\n              registrationToken.push(element.id)\n            }\n          });\n        })\n      })\n\n      if (registrationToken.length > 0) {\n        const chunkSize = 999;\n        for (let i = 0; i < registrationToken.length; i += chunkSize) {\n          const chunk = registrationToken.slice(i, i + chunkSize);\n          firebase.messaging().sendToDevice(chunk, message, options).then(response => {\n            console.log(response);\n          }).catch(error => {\n            console.log(error);\n          });\n        }\n      }\n    });\n  }\n\n\n\n}","import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { NotificationDto } from './../dto/notification.dto';\nimport * as Uuid from 'uuid';\nimport {\n  User,\n  Notifications,\n  Subscription,\n  UserNotifications,\n  Course,\n  Organization,\n} from '../schema';\n\nimport { FirebaseService } from './firebase-service';\n\n@Injectable()\nexport class NotificationService {\n  constructor(\n    private readonly firebaseService: FirebaseService,\n    @InjectModel('Course') private courseModel: Model<Course>,\n    @InjectModel('Organization') private organazationModel: Model<Organization>,\n    @InjectModel('User') private userModel: Model<User>,\n    @InjectModel('Notifications')\n    private notificationsModel: Model<Notifications>,\n    @InjectModel('Subscription') private subscriptionModel: Model<Subscription>,\n    @InjectModel('UserNotifications')\n    private userNotificationsModel: Model<UserNotifications>\n  ) {}\n\n  async sendNotification(body:any, employee:any): Promise<any> {\n    try { \n\n      var  instanceName = 'plato-online';\n    \n      if(body.courses.length > 0){\n        const empCourses = await this.courseModel.findOne({_id:{$in:body.courses}})\n        const empOrganazation = await this.organazationModel.findOne({_id:{$in:empCourses.organizations}}).exec()\n\n        if(empOrganazation.firebase){\n          instanceName = empOrganazation.firebase;\n        }\n      }else{\n        const empOrganazation = await this.organazationModel.findOne({_id:{$in:employee.organizations}}).exec()\n        if(empOrganazation.firebase){\n          instanceName = empOrganazation.firebase;\n        }\n      }\n\n      \n      const firebase = this.firebaseService.getInstance(instanceName);\n\n      var icon = '';\n      if (body.icon) {\n        icon = body.icon;\n      }\n      const message = {\n        data: {\n          creatorName: instanceName,\n          title: body.title,\n          body: body.message,\n          imageUrl: icon,\n          branch: body.branchUrl,\n        },\n        // notification: {\n        //   title: body.title,\n        //   body: body.message,\n        //   imageUrl: icon,\n        //   branch: body.branchUrl,\n        // },\n      };\n      const registrationToken = [];\n      const userIds = [];\n      const options = {\n        priority: 'high',\n        timeToLive: 60 * 60 * 24,\n      };\n      var payload = body;\n      payload.uuid = Uuid.v4();\n      if (body.notificationType == 'allUsers') {\n        var users = await this.userModel\n          .find(\n            { 'devices.isLoggedIn': true, 'flags.isActive': true },\n            { uuid: 1, devices: 1 }\n          )\n          .exec()\n          .then((user) => {\n            user.map((details) => {\n              details.devices.forEach((element) => {\n                if (element.isLoggedIn == true) {\n                  registrationToken.push(element.id);\n                }\n              });\n              userIds.push(details._id);\n            });\n            payload.users = userIds;\n          });\n      } else if (body.notificationType == 'subscriptions') {\n        var subscriptions = body.subscriptions;\n        var users = await this.userModel\n          .find(\n            {\n              'devices.isLoggedIn': true,\n              'flags.isActive': true,\n              'subscriptions.subscription_id': subscriptions,\n            },\n            { uuid: 1, devices: 1 }\n          )\n          .exec()\n          .then((user) => {\n            user.map((details) => {\n              details.devices.forEach((element) => {\n                if (element.isLoggedIn == true) {\n                  registrationToken.push(element.id);\n                }\n              });\n              userIds.push(details._id);\n            });\n            payload.users = userIds;\n          });\n      } else if (body.notificationType == 'selectedUsers') {\n        var selectedUsers = body.selectedUsers;\n        var users = await this.userModel\n          .find(\n            {\n              'devices.isLoggedIn': true,\n              _id: selectedUsers,\n              'flags.isActive': true,\n            },\n            { uuid: 1, devices: 1 }\n          )\n          .exec()\n          .then((user) => {\n            user.map((details) => {\n              details.devices.forEach((element) => {\n                if (element.isLoggedIn == true) {\n                  registrationToken.push(element.id);\n                }\n              });\n              userIds.push(details._id);\n            });\n            payload.users = userIds;\n          });\n      } else if (body.notificationType == 'userFile') {\n        var userFile = body.userFile;\n        var users = await this.userModel\n          .find(\n            {\n              'devices.isLoggedIn': true,\n              mobile: userFile,\n              'flags.isActive': true,\n            },\n            { uuid: 1, devices: 1 }\n          )\n          .exec()\n          .then((user) => {\n            user.map((details) => {\n              details.devices.forEach((element) => {\n                if (element.isLoggedIn == true) {\n                  registrationToken.push(element.id);\n                }\n              });\n              userIds.push(details._id);\n            });\n            payload.users = userIds;\n          });\n      } else if (body.notificationType == 'courses') {\n        var courses = body.courses;\n        var users = await this.userModel\n          .find(\n            {\n              'devices.isLoggedIn': true,\n              courses: courses,\n              'flags.isActive': true,\n            },\n            { uuid: 1, devices: 1 }\n          )\n          .exec()\n          .then((user) => {\n            user.map((details) => {\n              details.devices.forEach((element) => {\n                if (element.isLoggedIn == true) {\n                  registrationToken.push(element.id);\n                }\n              });\n              userIds.push(details._id);\n            });\n            payload.users = userIds;\n          });\n      }\n      if (registrationToken.length > 0) {\n        const chunkSize = 999;\n        for (let i = 0; i < registrationToken.length; i += chunkSize) {\n          const chunk = registrationToken.slice(i, i + chunkSize);\n          firebase\n            .messaging()\n            .sendToDevice(chunk, message, options)\n            .then((response) => {\n              console.log(response);\n            })\n            .catch((error) => {\n              console.log(error);\n            });\n        }\n        var notification = new this.notificationsModel();\n        notification.users = payload.users;\n        notification.uuid = Uuid.v4();\n        notification.title = payload.title;\n        notification.message = payload.message;\n        notification.branchUrl = body.branchUrl;\n        notification.courses = body.courses;\n        notification.subscriptions = body.subscriptions;\n        notification.icon = payload.icon;\n        notification.notificationType = payload.notificationType;\n        notification.scheduleDate = payload.scheduleDate;\n        notification.createdBy = payload.createdBy;\n        notification.createdOn = payload.createdOn;\n        notification.sendStatus = 1;\n        var result = await notification.save();\n        var today = new Date();\n        // if(body.campaign ==\"timeTable\"){\n        var notificationId = result._id;\n\n        userIds.forEach((element) => {\n          var userNotification = new this.userNotificationsModel();\n          userNotification.userId = Object(element);\n          userNotification.uuid = Uuid.v4();\n          userNotification.notificationId = notificationId;\n          userNotification.createdOn = today;\n          userNotification.readStatus = 0;\n          userNotification.save();\n        });\n        return '';\n        // }\n      }\n      return '';\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  }\n\n  async findAll(employee) {\n    const courseListIds = [];\n    const empCourses = await this.courseModel.find({organizations:{$in:employee.organizations}},{_id:true})\n    empCourses.forEach(element => {\n      courseListIds.push(element._id)\n    });\n      return this.notificationsModel.aggregate([\n      {\n        $match: { // Filter users based on organizations\n          \"courses\": { $in: courseListIds }\n        }\n      },\n      { $lookup: {from: 'courses', localField: 'courses', foreignField: '_id', as: 'courses'} },\n      {\n        $project: {\n          title: 1,\n          message: 1,\n          notificationType: 1,\n          branchUrl: 1,\n          createdBy: 1,\n          createdOn: 1,\n          icon:1,\n          usersCount: { $size: '$users' },\n          \"courses.title\":1\n        },\n      },\n      { $sort: { createdOn: -1 } },\n    ]);\n  }\n\n  async scheduleNotification(body): Promise<any> {\n    try {\n      var notificationData = body.notificationData;\n      var payload = body;\n      const userIds = [];\n\n      var today = new Date();\n      payload.uuid = Uuid.v4();\n      var courses = body.courses;\n      var users = await this.userModel\n        .find(\n          {\n            'devices.isLoggedIn': true,\n            courses: courses,\n            'flags.isActive': true,\n          },\n          { uuid: 1, devices: 1 }\n        )\n        .exec()\n        .then((user) => {\n          // var users = await this.userModel.find({ mobile :9876543210}, { uuid: 1, devices: 1 }).exec().then(user => {\n          user.map((details) => {\n            userIds.push(details._id);\n          });\n          payload.users = userIds;\n        });\n      notificationData.forEach((element) => {\n        var notification = new this.notificationsModel();\n        notification.users = payload.users;\n        notification.uuid = Uuid.v4();\n        notification.title = element.title;\n        notification.message = element.message;\n        notification.courses = body.courses;\n        notification.icon = element.icon;\n        notification.notificationType = 'courses';\n        notification.scheduleDate = element.scheduleDate;\n        notification.createdBy = element.createdBy;\n        notification.createdOn = element.createdOn;\n        notification.sendStatus = 0;\n        notification.save();\n      });\n      return '';\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  }\n\n  async sendScheduleNotification(body): Promise<any> {\n    var  instanceName = 'plato-online';    \n    const firebase = this.firebaseService.getInstance(instanceName);\n    try {\n      var notificationData = body.notificationData;\n      const userIds = [];\n\n      var notifiations = await this.notificationsModel\n        .find({ sendStatus: 0, scheduleDate: { $lte: new Date() } })\n        .exec();\n      notifiations.forEach(async (element) => {\n        const empCourses = await this.courseModel.findOne({_id:{$in:element.courses}})\n\n        if(empCourses){\n          const empOrganazation = await this.organazationModel.findOne({_id:{$in:empCourses.organizations}}).exec()\n          if(empOrganazation.firebase){\n            instanceName = empOrganazation.firebase;\n          }\n        }\n       \n        var registrationToken = [];\n        await this.userModel\n          .find({ _id: element.users }, { uuid: 1, devices: 1 })\n          .exec()\n          .then((user) => {\n            user.map((details) => {\n              details.devices.forEach((element) => {\n                if (element.isLoggedIn == true) {\n                  registrationToken.push(element.id);\n                }\n              });\n            });\n          });\n        const message = {\n          data: {\n            creatorName: 'Plato',\n            title: element.title,\n            body: element.message,\n            imageUrl: element.icon,\n          },\n        };\n        const options = {\n          priority: 'high',\n          timeToLive: 60 * 60 * 24,\n        };\n\n        if (registrationToken.length > 0) {\n          const chunkSize = 999;\n          for (let i = 0; i < registrationToken.length; i += chunkSize) {\n            const chunk = registrationToken.slice(i, i + chunkSize);\n            firebase\n              .messaging()\n              .sendToDevice(chunk, message, options)\n              .then((response) => {\n                console.log(response);\n              })\n              .catch((error) => {\n                console.log(error);\n              });\n          }\n        }\n        element.sendStatus = 1;\n        element.save();\n      });\n      // console.log(notifiations)\n      return '';\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  }\n  //\n  async sendAlertExpiredSubscription(body): Promise<any> {\n\n    var  instanceName = 'plato-online';    \n\n\n    var date = new Date();\n    const dateandtime = require('date-and-time');\n    var firstweek =\n      new Date(date.setDate(date.getDate()) - 1).getTime() +\n      5.5 * 60 * 60 * 1000;\n    var lastweek =\n      new Date(date.setDate(date.getDate() - 7)).getTime() +\n      5.5 * 60 * 60 * 1000;\n    let weekFromDate = new Date(firstweek).setUTCHours(0, 0, 0, 0);\n    let weekToDate = new Date(lastweek).setUTCHours(23, 59, 59, 999);\n\n    let SubscribedUsers = await this.userModel\n      .find(\n        {\n          'subscriptions.expiry_date': {\n            $gte: new Date(weekToDate),\n            $lte: new Date(weekFromDate),\n          },\n          // 'mobile':{ $in:[9533402327,8978598238]},\n          'devices.0': { $exists: true },\n        },\n        {\n          mobile: 1,\n          email: 1,\n          name: 1,\n          subscriptions: 1,\n          accessToken: 1,\n          devices: 1,\n        }\n      )\n      .exec();\n\n    console.log(SubscribedUsers.length);\n    SubscribedUsers.forEach(async (element) => {\n\n\n      const empCourses = await this.courseModel.findOne({_id:{$in:element.courses}})\n\n      if(empCourses){\n        const empOrganazation = await this.organazationModel.findOne({_id:{$in:empCourses.organizations}}).exec()\n        if(empOrganazation.firebase){\n          instanceName = empOrganazation.firebase;\n        }\n      }\n      \n\n      const firebase = this.firebaseService.getInstance(instanceName);\n\n      var registrationToken = null;\n      element.devices.forEach((element) => {\n        if (element.isLoggedIn == true) {\n          registrationToken = element.id;\n        }\n      });\n      var name = '';\n      if (element.name) {\n        name = element.name;\n      } else {\n        name = 'User';\n      }\n      element.subscriptions.forEach(async (subscription) => {\n        if (\n          new Date(subscription.expiry_date) < new Date(weekFromDate) &&\n          new Date(subscription.expiry_date) > new Date(weekToDate)\n        ) {\n          var subscriptionDetails = await this.subscriptionModel\n            .findOne({ _id: subscription.subscription_id })\n            .exec();\n\n          if (subscriptionDetails) {\n            var title = subscriptionDetails.title + ' is expired..!!🚨';\n            var messageTxt =\n              'Dear ' +\n              name +\n              ' , hope you are enjoying Plato online app . Your subscription Expired on ' +\n              dateandtime.format(\n                new Date(subscription.expiry_date),\n                'YYYY-MM-DD'\n              ) +\n              '. Kindly resubscribe for preparing uninterrupted . Call 7851925940 for further details .';\n            const message = {\n              data: {\n                creatorName: 'Plato',\n                title: title,\n                body: messageTxt,\n                imageUrl:\n                  '',\n              },\n            };\n            const options = {\n              priority: 'high',\n              timeToLive: 60 * 60 * 24,\n            };\n\n            if (registrationToken) {\n              await firebase\n                .messaging()\n                .sendToDevice(registrationToken, message, options)\n                .then((response) => {\n                  console.log(response);\n                })\n                .catch((error) => {\n                  console.log(error);\n                });\n            }\n          }\n        }\n      });\n    });\n    return [];\n  }\n\n  async sendSubscriptionExpireAlert(body): Promise<any> {\n\n\n    var  instanceName = 'plato-online';    \n    var date = new Date();\n    const dateandtime = require('date-and-time');\n    var firstweek =\n      new Date(date.setDate(date.getDate())).getTime() + 5.5 * 60 * 60 * 1000;\n    var lastweek =\n      new Date(date.setDate(date.getDate() + 6)).getTime() +\n      5.5 * 60 * 60 * 1000;\n    let weekFromDate = new Date(firstweek).setUTCHours(0, 0, 0, 0);\n    let weekToDate = new Date(lastweek).setUTCHours(23, 59, 59, 999);\n\n    let SubscribedUsers = await this.userModel\n      .find(\n        {\n          'subscriptions.expiry_date': {\n            $gte: new Date(weekFromDate),\n            $lte: new Date(weekToDate),\n          },\n          // 'mobile':{ $in:[9533402327,8978598238]},\n          'devices.0': { $exists: true },\n        },\n        {\n          mobile: 1,\n          email: 1,\n          name: 1,\n          subscriptions: 1,\n          accessToken: 1,\n          devices: 1,\n        }\n      )\n      .exec();\n\n    console.log(SubscribedUsers.length);\n\n    SubscribedUsers.forEach(async (element) => {\n\n\n      const empCourses = await this.courseModel.findOne({_id:{$in:element.courses}})\n\n      if(empCourses){\n        const empOrganazation = await this.organazationModel.findOne({_id:{$in:empCourses.organizations}}).exec()\n        if(empOrganazation.firebase){\n          instanceName = empOrganazation.firebase;\n        }\n      }\n      const firebase = this.firebaseService.getInstance(instanceName);\n\n      var registrationToken = null;\n      element.devices.forEach((element) => {\n        if (element.isLoggedIn == true) {\n          registrationToken = element.id;\n        }\n      });\n      var name = '';\n      if (element.name) {\n        name = element.name;\n      } else {\n        name = 'User';\n      }\n      element.subscriptions.forEach(async (subscription) => {\n        if (\n          new Date(subscription.expiry_date) > new Date(weekFromDate) &&\n          new Date(subscription.expiry_date) < new Date(weekToDate)\n        ) {\n          var subscriptionDetails = await this.subscriptionModel\n            .findOne({ _id: subscription.subscription_id })\n            .exec();\n\n          if (subscriptionDetails) {\n            // var title = subscriptionDetails.title + ' going to ends';\n            const date2 = new Date(subscription.expiry_date);\n            const date1 = new Date(weekFromDate);\n            const day = date2.getDate() - date1.getDate();\n            var days = day + ' Days';\n            var title =\n              subscriptionDetails.title +\n              ' going to expire in  ' +\n              days +\n              '  .❗❗⏰';\n\n            var messageTxt =\n              'Dear ' +\n              name +\n              ' , hope you are enjoying Plato online app . Your subscription ends on ' +\n              dateandtime.format(\n                new Date(subscription.expiry_date),\n                'YYYY-MM-DD'\n              ) +\n              '( ' +\n              days +\n              '). Kindly resubscribe for preparing uninterrupted . Call 7851925940 for further details .';\n\n            const message = {\n              data: {\n                creatorName: 'Plato',\n                title: title,\n                body: messageTxt,\n                imageUrl:\n                  '',\n              },\n            };\n            const options = {\n              priority: 'high',\n              timeToLive: 60 * 60 * 24,\n            };\n            if (registrationToken) {\n              await firebase\n                .messaging()\n                .sendToDevice(registrationToken, message, options)\n                .then((response) => {\n                  console.log(response);\n                })\n                .catch((error) => {\n                  console.log(error);\n                });\n            }\n          }\n        }\n      });\n    });\n    return [];\n  }\n\n  async getNotificationsDateFilter(transactionsInterface) {\n    console.log('transactionsInterface', transactionsInterface);\n\n    // let fromDate = transactionsInterface.fromDate;\n    // let toDate = transactionsInterface.toDate;\n\n    let fromDate =\n      new Date(transactionsInterface.fromDate).getTime() + 5.5 * 60 * 60 * 1000;\n    let toDate = new Date(transactionsInterface.toDate);\n    let newFromDate = new Date(fromDate).setUTCHours(0, 0, 0, 0);\n    let newToDate = new Date(toDate).setUTCHours(23, 59, 59, 999);\n    console.log('fromDate', new Date(newFromDate).toISOString().toString());\n    console.log('toDate', new Date(newToDate).toISOString().toString());\n    return this.notificationsModel\n      .find({\n        createdOn: {\n          $gte: new Date(newFromDate).toISOString().toString(),\n          $lte: new Date(newToDate).toISOString().toString(),\n        },\n      })\n      .populate({\n        path: 'batch',\n        model: 'Course',\n        select: {\n          title: 1,\n          _id: 1,\n          uuid: 1,\n        },\n      })\n      .sort({ createdOn: 'DESC' })\n      .exec();\n  }\n  async deleteByUuid(id: string) {\n    let notification = await this.notificationsModel\n      .findOneAndDelete({ _id: id })\n      .exec();\n    await this.userNotificationsModel.deleteMany({ notificationId: id }).exec();\n    return notification;\n  }\n  async getNotificationById(id: string) {\n    return this.notificationsModel\n      .findById({ _id: id })\n      .populate({\n        path: 'batch',\n        model: 'Course',\n        select: {\n          title: 1,\n          _id: 1,\n          uuid: 1,\n        },\n      })\n      .populate({\n        path: 'users',\n        model: 'User',\n        select: {\n          name: 1,\n          mobile: 1,\n          _id: 1,\n          uuid: 1,\n        },\n      })\n      .sort({ createdOn: 'DESC' });\n  }\n}\n","import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport * as mongoose from 'mongoose';\nimport { CreatelogsDto } from '../dto/create-logs.dto';\nimport { Logs } from '../schema';\nimport { PearlSubjectInputInterface, PeralSubjectInterface } from '@application/api-interfaces';\nimport { ObjectId } from 'mongodb';\n\n@Injectable()\nexport class LogsService {\n  constructor(\n    @InjectModel('Logs') private LogsModel: Model<Logs>\n  ) { }\n\n  async addlogs(request: any) {\n    const createdPearlSubjects = new this.LogsModel(request);\n    const result = await createdPearlSubjects.save();\n    return result;\n  }\n  \n}","import { Feedbacks } from '@application/shared-api';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Injectable } from '@nestjs/common';\nimport { Model } from 'mongoose';\nimport * as mongoose from 'mongoose';\nimport { feedbackUsersRatingInterface } from '@application/api-interfaces';\n\n@Injectable()\nexport class FeedbackService {\n  constructor(\n    @InjectModel('Feedbacks') private feedbackModel: Model<Feedbacks>\n  ) {}\n\n  async createFeedback(request) {\n    const createdState = new this.feedbackModel(request);\n    const result = createdState.save();\n    return result;\n  }\n\n  async getFeedbacks() {\n    let averageRating;\n    let FeedbacksList = [];\n    let res: feedbackUsersRatingInterface | any;\n    let Feedbacks = await this.feedbackModel\n      .find()\n      .populate({\n        path: 'course',\n        select: {\n          _id: 1,\n          uuid: 1,\n          title: 1,\n        },\n      })\n      .exec();\n    Feedbacks.map(async (res, i) => {\n      if (res.replies.length) {\n        let count = 0;\n        res.replies.map((rat) => {\n          count = count + rat.rating;\n        });\n        averageRating = count / res.replies.length;\n        console.log(count, res.replies.length, averageRating);\n      }\n      let data = {\n        // users: res?.users?.length,\n        course: res.course,\n        _id: res._id,\n        uuid: res.uuid,\n        title: res.title,\n        feedback_type:res.feedback_type,\n        createdOn: res.createdOn,\n        createdBy: res.createdBy,\n        flags: res.flags,\n        modifiedBy: res?.modifiedBy,\n        modifiedOn: res?.modifiedOn,\n        averageRating: res.replies.length ? averageRating : '',\n        repliesCount: res.replies.length ? res.replies.length : 0,\n      };\n      FeedbacksList.push(data);\n    });\n    //     for await (let  index = 0; index < Feedbacks.length; index++) {\n    //          res = Feedbacks[index].replies;\n    //          console.log('resresresresresresresres', Feedbacks[index].replies);\n\n    //         Feedbacks[index].replies.map(rat => {\n    //             count += rat.rating;\n    //         })\n    //         console.log('countcount',count);\n\n    //   }\n    return FeedbacksList;\n  }\n\n  async getActiveFeedbacks() {\n    return await this.feedbackModel\n      .find({ flags: { active: true } }, { _id: 1, uuid: 1, title: 1 })\n      .exec();\n  }\n\n  async findFeedback(uuid: string) {\n    return await this.feedbackModel\n      .findOne({ uuid })\n      .populate({\n        path: 'course',\n        select: {\n          _id: 1,\n          uuid: 1,\n          title: 1,\n        },\n      })\n      .populate({\n        path: 'users',\n        select: {\n          _id: 1,\n          uuid: 1,\n          name: 1,\n          mobile: 1,\n        },\n      })\n      .populate({\n        path: 'replies',\n        populate:{\n            path:'user_id',\n            select: {\n                _id: 1,\n                uuid: 1,\n                name: 1,\n                mobile: 1,\n              },\n        }\n        \n      })\n      .exec();\n  }\n\n  async deleteFeedback(id: string) {\n    return await this.feedbackModel.findOneAndDelete({ _id: id }).exec();\n  }\n\n  async updateFeedback(request) {\n    return this.feedbackModel\n      .findOneAndUpdate({ uuid: request.uuid }, request)\n      .exec();\n  }\n}\n","import { Department, CreateDepartmentDto, Employee, Ticket, User } from '@application/shared-api';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Injectable } from '@nestjs/common';\nimport { Model } from 'mongoose';\nimport * as mongoose from 'mongoose';\nimport { firebase } from 'config/firebase-configuration';\nimport { FirebaseService } from './firebase-service';\n\n@Injectable()\nexport class DepartmentService {\n  constructor(\n    private readonly firebaseService: FirebaseService,\n    @InjectModel('Department') private departmentModel: Model<Department>,\n    @InjectModel('Ticket') private ticketModel: Model<Ticket>,\n    @InjectModel('Employee') private employeeModel: Model<Employee>,\n    @InjectModel('User') private userModel: Model<User>\n    \n  ) { }\n\n  async assignDepartment(empId: string, departmentId: string) {\n    return this.employeeModel.findOneAndUpdate(\n      { _id: empId },\n      { $push: { \"department\": departmentId } }\n    ).exec();\n  }\n  async deleteDepartment(empId: string, departmentId: string) {\n    return this.employeeModel.findOneAndUpdate(\n      { _id: empId },\n      { $pull: { \"department\": departmentId } }\n    ).exec();\n  }\n\n  async create(createDepartmentDto: CreateDepartmentDto) {\n    const createdDepartment = new this.departmentModel(createDepartmentDto);\n    const result = createdDepartment.save();\n    console.log('resultresultresultresult', await result);\n\n    let Department\n    Department = await result\n    await Department.hod.map(per => {\n      this.assignDepartment(per, Department._id)\n    })\n    return result;\n  }\n\n  async findAll() {\n    let event = this.departmentModel.find().populate({\n      path: 'employee',\n      select: {\n        \"_id\": 1,\n        \"uuid\": 1,\n        \"name\": 1,\n      }\n    })\n      .populate({\n        path: 'hod',\n        select: {\n          \"_id\": 1,\n          \"uuid\": 1,\n          \"name\": 1,\n        }\n      }).exec()\n    return event\n  }\n\n  async findByUuid(uuid: string) {\n    return await this.departmentModel.findOne({ uuid })\n      .populate({\n        path: 'employee',\n        select: {\n          \"_id\": 1,\n          \"uuid\": 1,\n          \"name\": 1,\n        }\n      })\n      .populate({\n        path: 'hod',\n        select: {\n          \"_id\": 1,\n          \"uuid\": 1,\n          \"name\": 1,\n        }\n      }).exec()\n\n  }\n\n  async deleteByUuid(id: string) {\n    return await this.departmentModel.findOneAndDelete({ _id: id }).exec();\n  }\n\n  async editDepartmentByUuid(\n    uuid: string,\n    request: any\n  ) {\n    console.log('request', request);\n    request?.insertDepartmentArray.map(per => {\n      this.assignDepartment(per, request._id)\n    })\n    request?.deleteDepartmentArray.map(per => {\n      this.deleteDepartment(per, request._id)\n    })\n    return this.departmentModel.findOneAndUpdate({ uuid }, request).exec();\n    // return this.departmentModel.findOne({ uuid }, {}).exec();\n  }\n\n  async getActiveDepartments() {\n    return this.departmentModel.find({ flags: { active: true } }).populate({\n      path: 'employee',\n      select: {\n        \"_id\": 1,\n        \"uuid\": 1,\n        \"name\": 1,\n      }\n    })\n      .populate({\n        path: 'hod',\n        select: {\n          \"_id\": 1,\n          \"uuid\": 1,\n          \"name\": 1,\n        }\n      }).exec()\n  }\n\n  async getAllTickets(request) {\n    return await this.ticketModel.find({ department: request.departmentId }).populate({\n      path: 'user',\n      select: {\n        \"_id\": 1,\n        \"uuid\": 1,\n        \"name\": 1,\n        \"mobile\": 1,\n      }\n    })\n      .populate({\n        path: 'department',\n        select: {\n          \"_id\": 1,\n          \"uuid\": 1,\n          \"title\": 1,\n        }\n      })\n      .populate({\n        path: 'courses',\n        Model:'Course',\n        select: {\n          \"_id\": 1,\n          \"uuid\": 1,\n          \"title\": 1,\n        }\n      })\n      .sort({ createdOn: 'DESC' })\n      .exec()\n\n  }\n\n  async getTicketByUUid(uuid: string) {\n    return await this.ticketModel.findOne({ uuid }).populate({\n      path: 'user',\n      select: {\n        \"_id\": 1,\n        \"uuid\": 1,\n        \"name\": 1,\n        \"mobile\": 1,\n      }\n    })\n      .populate({\n        path: 'department',\n        select: {\n          \"_id\": 1,\n          \"uuid\": 1,\n          \"title\": 1,\n        }\n      })\n      .sort({ createdOn: 'DESC' })\n      .exec()\n  }\n\n  async sendReply(\n    request: any\n  ) {\n   return this.ticketModel.findOneAndUpdate({ uuid:request.uuid }, {\n    $push: {\n      \"reply\": request.reply\n    }\n    }).exec();\n  }\n\n  async updateTicket(\n    request: any\n  ) {\n    let TicketStatus=[\n      'NEW','TO DO','IN PROGRESS','CLOSED','REJECTED',\n    ]\n    var title = '';\n    var body = '';\n    var ticket = null\n    var ticketDetails =await this.ticketModel.findOne({ uuid:request.uuid });\n    if(request.status == 4){\n      ticket = await this.ticketModel.findOneAndUpdate({ uuid:request.uuid }, {\n        status:request.status,\n        // reply_image:request.reply_image,\n        // reply_message:request.reply_message,\n        modifiedOn:request.modifiedOn,\n        modifiedBy:request.modifiedBy,\n        closedDateTime:new Date()\n      }).exec();\n      title = `Ticket Has Been ${TicketStatus[request.status-1]}`;\n      body = \"Dear user, We have Closed your complaint with Ticket Id \"+ ticketDetails.ticketId+\"  Thank you\";\n    }\n    else{\n       ticket = await this.ticketModel.findOneAndUpdate({ uuid:request.uuid }, {\n        status:request.status,\n        modifiedOn:request.modifiedOn,\n        modifiedBy:request.modifiedBy\n      }).exec();\n\n\n      title = `Ticket Has Been ${TicketStatus[request.status-1]}`;\n      body = \"Dear user, We have updated your complaint with Ticket Id \"+ ticketDetails.ticketId+\" and we will be working on it, we will update the status of your complaint soon. Thank you\";\n \n    }\n    var icon ='';\n    const message =   {\n      notification: {\n        title: title,\n        body: body,\n        imageUrl : icon,\n        notificationType : 'general'\n      },\n      data: {\n        creatorName: 'Plato',\n        title :  title,\n        body: body,\n        imageUrl : icon,\n        notificationType : 'general'\n      }\n    }\n    const  registrationToken   = [];\n    const options = {\n        priority: \"high\",\n        timeToLive: 60 * 60 * 24\n    };\n    var user = await this.userModel.findOne({_id : ticketDetails.user});\n    user.devices.forEach(element => {\n      if(element.isLoggedIn == true && element.device_type != 'web'){\n        registrationToken.push(element.id)\n      }\n    });\n\n    firebase.messaging().sendToDevice(registrationToken, message, options).then( response => {\n      console.log(response);\n    }).catch( error => {\n        console.log(error);\n    });\n\n    return ticket\n   \n  }\n\n}\n","import { ResponseInterface } from '@application/api-interfaces';\nimport { CallHandler, ExecutionContext, Injectable, NestInterceptor } from '@nestjs/common';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable()\nexport class TransformInterceptor<T> implements NestInterceptor<T, ResponseInterface<T>> {\n  intercept(context: ExecutionContext, next: CallHandler): Observable<ResponseInterface<T>> {\n    // console.log(context.switchToHttp().getRequest().originalUrl);\n    let statusCode;\n    let message = '';\n    const schema = context.switchToHttp().getRequest().originalUrl\n      .split('/proxy/api/')[1];\n    const formatted = `${schema.charAt(0).toUpperCase()}${schema.slice(1)}`;\n    // console.log(context.switchToHttp());\n\n    switch(context.switchToHttp().getRequest().method) {\n      case \"GET\": {\n        statusCode = 200;\n        message = `${formatted} fetched successfully`;\n        break;\n      }\n      case \"POST\": {\n        statusCode = 201;\n        message = `${formatted} created successfully`;\n        break;\n      }\n      case \"PUT\": {\n        statusCode = 202;\n        message = `${formatted} updated successfully`;\n        break;\n      }\n      case \"DELETE\": {\n        statusCode = 203;\n        message = `${formatted} deleted successfully`;\n        break;\n      }\n      default: {\n        statusCode = 200;\n        message = `${formatted} fetched successfully`;\n        break;\n      }\n    }\n    return next.handle().pipe(\n      map(response => {\n        console.log({ response});\n        if(context.switchToHttp().getRequest().originalUrl.includes('vdocipher')) {\n          return ({ ok: true, statusCode, message, response: response.data })\n        } else {\n          return ({ ok: true, statusCode, message, response });\n        }\n      }),\n      catchError(error => {\n        console.log({ error });\n\n        const errors = [];\n        if(Array.isArray(error.response?.error)){\n          error.response?.error?.map(err => {\n            console.log({ err });\n\n            Object.values(err.constraints).map(it => {\n              errors.push(it);\n            });\n          });\n        }\n        if(errors.length) {\n          error.response.error = errors;\n          error.response.ok = false;\n        } else {\n          error.response.ok = false;\n        }\n        console.log({error});\n\n        return throwError(error);\n      })\n    );\n  }\n}\n","import { AuthModule } from '@application/auth';\nimport { SharedApiModule } from '@application/shared-api';\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { NotificationsController } from './notifications.controller';\n\n@Module({\n  imports: [\n    // MongooseModule.forFeature([\n    //   {\n    //     name: 'Notifications',\n    //     schema: NotificationsSchema,\n    //   },\n    // ]),\n    SharedApiModule,\n    AuthModule,\n  ],\n  controllers: [NotificationsController],\n})\nexport class NotificationsModule {}\n","import { Controller } from '@nestjs/common';\nimport { AuthService } from './services/auth.service';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n}\n","import { Employee, User } from '@application/shared-api';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ContextIdFactory, ModuleRef } from '@nestjs/core';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n\n  constructor(private moduleRef: ModuleRef, private authService: AuthService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: 'platoonlinesaasplatform',\n    });\n  }\n\n  // async validate(request, mobile: number, password: string): Promise<User> {\n  //   const contextId = ContextIdFactory.getByRequest(request);\n  //   // \"AuthService\" is a request-scoped provider\n  //   // const authService = await this.moduleRef.resolve(AuthService, contextId);\n  //   // console.log(mobile, password);\n  //   console.log('JwtStrategy validate', { request });\n\n  //   return this.authService.validateUser(request).then((user) => {\n  //     if (!user) {\n  //       throw new UnauthorizedException();\n  //     }\n\n  //     return user;\n  //   });\n  // }\n\n  async validate(request, mobile: number, password: string): Promise<Employee> {\n    const contextId = ContextIdFactory.getByRequest(request);\n    // \"AuthService\" is a request-scoped provider\n    // const authService = await this.moduleRef.resolve(AuthService, contextId);\n    // console.log(mobile, password);\n    // console.log('JwtStrategy validate', { request });\n\n    return this.authService.validateUser(request).then((user) => {\n      if (!user) {\n        throw new UnauthorizedException();\n      }\n\n      return user;\n    });\n  }\n\n\n  // async validate(request: { mobile: number, password: string }) {\n  //   return { mobile: request.mobile, password: request.password };\n  // }\n}\n","import { Employee, User } from '@application/shared-api';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ContextIdFactory, ModuleRef } from '@nestjs/core';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private moduleRef: ModuleRef) {\n    super({\n      passReqToCallback: true,\n    });\n  }\n\n  // async validate(\n  //   request: Request,\n  //   mobile: number,\n  //   password: string\n  // ): Promise<User> {\n  //   const contextId = ContextIdFactory.getByRequest(request);\n  //   // \"AuthService\" is a request-scoped provider\n  //   const authService = await this.moduleRef.resolve(AuthService, contextId);\n  //   const user = await authService.validateUser(request);\n  //   if (!user) {\n  //     throw new UnauthorizedException();\n  //   }\n\n  //   return user;\n  // }\n\n  async validate(\n    request: Request,\n    mobile: number,\n    password: string\n  ): Promise<Employee> {\n    const contextId = ContextIdFactory.getByRequest(request);\n    // \"AuthService\" is a request-scoped provider\n    const authService = await this.moduleRef.resolve(AuthService, contextId);\n    const user = await authService.validateUser(request);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n\n    return user;\n  }\n}\n","import {\n  createParamDecorator,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  canActivate(context: ExecutionContext) {\n    // Add your custom authentication logic here\n    // for example, call super.logIn(request) to establish a session.\n    // console.log({ context });\n\n    // createParamDecorator((data, req) => {\n    //   console.log({ data, req });\n    //   return req.user;\n    // });\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user, info) {\n    // You can throw an exception based on either \"info\" or \"err\" arguments\n    // console.log({ err, user, info });\n\n    if (err || !user) {\n      throw err || new UnauthorizedException();\n    }\n\n    return user;\n  }\n}\n","import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n","import { AuthModule } from '@application/auth';\nimport { TagsSchema, SharedApiModule } from '@application/shared-api';\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { TagsController } from './tags.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: 'Tags',\n        schema: TagsSchema,\n      },\n    ]),\n    SharedApiModule,\n    AuthModule,\n  ],\n  controllers: [TagsController],\n})\nexport class TagsModule {}\n","import { AuthModule } from '@application/auth';\nimport { CouponSchema, SharedApiModule } from '@application/shared-api';\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { CouponController } from './coupon.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: 'Coupon',\n        schema: CouponSchema,\n      },\n    ]),\n    SharedApiModule,\n    AuthModule,\n  ],\n  controllers: [CouponController],\n})\nexport class CouponsModule {}\n","import { AuthModule } from '@application/auth';\nimport { OrganizationSchema, SharedApiModule } from '@application/shared-api';\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport * as fromControllers from './controllers';\nimport * as fromServices from './services';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: 'Organization',\n        schema: OrganizationSchema,\n      },\n    ]),\n    SharedApiModule,\n    AuthModule\n  ],\n  controllers: [...fromControllers.controllers],\n  providers: [...fromServices.services],\n})\nexport class OrganizationsModule {}\n","import { KeyInterface, UserInterface } from '@application/api-interfaces';\nimport { JwtAuthGuard } from '@application/auth';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\n// import { CreateOrganizationDto } from '../create-organization.dto';\nimport { OrganizationsService } from '../services';\n\n@Controller('organizations')\nexport class OrganizationsController {\n  constructor(private orgService: OrganizationsService) {}\n\n  // @UseGuards(JwtAuthGuard)\n  @Post()\n  async create(@Body() createOrgDto) {\n    return this.orgService.create(createOrgDto);\n  }\n\n  // @UseGuards(JwtAuthGuard)\n  @Get()\n  async findAll() {\n    return this.orgService.findAll();\n  }\n\n  // @UseGuards(JwtAuthGuard)\n  @Get('active')\n  async findActiveOrg() {\n    return this.orgService.findActiveOrg();\n  }\n\n  // @UseGuards(JwtAuthGuard)\n  @Get(':uuid')\n  findOne(\n    @Param('uuid')\n    uuid: string\n  ) {\n    return this.orgService.findByUuid(uuid);\n  }\n\n  // @UseGuards(JwtAuthGuard)\n  @Delete(':uuid')\n  deleteByUuid(\n    @Param('uuid')\n    uuid: string\n  ) {\n    return this.orgService.deleteByUuid(uuid);\n  }\n\n  // @UseGuards(JwtAuthGuard)\n  @Put()\n  updateByUuid(\n    @Body() request\n  ) {\n    return this.orgService.updateByUuid(request);\n  }\n\n  // operations on users assigned to organizations\n  @UseGuards(JwtAuthGuard)\n  @Post(':orgUuid/users')\n  async addBulkUsersByOrgUuid(\n    @Param('orgUuid')\n    orgUuid: string,\n    @Body() request: KeyInterface[]\n  ) {\n    return this.orgService.addBulkUsersByOrgUuid(orgUuid, request);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Delete(':orgUuid/users/:userUuid')\n  deleteUserFromOrgByUuid(\n    @Param('orgUuid')\n    orgUuid: string,\n    @Param('userUuid')\n    userUuid: string\n  ) {\n    return this.orgService.deleteUserFromOrgByUuid(orgUuid, userUuid);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Put(':orgUuid/users/:userUuid')\n  editByUuid(\n    @Param('orgUuid')\n    orgUuid: string,\n    @Param('userUuid')\n    userUuid: string,\n    @Body() user: UserInterface\n  ) {\n    return this.orgService.editUserFromOrgByUuid(orgUuid, userUuid, user);\n  }\n}\n","import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\n// import { Organization } from '../organization.schema';\nimport { Model } from 'mongoose';\n// import { CreateOrganizationDto } from '../create-organization.dto';\nimport { UserInterface, KeyInterface } from '@application/api-interfaces';\nimport { Organization } from '@application/shared-api';\n\n@Injectable()\nexport class OrganizationsService {\n  constructor(\n    @InjectModel('Organization') private organizationModel: Model<Organization>\n  ) {}\n\n  async create(createOrgDto) {\n    const createdOrg = new this.organizationModel(createOrgDto);\n    const result = createdOrg.save();\n    return result;\n  }\n\n  async findAll() {\n    return this.organizationModel.find().exec();\n  }\n\n  async findActiveOrg() {\n    return this.organizationModel.find({'flags.active':true},{_id:1,uuid:1,title:1}).exec();\n  }\n\n  async findByUuid(uuid: string) {\n    return this.organizationModel.findOne({ uuid }).exec();\n  }\n\n  async deleteByUuid(uuid: string) {\n    return this.organizationModel.findOneAndDelete({ uuid }).exec();\n  }\n\n  async updateByUuid(request) {\n    return this.organizationModel\n      .findOneAndUpdate({ uuid: request.uuid }, request)\n      .exec();\n  }\n\n  // Operations on users assigned to organization\n\n  async addBulkUsersByOrgUuid(\n    uuid: string,\n    request: KeyInterface[]\n  ) {\n    return this.organizationModel\n      .findOneAndUpdate({ uuid }, { $push: { users: { $each: request } } })\n      .exec();\n  }\n\n  async deleteUserFromOrgByUuid(\n    uuid: string,\n    userUuid: string\n  ) {\n    return;\n    // return this.organizationModel\n    //   .update({}, { $pull: { users: { uuid: userUuid } } })\n    //   .exec();\n  }\n\n  async editUserFromOrgByUuid(\n    uuid: string,\n    userUuid: string,\n    request: UserInterface\n  ) {\n    return;\n    // return this.organizationModel\n    //   .update({ uuid }, (err, org) => {\n    //     console.log({ org });\n    //   })\n    //   .exec();\n  }\n}\n","import { CourseInterface } from '@application/api-interfaces';\nimport { Organization } from '@application/shared-api';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\n// import { Organization } from '../organization.schema';\n\n@Injectable()\nexport class CoursesService {\n  constructor(\n    @InjectModel('Organization') private organizationModel: Model<Organization>\n  ) {}\n\n  async addCourseByOrgUuid(\n    uuid: string,\n    request: CourseInterface\n  ): Promise<Organization> {\n    return this.organizationModel\n      .findOneAndUpdate({ uuid }, { $push: { courses: request } })\n      .exec();\n  }\n\n  async deleteCourseByUuid(\n    uuid: string,\n    courseUuid: string\n  ): Promise<Organization> {\n    return;\n    // return this.organizationModel\n    //   .update({}, { $pull: { courses: { uuid: courseUuid } } })\n    //   .exec();\n  }\n\n  async editCourseByUuid(\n    uuid: string,\n    courseUuid: string,\n    request: CourseInterface\n  ): Promise<Organization> {\n    return\n    // return this.organizationModel\n    //   .update({ uuid }, (err, cou) => {\n    //     console.log({ cou });\n    //   })\n    //   .exec();\n  }\n}\n","import { CourseInterface } from '@application/api-interfaces';\nimport { JwtAuthGuard } from '@application/auth';\nimport { CreateCourseDTO } from '@application/shared-api';\nimport { Body, Controller, Delete, Param, Post, Put, UseGuards } from '@nestjs/common';\nimport { CoursesService } from '../services';\n\n@Controller('organizations')\nexport class CoursesController {\n  constructor(private courseService: CoursesService) {}\n  \n  @UseGuards(JwtAuthGuard)\n  @Post(':orgUuid/courses')\n  async createCourse(\n    @Param('orgUuid')\n    orgUuid: string,\n    @Body() createCourseDto: CreateCourseDTO\n  ) {\n    return this.courseService.addCourseByOrgUuid(orgUuid, createCourseDto);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Delete(':orgUuid/courses/:courseUuid')\n  deleteByUuid(\n    @Param('uuid')\n    uuid: string,\n    @Param('courseUuid')\n    courseUuid: string\n  ) {\n    return this.courseService.deleteCourseByUuid(uuid, courseUuid);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Put(':orgUuid/courses/:courseUuid')\n  editByUuid(\n    @Param('uuid')\n    uuid: string,\n    @Param('courseUuid')\n    courseUuid: string,\n    @Body() course: CourseInterface\n  ) {\n    return this.courseService.editCourseByUuid(uuid, courseUuid, course);\n  }\n}\n","import { Module } from '@nestjs/common';\n\n@Module({})\nexport class PermissionsModule {}\n","import { AuthModule } from '@application/auth';\nimport { AboutUsSchema, SharedApiModule } from '@application/shared-api';\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AboutUsController } from './about-us.controller';\nimport { CareersController } from './careers.controller';\nimport { ContactUsController } from './contact-us.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: 'AboutUs',\n        schema: AboutUsSchema,\n      },\n    ]),\n    SharedApiModule,\n    AuthModule\n  ],\n  controllers: [AboutUsController, CareersController, ContactUsController],\n})\nexport class PortalModule {}\n","import { AuthModule } from '@application/auth';\nimport { SharedApiModule } from '@application/shared-api';\nimport { Module } from '@nestjs/common';\nimport { QBankSubjectController } from './qbank-subjects.controller';\nimport { QBankController } from './qbank.controller';\n\n@Module({\n  imports: [SharedApiModule, AuthModule],\n  controllers: [QBankController, QBankSubjectController],\n  providers: [],\n})\nexport class QBankModule {}\n","import { AuthModule } from '@application/auth';\nimport { QuestionSchema, SharedApiModule } from '@application/shared-api';\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { QuestionsController } from './questions.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: 'Question',\n        schema: QuestionSchema,\n      }\n    ]),\n    SharedApiModule,\n    AuthModule\n  ],\n  controllers: [QuestionsController],\n})\nexport class QuestionsModule {}\n","import { AuthModule } from '@application/auth';\nimport { SampleSchema, SharedApiModule } from '@application/shared-api';\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { SampleController } from './sample.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: 'Sample',\n        schema: SampleSchema,\n      },\n    ]),\n    SharedApiModule,\n    AuthModule,\n  ],\n  controllers: [SampleController],\n})\nexport class SampleModule {}\n","import { AuthModule } from '@application/auth';\nimport { SharedApiModule } from '@application/shared-api';\nimport { Module } from '@nestjs/common';\nimport { SubscriptionsController } from './subscriptions.controller';\n\n@Module({\n  imports: [\n    SharedApiModule,\n    AuthModule,\n  ],\n  controllers: [SubscriptionsController]\n})\nexport class SubscriptionsModule {}\n","import { AuthModule } from '@application/auth';\nimport { SharedApiModule, SyllabusSchema } from '@application/shared-api';\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { SyllabusController } from './syllabus.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: 'Syllabus',\n        schema: SyllabusSchema,\n      },\n    ]),\n    SharedApiModule,\n    AuthModule,\n  ],\n  controllers: [SyllabusController],\n})\nexport class SyllabusModule {}\n","import { AuthModule } from '@application/auth';\nimport { SharedApiModule, TestSchema, TSCategoriesSchema } from '@application/shared-api';\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { TestCategoryController } from './test-category.controller';\nimport { TestsController } from './tests.controller';\nimport { TestSeriesController } from './test-series.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: 'TSCategories',\n        schema: TSCategoriesSchema,\n      },\n      {\n        name: 'Test',\n        schema: TestSchema,\n      },\n    ]),\n    SharedApiModule, AuthModule],\n    controllers: [\n      TestCategoryController,\n      TestsController,\n      TestSeriesController\n    ],\n    providers: [],\n})\nexport class TestSeriesModule {}\n","import { AuthModule } from '@application/auth';\nimport { SharedApiModule } from '@application/shared-api';\nimport { Module } from '@nestjs/common';\nimport { UsersController } from './users.controller';\n\n@Module({\n  imports: [SharedApiModule, AuthModule],\n  controllers: [UsersController],\n  providers: [],\n})\nexport class ManageUsersModule {}\n","import { SharedApiModule } from '@application/shared-api';\nimport { Module } from '@nestjs/common';\nimport { VideoCipherController } from './video-cipher.controller';\n\n@Module({\n  imports: [\n    SharedApiModule,\n  ],\n  controllers: [VideoCipherController]\n})\nexport class VideoCipherModule {}\n","import { AuthModule } from '@application/auth';\nimport { SharedApiModule } from '@application/shared-api';\nimport { Module } from '@nestjs/common';\nimport { VideosSubjectController } from './videos-subjects.controller';\nimport { VideosController } from './videos.controller';\n\n@Module({\n  imports: [\n    SharedApiModule,\n    AuthModule,\n  ],\n  controllers: [\n    VideosSubjectController,\n    VideosController,\n  ],\n})\nexport class VideosModule {}\n","import { AuthModule } from '@application/auth';\nimport { PearlsSchema, SharedApiModule } from '@application/shared-api';\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PearlsController } from './pearls.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: 'Pearls',\n        schema: PearlsSchema,\n      },\n    ]),\n    SharedApiModule,\n    AuthModule,\n  ],\n  controllers: [PearlsController],\n})\nexport class PearlsModule {}\n","import { AuthModule } from '@application/auth';\nimport { UserTransactionsSchema, SharedApiModule } from '@application/shared-api';\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UserTransactionsController } from './user-transactions.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: 'UserTransactions',\n        schema: UserTransactionsSchema,\n      },\n    ]),\n    SharedApiModule,\n    AuthModule,\n  ],\n  controllers: [UserTransactionsController],\n})\nexport class UserTransactionsModule {}\n","import { AuthModule } from '@application/auth';\nimport { RoleModuleSchema, SharedApiModule } from '@application/shared-api';\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { RoleValuesController } from './role-values.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: 'RoleModules',\n        schema: RoleModuleSchema,\n      },\n    ]),\n    SharedApiModule,\n    AuthModule,\n  ],\n  controllers: [RoleValuesController],\n})\nexport class RoleValuesModule {}\n","import { AuthModule } from '@application/auth';\nimport { RoleSubModulesSchema, SharedApiModule } from '@application/shared-api';\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { RoleSubModulesController } from './role-submodules.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: 'RoleSubModules',\n        schema: RoleSubModulesSchema,\n      },\n    ]),\n    SharedApiModule,\n    AuthModule,\n  ],\n  controllers: [RoleSubModulesController],\n})\nexport class RoleSubModulesModule {}\n","import { AuthModule } from '@application/auth';\nimport { RolesSchema, SharedApiModule } from '@application/shared-api';\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { RolesController } from './roles.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: 'Roles',\n        schema: RolesSchema,\n      },\n    ]),\n    SharedApiModule,\n    AuthModule,\n  ],\n  controllers: [RolesController],\n})\nexport class RolesModule {}\n\n","import { AuthModule } from '@application/auth';\nimport {  SharedApiModule, AgentTransactionsSchema } from '@application/shared-api';\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AgentTransactionsController } from './agent-transactions.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: 'AgentTransactions',\n        schema: AgentTransactionsSchema,\n      },\n    ]),\n    SharedApiModule,\n    AuthModule,\n  ],\n  controllers: [AgentTransactionsController],\n})\nexport class AgentTransactionsModule {}\n","import { AuthModule } from '@application/auth';\nimport { PearlsSchema, PearlSubjectsSchema,SharedApiModule } from '@application/shared-api';\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PearlSubjectsController } from './pearl-subjects.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: 'PearlSubjects',\n        schema: PearlSubjectsSchema,\n      },\n    ]),\n    SharedApiModule,\n    AuthModule,\n  ],\n  controllers: [PearlSubjectsController],\n})\nexport class PearlSubjectsModule {}\n","import { AuthModule } from '@application/auth';\nimport { SuggestedVideosSchema, SharedApiModule } from '@application/shared-api';\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { SuggestedVideosController } from './suggested-videos.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: 'SuggestedVideos',\n        schema: SuggestedVideosSchema,\n      },\n    ]),\n    SharedApiModule,\n    AuthModule,\n  ],\n  controllers: [SuggestedVideosController],\n})\nexport class SuggestedVideosModule {}\n","import { AuthModule } from '@application/auth';\nimport { SuggestedTestsSchema, SharedApiModule } from '@application/shared-api';\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { SuggestedTestsController } from './suggested-tests.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: 'SuggestedTests',\n        schema: SuggestedTestsSchema,\n      },\n    ]),\n    SharedApiModule,\n    AuthModule,\n  ],\n  controllers: [SuggestedTestsController],\n})\nexport class SuggestedTestsModule {}\n","import { AuthModule } from '@application/auth';\nimport { SuggestedQbankSchema, SharedApiModule } from '@application/shared-api';\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { SuggestedQbankController } from './suggested-qbank.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: 'SuggestedQbank',\n        schema: SuggestedQbankSchema,\n      },\n    ]),\n    SharedApiModule,\n    AuthModule,\n  ],\n  controllers: [SuggestedQbankController],\n})\nexport class SuggestedQbankModule {}\n","import { AuthModule } from '@application/auth';\nimport { MCQOfTheDaySchema, SharedApiModule } from '@application/shared-api';\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { MCQOfTheDayController } from './mcq-of-the-day.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: 'MCQOfTheDay',\n        schema: MCQOfTheDaySchema,\n      },\n    ]),\n    SharedApiModule,\n    AuthModule,\n  ],\n  controllers: [MCQOfTheDayController],\n})\nexport class MCQOfTheDayModule {}\n","import { AuthModule } from '@application/auth';\nimport { LogsSchema, SharedApiModule } from '@application/shared-api';\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { LogsController } from './logs.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: 'Logs',\n        schema: LogsSchema,\n      },\n    ]),\n    SharedApiModule,\n    AuthModule,\n  ],\n  controllers: [LogsController],\n})\nexport class LogsModule {}\n","import { AuthModule } from '@application/auth';\nimport { SharedApiModule } from '@application/shared-api';\nimport { Module } from '@nestjs/common';\nimport { FeedbackController } from './feedback.controller';\n\n@Module({\n  imports: [SharedApiModule, AuthModule],\n  controllers: [FeedbackController],\n  providers: [],\n})\nexport class PortalFeedbackModule {}\n","import { AuthModule } from '@application/auth';\nimport { SharedApiModule } from '@application/shared-api';\nimport { Module } from '@nestjs/common';\nimport { DepartmentController } from './department.controller';\n\n@Module({\n  imports: [SharedApiModule, AuthModule],\n  controllers: [DepartmentController],\n  providers: [],\n})\nexport class ManageDepartmentModule {}\n","var firebase = require(\"firebase-admin\");\n\nvar serviceAccount = require(\"../config/plato-online-firebase.json\");\n\nfirebase.initializeApp({\n    credential: firebase.credential.cert(serviceAccount),\n});\n\nmodule.exports.firebase = firebase\n","module.exports = require(\"firebase-admin\");","module.exports = require(\"rxjs/operators\");","module.exports = require(\"passport-jwt\");","import { Global, HttpModule, Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport * as fromHelpers from './helpers';\nimport * as fromMobileServices from './mobile-services';\nimport {\n  AboutUsSchema,\n  BannerSchema,\n  CareersSchema,\n  CouponSchema,\n  CourseSchema,\n  FacultySchema,\n  QBankSchema,\n  QBankSubjectSchema,\n  QuestionSchema,\n  ReportErrorSchema,\n  SampleSchema,\n  SubmittedQBankTopicSchema,\n  SubmittedTestSchema,\n  SubscriptionSchema,\n  SyllabusSchema,\n  TagsSchema,\n  TestSchema,\n  TSCategoriesSchema,\n  UserMessageSchema,\n  UserSchema,\n  VideoSchema,\n  VideoSubjectSchema,\n  PearlsSchema,\n  EmployeeSchema,\n  UserTransactionsSchema,\n  RoleModuleSchema,\n  RoleSubModulesSchema,\n  RolesSchema,\n  AgentTransactionsSchema,\n  PearlSubjectsSchema,\n  SuggestedVideosSchema,\n  SuggestedTestsSchema,\n  SuggestedQbankSchema,\n  MCQOfTheDaySchema,\n  NotificationsSchema,\n  UserNotificationsSchema,\n  LogsSchema,\n  DailyTestQuestionsSchema,\n  DisableuserfortestsubmitSchema,\n  OrganizationSchema,\n\n  FeedbackSheema,\n  DepartmentSchema,\n  TicketSchema,\n\n} from './schema';\nimport * as fromServices from './services';\n\nconst videoCipherApiKey = '';\n\n@Global()\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: 'AboutUs',\n        schema: AboutUsSchema,\n      },\n      {\n        name: 'Banner',\n        schema: BannerSchema,\n      },\n      {\n        name: 'Sample',\n        schema: SampleSchema,\n      },\n      {\n        name: 'Career',\n        schema: CareersSchema,\n      },\n      {\n        name: 'Course',\n        schema: CourseSchema,\n      },\n      {\n        name: 'Coupon',\n        schema: CouponSchema,\n      },\n      {\n        name: 'Faculty',\n        schema: FacultySchema,\n      },\n      {\n        name: 'QBank',\n        schema: QBankSchema,\n      },\n      {\n        name: 'QBankSubject',\n        schema: QBankSubjectSchema,\n      },\n      {\n        name: 'Question',\n        schema: QuestionSchema,\n      },\n      {\n        name: 'ReportError',\n        schema: ReportErrorSchema,\n      },\n      {\n        name: 'Subscription',\n        schema: SubscriptionSchema,\n      },\n      {\n        name: 'Syllabus',\n        schema: SyllabusSchema,\n      },\n      {\n        name: 'Tags',\n        schema: TagsSchema,\n      },\n      {\n        name: 'Test',\n        schema: TestSchema,\n      },\n      {\n        name: 'TSCategories',\n        schema: TSCategoriesSchema,\n      },\n      {\n        name: 'User',\n        schema: UserSchema,\n      },\n      {\n        name: 'UserMessage',\n        schema: UserMessageSchema,\n      },\n      {\n        name: 'Video',\n        schema: VideoSchema,\n      },\n      {\n        name: 'VideoSubject',\n        schema: VideoSubjectSchema,\n      },\n      {\n        name: 'SubmittedTest',\n        schema: SubmittedTestSchema,\n      },\n      {\n        name: 'SubmittedQBankTopic',\n        schema: SubmittedQBankTopicSchema,\n      },\n      {\n        name: 'Pearls',\n        schema: PearlsSchema,\n      },\n      {\n        name: 'Employee',\n        schema: EmployeeSchema,\n      },\n      {\n\n        name: 'UserTransactions',\n        schema: UserTransactionsSchema,\n      },\n      {\n        name: 'RoleModules',\n        schema: RoleModuleSchema,\n      },\n      {\n        name: 'RoleSubModules',\n        schema: RoleSubModulesSchema,\n      },\n      {\n        name: 'Roles',\n        schema: RolesSchema,\n      },\n      {\n        name: 'AgentTransactions',\n        schema: AgentTransactionsSchema,\n      },\n      {\n        name: 'PearlSubjects',\n        schema: PearlSubjectsSchema,\n      },\n      {\n        name: 'SuggestedVideos',\n        schema: SuggestedVideosSchema,\n      },\n      {\n        name: 'SuggestedTests',\n        schema: SuggestedTestsSchema,\n      },\n      {\n        name: 'SuggestedQbank',\n        schema: SuggestedQbankSchema,\n      },\n      {\n        name: 'Notifications',\n        schema: NotificationsSchema,\n      },\n      {\n        name: 'UserNotifications',\n        schema: UserNotificationsSchema,\n      },\n      {\n\n        name: 'MCQOfTheDay',\n        schema: MCQOfTheDaySchema,\n      },\n      {\n        name: 'Logs',\n        schema: LogsSchema\n      },\n      {\n        name: 'DailyTestQuestions',\n        schema: DailyTestQuestionsSchema\n      },\n      {\n        name: 'Disableuserfortestsubmits',\n        schema: DisableuserfortestsubmitSchema\n      },\n      {\n        name: 'Organization',\n        schema: OrganizationSchema\n      },\n      {\n        name: 'Feedbacks',\n        schema: FeedbackSheema\n      },\n\n      {\n        name: 'Department',\n        schema: DepartmentSchema\n      },\n      {\n        name: 'Ticket',\n        schema: TicketSchema\n      },\n\n    ]),\n    HttpModule.registerAsync({\n      useFactory: () => ({\n        maxRedirects: 5,\n        headers: {\n          'Accept': 'application/json',\n          'Authorization': `Apisecret ${videoCipherApiKey}`,\n          'Content-Type': 'application/json'\n        }\n      }),\n    }),\n  ],\n  providers: [\n    ...fromServices.services,\n    ...fromMobileServices.mobileServices,\n    ...fromHelpers.apiHelpers,\n  ],\n  exports: [...fromServices.services, ...fromMobileServices.mobileServices],\n})\nexport class SharedApiModule {}\n","export enum GenderEnum {\n  MALE = 'MALE',\n  FEMALE = 'FEMALE',\n  // OTHER = 'OTHER',\n}\n\nexport interface KeyInterface {\n  uuid: string;\n  title: string;\n}\n\nexport interface EntityInterface {\n  _id?: string;\n  uuid: string;\n  title: string;\n  course_id:string\n}\n\nexport interface FlagsInterface {\n  active: boolean;\n  paid?: boolean;\n}\n\nexport interface AgentsFlagsInterface {\n  isLoggedIn: boolean;\n  isActive:boolean;\n}\n\nexport interface ResponseInterface<T> {\n  statusCode: number;\n  message: string;\n  response?: T;\n  errors?: string[];\n  ok: boolean;\n}\n\nexport enum EntityStatusEnum {\n  IN_PROGRESS = 'IN_PROGRESS',\n  PAUSED = 'PAUSED',\n  SUBMITTED = 'SUBMITTED',\n  YET_TO_START = 'YET_TO_START',\n}\n","import { UserKeyInterface } from './user-interface';\n\nexport interface CareerInterface {\n  uuid: string;\n  title: string;\n  code: string;\n  designation: string;\n  department: DepartmentENum;\n  description: string;\n  qualifications: string[];\n  requirements: string[];\n  skills: SkillsInterface;\n  flags: CareersFlagsInterface;\n  createdOn: Date;\n  modifiedOn?: Date;\n  createdBy: UserKeyInterface;\n  modifiedBy?: UserKeyInterface;\n}\n\nexport interface SkillsInterface { mustHave: string[]; goodToHave: string[]; }\n\nexport enum DepartmentENum {\n  EDITING = 'EDITING',\n  DATAENTRY = 'DATAENTRY',\n  TELECALLING = 'TELECALLING',\n  DEVELOPERS = 'DEVELOPERS',\n  FINANCE = 'FINANCE',\n  ACCOUNTS = 'ACCOUNTS',\n  OPERATIONS = 'OPERATIONS',\n  ADMINISTRATION = 'ADMINISTRATION',\n  SALESMARKETING = 'SALESMARKETING',\n  RECRUITMENT = 'RECRUITMENT',\n  HR = 'HR'\n}\n\nexport interface CareersFlagsInterface {\n  active: boolean;\n  editable: boolean;\n}\n","import { SyllabusInterface, UserKeyInterface } from '@application/api-interfaces';\nimport * as mongoose from 'mongoose';\n\nexport enum QuestionTypeEnum {\n  MULTIPLE = 'MULTIPLE',\n  SINGLE = 'SINGLE',\n  ESSAY = 'ESSAY',\n  FIB = 'FIB',\n  IMG = 'IMG',\n  FILL_IN_THE_BLANK=\"FILL_IN_THE_BLANK\",\n  TRUE_OR_FALSE=\"TRUE_OR_FALSE\",\n  MATCH_THE_FOLLOWING=\"MATCH_THE_FOLLOWING\"\n}\n\nexport interface matchLeftOptionsInterface {\n  name: string;\n  value: number;\n  imgUrl?: string;\n  upload:boolean;\n}\n\nexport interface matchRightOptionsInterface {\n  name: string;\n  value: any;\n  imgUrl?: string;\n  upload:boolean;\n}\n\nexport enum QuestionDifficultyEnum {\n  EASY = 'EASY',\n  MEDIUM = 'MEDIUM',\n  HARD = 'HARD',\n}\n\nexport enum QuestionClassficationEnum {\n  SUBJECT = 'SUBJECT',\n  CHAPTER = 'CHAPTER',\n  TOPIC = 'TOPIC',\n  SUBTOPIC = 'SUBTOPIC',\n}\n\nexport interface QuestionOptionsInterface {\n  name: string;\n  value: number;\n  imgUrl?: string;\n  weightage?: number;\n}\n\nexport interface RoleValueOptionsInterface {\n  name: string;\n  value: number;\n}\n\nexport interface PeralSubjectChapterInterface {\n  subject: any;\n  chapter: any;\n // value: number;\n}\n\nexport interface QuestionFollowingOptionsInterface {\n  name: string;\n  value: any;\n  imgUrl?: string;\n  weightage?: number;\n}\n\nexport interface MatchQuestionAnswerInterface {\n  name: any;\n  // value: any;\n}\n\n\nexport interface QuestionClassficationInterface {\n  uuid: string;\n  name: string;\n  type: QuestionClassficationEnum;\n}\n\n// free - it defines if the question is available only for free users.\n// pro - it defines if the question is available only for pro users.\n// status - allow whether to be added to the tests.\n// editable - open for editions. available only for admins.\n// relationship - allow if the question can be assignable to-\n// single/multiple topic.\n\nexport interface QuestionFlagsInterface {\n  pro: boolean;\n  editable: boolean;\n  active: boolean;\n  qBank: boolean;\n  testSeries: boolean;\n  paid?:boolean;\n}\n\nexport interface QuestionAnswerInterface {\n  options?: number[];\n  fib?: string[];\n  comprehension?: string;\n}\n\nexport interface TestSeries {\n  uuid: string;\n  name: string;\n}\n\nexport interface QuestionInterface {\n  _id?: mongoose.Types.ObjectId;\n  uuid: string;\n  title: string;\n  type: string;\n  options: QuestionOptionsInterface[];\n  followingOptions:QuestionFollowingOptionsInterface[];\n  imgUrl?: string;\n  descriptionImgUrl?:string;\n  previousAppearances?: string;\n  difficulty: string;\n  syllabus: any;\n  perals:any;\n  answer: QuestionAnswerInterface;\n  description: string;\n  flags: QuestionFlagsInterface;\n  toggle?: boolean;\n  tags?: string;\n  mathType?:string;\n  testSeries: TestSeries[];\n  createdOn: Date;\n  modifiedOn?: Date;\n  createdBy: UserKeyInterface;\n  modifiedBy?: UserKeyInterface;\n  checked?: boolean;\n  questionId?:any;\n}\n\nexport interface QbankQuestionInterface {\n  qbank_subject:any;\n  qbank_chapter:any;\n  qbank_topic:any;\n  que:any;\n  qbank_que:any;\n}\n\nexport interface TestSeriesQuestionInterface {\n  ts_uuid:any;\n  test:any;\n  que:any;\n  test_que:any;\n}\n\nexport interface SelectedQuestionInterface {\n  que: QuestionInterface;\n  isSelected: boolean;\n  positive: number;\n  negative: number;\n  order: number;\n  // question:any\n}\n\nexport interface QuestionEntityInterface {\n  uuid: string;\n  _id: string;\n  selectedOption: number;\n  title?: string;\n  type?: string;\n  options?: QuestionOptionsInterface[];\n  imgUrl?: string;\n  previousAppearances?: string;\n  difficulty?: string;\n  syllabus?: any;\n  answer?: QuestionAnswerInterface;\n  description?: string;\n}\n","import * as mongoose from 'mongoose';\nimport { FlagsInterface, KeyInterface } from './api-interfaces';\nimport { UserKeyInterface } from './user-interface';\n\nexport enum SyllabusTypeEnum {\n  SUBJECT = 'SUBJECT',\n  CHAPTER = 'CHAPTER',\n  // TOPIC = 'TOPIC',\n  // SUBTOPIC = 'SUBTOPIC',\n}\n\nexport interface SyllabusFlagsInterface {\n  editable: boolean;\n  testSeries: boolean;\n  videos: boolean;\n  materials: boolean;\n  flashCards: boolean;\n  questionBank: boolean;\n  mcq: boolean;\n  suggested: boolean;\n  active:boolean;\n}\n\nexport interface SyllabusInterface {\n  uuid: string;\n  _id?: mongoose.Types.ObjectId;\n  title: string;\n  shortcut: string;\n  order: number;\n  type: SyllabusTypeEnum;\n  imgUrlVideos?: string;\n  suggestedBanner?: string;\n  imgUrlQBank?: string;\n  parents?: any;\n  children?: any;\n  createdOn: Date;\n  modifiedOn: Date;\n  readonly flags: SyllabusFlagsInterface;\n  createdBy: UserKeyInterface;\n  modifiedBy?: UserKeyInterface;\n}\n\nexport interface SyllabusKeyInterface extends KeyInterface {\n  type: string;\n}\n","import { EntityInterface, FlagsInterface, SubmitUserQBankTopicInterface, SubmitUserTestInterface } from '@application/api-interfaces';\nimport * as mongoose from 'mongoose';\nimport { AddressInterface } from './organization-interface';\nimport { QuestionEntityInterface, QuestionInterface } from './question-interface';\n\nexport interface UserKeyInterface {\n  _id?: string;\n  uuid: string;\n  mobile?: number;\n  imgUrl?: string;\n  name: string;\n}\n\nexport interface objectInterface{\n  \n}\nexport interface UserDeviceInterface {\n  device_type: string;\n  id: string;\n  isLoggedIn: boolean;\n}\n\nexport enum UserTypeEnum {\n  STUDENT = 'STUDENT',\n  // ADMIN = 'ADMIN',\n  // SUPER = 'SUPER',\n  // FACULTY = 'FACULTY',\n  // DATAENTRY = 'DATAENTRY'\n}\n\nexport enum PaymentStatusEnum {\n  ORDERCREATED = 'ORDERCREATED',\n  PENDING = 'PENDING',\n  SUCCESS = 'SUCCESS',\n  FAILED = 'FAILED',\n\n}\n\nexport enum ModeOfPaymentEnum {\n  RAZORPAY = 'RAZORPAY',\n  CASH = 'CASH',\n  POSMACHINE = 'POSMACHINE',\n  UPI = 'UPI',\n  OFFLINE = 'OFFLINE',\n  MasterAdvise = 'MasterAdvise',\n}\n\nexport enum EmployeeTypeEnum {\n  ADMIN = 'ADMIN',\n  SUPER = 'SUPER',\n  // FACULTY = 'FACULTY',\n  DATAENTRY = 'DATAENTRY'\n}\n\nexport interface UserSubscriptionInterface {\n  uuid: string;\n  _id: string;\n  title: string;\n  paid?: number;\n}\nexport interface feedbackUsersRatingInterface {\n  user_id: mongoose.Types.ObjectId;\n  rating: number;\n  createdOn: Date;\n  message: string;\n}\nexport interface UserObjectSubscriptionInterface {\n  tests?: any;\n  qbanks?: any;\n  subscription_id: mongoose.Types.ObjectId;\n  expiry_date: Date;\n  createdOn: Date;\n}\n\nexport enum BookmarkSourceTypeEnum {\n  TEST = 'TEST',\n  QB = 'QB'\n}\n\nexport interface UserBookmarkedQuestionMetadataInterface {\n  _id: string;\n  type: BookmarkSourceTypeEnum;\n  title: string;\n  uuid: string;\n}\n\nexport interface UserBookmarkInterface {\n  uuid: string;\n  question: [ {type : mongoose.Schema.Types.ObjectId, ref : 'Question'} ];\n  metadata: UserBookmarkedQuestionMetadataInterface;\n  createdOn: Date;\n}\n\nexport interface UserSubmissionInterface {\n  tests: SubmitUserTestInterface[];\n  qbanks: SubmitUserQBankTopicInterface[];\n}\n\nexport interface UserFlagsInterface extends FlagsInterface {\n  isLoggedIn: boolean;\n  isActive:boolean;\n}\n\nexport interface ResetPasswordInterface { oldPassword: string; newPassword: string; }\nexport interface ResetEmployeePasswordInterface {  newPassword: string; }\n\n\nexport interface UserTestInterface {\n  category: EntityInterface;\n  course: EntityInterface;\n  test: EntityInterface;\n  subject?: EntityInterface;\n  elapsedTime?: number;\n  totalTime: number;\n  expiryDate: Date;\n  status: string;\n  questions?: QuestionEntityInterface[];\n  startedAt: Date;\n  stoppedAt?: Date;\n}\n\nexport interface UserQbTopicInterface {\n  chapter: EntityInterface;\n  course: EntityInterface;\n  topic: EntityInterface;\n  subject?: EntityInterface;\n  status: string;\n  questions?: QuestionEntityInterface[];\n  startedAt: Date;\n  stoppedAt?: Date;\n}\n\n\nexport interface UserInterface {\n  uuid: string;\n  mobile: number;\n  email: string;\n  name: string;\n  dob?: Date;\n  college?: string;\n  type: UserTypeEnum;\n  courses?: any;\n  videos?: any;\n  // tests?: UserTestInterface[];\n  // qbanks?: UserQbTopicInterface[];\n  qbanks?: any;\n  tests?:any;\n  subscriptions?: any;\n  // QUESTION BOOKMARKS\n  bookmarks?: UserBookmarkInterface[];\n  devices?: UserDeviceInterface[];\n  submissions?: UserSubmissionInterface;\n  organizations?: any;\n  address: AddressInterface;\n  flags: UserFlagsInterface;\n  imgUrl?: any;\n  readonly createdOn: Date;\n  readonly modifiedOn?: Date;\n  gender: string;\n  password?: string;\n  otp?: number;\n  createdBy: UserKeyInterface;\n  modifiedBy?: UserKeyInterface;\n  accessToken?: string;\n}\n\nexport interface EmployeeInterface {\n  uuid: string;\n  mobile: number;\n  email: string;\n  name: string;\n  dob?: Date;\n  college?: string;\n  // type: UserTypeEnum;\n  role?:any;\n  courses?: any;\n  bookmarks?: UserBookmarkInterface[];\n  devices?: UserDeviceInterface[];\n  submissions?: UserSubmissionInterface;\n  organizations?: any;\n  address: AddressInterface;\n  flags: UserFlagsInterface;\n  imgUrl?: any;\n  readonly createdOn: Date;\n  readonly modifiedOn?: Date;\n  gender: string;\n  password?: string;\n  createdBy: UserKeyInterface;\n  modifiedBy?: UserKeyInterface;\n  accessToken?: string;\n}\nexport interface UserTransactonsInterface {\n  uuid: string;\n  userId:any;\n  subscriptionId: any;\n  dateOfPayment?:Date;\n  expiryDate?: Date;\n  actualPrice:number;\n  discountPrice:number;\n  finalPaidAmount:number;\n  couponId:any;\n  paymentType:string;\n  modeOfPayment: string;\n  paymentStatus:string;\n  filePath: string;\n  billNumber: string;\n  chequeNumber:string;\n  chequeDate?: Date;\n  bankName: string;\n  referenceNumber: string;\n  creditORdebitCard: string;\n  cardType:string;\n  upiId:string;\n  mode_transactionNumber:string;\n  paymentCreatedOn?: Date;\n  createdBy?:UserKeyInterface;\n  transactionId:string;\n  razorpayOrderId:string;\n  razorPayPaymentId:string;\n  razoraySignature:string;\n  paymentMessage:string;\n\n}\n\nexport interface TransactionsDateInterface{\n\n  fromDate: Date;\n  toDate: Date;\n\n}\n\nexport interface RoleInterface{\n  uuid: string;\n  _id?: mongoose.Types.ObjectId;\n  title?:string;\n  rolePermissions:any;\n  flags?: UserFlagsInterface;\n  readonly createdOn: Date;\n  readonly modifiedOn?: Date;\n  createdBy: UserKeyInterface;\n  modifiedBy?: UserKeyInterface;\n}\n\n// export interface RoleValueInterface{\n//   uuid: string;\n//   _id?: mongoose.Types.ObjectId;\n//   title:string;\n//   subModules:any;\n//   flags: UserFlagsInterface;\n//   readonly createdOn: Date;\n//   readonly modifiedOn?: Date;\n//   createdBy: UserKeyInterface;\n//   modifiedBy?: UserKeyInterface;\n// }\n\n// export interface RoleSubModuleInterface{\n//   uuid: string;\n//   title:string;\n//   flags: UserFlagsInterface;\n//   readonly createdOn: Date;\n//   readonly modifiedOn?: Date;\n//   createdBy: UserKeyInterface;\n//   modifiedBy?: UserKeyInterface;\n// }\n","export * from './form.interface';\nexport * from './question.interface';\nexport * from './xquestion.interface';\nexport * from './login.interface';\nexport * from './sign-up.interface';\nexport * from './video.interface';\nexport * from './subject.interface';\nexport * from './store.interface';","export interface FormInterface {\n    element: FormElement;\n    label: string;\n    inputType: InputType;\n    value: any;\n    name: string;\n    id: string;\n    options?: { text: string; value: string | number }[];\n}\n\nexport enum FormElement {\n    input = 'input',\n    textarea = 'textarea',\n    select = 'select',\n}\n\nexport enum InputType {\n    text = 'text',\n    email = 'email',\n    search = 'search',\n    checkbox = 'checkbox',\n    radio = 'radio',\n    number = 'number',\n}","export interface XQuestionInterface {\n    id?: number;\n    title: string;\n    image: string;\n    options: string;\n    optionImage: string;\n    solution: string;\n    solutionDescription: string;\n    solutionImageDescription: string;\n    solutionImage: string;\n    year: number;\n    previousApperances: string;\n    difficulty: DifficultyEnum;\n    reference: string;\n    tags: string;\n}\n\nenum DifficultyEnum {\n    easy = 1,\n    medium = 2,\n    hard = 3,\n}","export interface StuVideoInterface {\n  sno: number;\n  courseName: string;\n  subject: string;\n  name: string;\n  chapterName: string;\n  video: {\n    id: string;\n    totalTime: Date;\n    authorName: string;\n    authorImage: string;\n  }\n  chapterNotes: string;\n  accessType: VideoAccessType;\n  suggestedVideos: boolean;\n  createdDate: Date;\n  modifiedDate: Date;\n\n}\n\nexport enum VideoAccessType {\n  free = 'free',\n  paid = 'paid'\n}","import * as mongoose from 'mongoose';\nimport { FacultyInterface, FlagsInterface, SyllabusInterface, UserKeyInterface } from '..';\n\n\nexport interface VideoSubjectInterface {\n  uuid: string;\n  _id?: mongoose.Types.ObjectId;\n  // title: string;\n  order: number;\n  count: number;\n  imgUrl: string;\n  courses: any;\n  syllabus:any;\n  chapters: VideoSubjectChapterInterface[];\n  readonly createdOn: any;\n  modifiedOn?: any;\n  flags: VideoFlagsInterface;\n  createdBy: UserKeyInterface;\n  modifiedBy?: UserKeyInterface;\n}\n\nexport interface VideoSubjectChapterInterface {\n  _id:string;\n  uuid: string;\n  title: string;\n  order: number;\n  videos: VideoInterface[];\n}\n\n\nexport interface VideoInterface {\n  uuid: string;\n  title: string;\n  totalTime: string;\n  videoType?:string;\n  videoId: string;\n  order: number;\n  youtubeUrl: string;\n  androidUrl:string;\n  accessToken?:string;\n  iosUrl:string;\n  videoSubjectUuid: any;\n  // chapter: { title: string; uuid: string; };\n  chapter: any;\n  faculty: any;\n  // faculty:mongoose.ObjectId;\n  topics: VideoCheckpointsInterface[];\n  // slides: string[];\n  videos:any;\n  count:number;\n  slides: string;\n  notes: string;\n  bannerName:string;\n  suggestedBanner?: string;\n  publishOn: Date;\n  flags: VideoFlagsInterface;\n  createdOn: Date;\n  modifiedOn?: Date;\n  createdBy: UserKeyInterface;\n  modifiedBy?: UserKeyInterface;\n  \n  to_subject:string;\n  to_chapter:string;\n  from_subject:string;\n  from_chapter:string;\n  from_video:string\n}\n\nexport interface VideoCheckpointsInterface {\n  name: string;\n  time: string;\n  faculty: any;\n  topicOrder:number\n}\n\nexport interface VideoFlagsInterface extends FlagsInterface {\n  suggested: boolean;\n}\n\nexport enum UserVideoStatusEnum {\n  PAUSED = 'PAUSED',\n  YET_TO_START = 'YET_TO_START',\n  COMPLETED = 'COMPLETED'\n}\n\nexport interface UserVideoInterface {\n  uuid: string;\n  title: string;\n  vdoCipherId: string;\n  status: UserVideoStatusEnum;\n  remainingTime: string;\n}\n\nexport interface VideoPlaybackInfoInterface {\n  userUuid: string;\n  vdoCipherId: string;\n  title: string;\n  totalTime: string;\n}\n","import { FlagsInterface, UserKeyInterface } from '@application/api-interfaces';\nimport * as mongoose from 'mongoose';\n\nexport interface RoleValueInterface {\n  uuid: string;\n  _id?: mongoose.Types.ObjectId;\n  title: string;\n  subModules: any;\n  createdOn: Date;\n  modifiedOn?: Date;\n  createdBy: UserKeyInterface;\n  modifiedBy?: UserKeyInterface;\n  flags: FlagsInterface;\n}\n\nexport enum RoleSubModulesEnum {\n  ADD = 'ADD',\n  DELETE = 'DELETE',\n  EDIT = 'EDIT',\n  VIEW = 'VIEW',\n  RESET_PASSWORD = 'RESET_PASSWORD',\n  ASSIGN_SUBSCRIPTIONS = 'ASSIGN_SUBSCRIPTIONS',\n  VIEW_QUESTIONS = 'VIEW_QUESTIONS',\n  AGENT_TRANSACTIONS = 'AGENT_TRANSACTIONS',\n  AGENT_COUPONS = 'AGENT_COUPONS',\n  AGENT_AMOUNT_PAY = 'AGENT_AMOUNT_PAY',\n  TEST_RESET = 'TEST_RESET',\n}\n\nexport enum RoleModulesEnum {\n  PAYMENTS_DASHBOARD = 'PAYMENTS_DASHBOARD',\n\n  //////////  BANK   /////\n  BANK = 'BANK',\n  BANNERS = 'BANNERS',\n  QUESTIONS = 'QUESTIONS',\n  QUESTION_TAGS = 'QUESTION_TAGS',\n  SYLLABUS = 'SYLLABUS',\n  VIDEO_CYPHER = 'VIDEO_CYPHER',\n  MCQ_OF_THE_DAY = 'MCQ_OF_THE_DAY',\n\n  //////////  MANAGE   /////\n  MANAGE = 'MANAGE',\n  COUPONS = 'COUPONS',\n  COURSES = 'COURSES',\n  AGENTS = 'AGENTS',\n  SUBSCRIPTIONS = 'SUBSCRIPTIONS',\n  EMPLOYEE = 'EMPLOYEE',\n  USERS = 'USERS',\n  USER_TRANSACTIONS = 'USER_TRANSACTIONS',\n  ROLE_SUB_MODULES = 'ROLE_SUB_MODULES',\n  ROLE_MODULES = 'ROLE_MODULES',\n  ROLES = 'ROLES',\n  ORGANIZATIONS = 'ORGANIZATIONS',\n  DISABLEUSERFORTESTSUBMIT = 'DISABLEUSERFORTESTSUBMIT',\n\n  DEPARTMENT='DEPARTMENT',\n\n  //////////  TEST_SERIES   /////\n  TEST_SERIES = 'TEST_SERIES',\n  TEST_CATEGORIES = 'TEST_CATEGORIES',\n  TESTS = 'TESTS',\n  SUGGESTED_TESTS = 'SUGGESTED_TESTS',\n\n  //////////  QBANK   /////\n  QBANK = 'QBANK',\n  QBANK_SUBJECT = 'QBANK_SUBJECT',\n  QBANK_CHAPTERS = 'QBANK_CHAPTERS',\n  QBANK_TOPICS = 'QBANK_TOPICS',\n  SUGGESTED_TOPICS = 'SUGGESTED_TOPICS',\n\n  //////////  VIDEOS   /////\n  VIDEOS = 'VIDEOS',\n  VIDEO_SUBJECT = 'VIDEO_SUBJECT',\n  VIDEO_CHAPTERS = 'VIDEO_CHAPTERS',\n  SUGGESTED_VIDEOS = 'SUGGESTED_VIDEOS',\n\n  /////   PORTAlS   //////\n  PORTALS = 'PORTALS',\n  CAREERS = 'CAREERS',\n  USER_MESSAGES = 'USER_MESSAGES',\n  ABOUT_US = 'ABOUT_US',\n  NOTIFICATION = 'NOTIFICATION',\n  FEEDBACK = 'FEEDBACK',\n\n  ///// PERALS  /////////\n  PERALS = 'PERALS',\n  MASTER_ADVICE = 'MASTER_ADVICE',\n}\n","import { UserKeyInterface } from '@application/api-interfaces';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Document } from 'mongoose';\n\n@Schema()\nexport class AboutUs extends Document {\n\n  @Prop({ required: true })\n  @ApiProperty({ example: '0ba7596e-5087-4c72-887d-aaa730cdac23', description: 'Unique Identifier' })\n  uuid: string;\n\n  @Prop()\n  @ApiProperty({ example: '5fa90d866rttry3001021fd', description: 'Object ID' })\n  id: string;\n\n  @Prop({ required: false })\n  @ApiProperty({ example: 'About Us', description: 'About Us Page Title' })\n  title: string;\n\n  @Prop({ required: false })\n  @ApiProperty({ example: 'About Us Content', description: 'About Us Page Content' })\n  content: string;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  @ApiProperty({ example: '2020-11-09T19:53:53.032Z', description: 'Created On' })\n  createdOn?: Date;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  @ApiProperty({ example: '2020-11-12T19:53:53.032Z', description: 'Modified On' })\n  modifiedOn?: Date;\n\n  @Prop({ required: true, type: Object })\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user created it'\n  })\n  createdBy: UserKeyInterface;\n\n  @Prop({ type: Object })\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user modified it'\n  })\n  modifiedBy: UserKeyInterface;\n\n}\n\nexport const AboutUsSchema = SchemaFactory.createForClass(AboutUs);\nAboutUsSchema.set('validateBeforeSave', true);\n","import {\n  CourseInterface,\n  FlagsInterface,\n  KeyInterface,\n  UserKeyInterface,\n} from '@application/api-interfaces';\n// import { Subscription } from '@application/shared-api';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport * as mongoose from 'mongoose';\nimport { Course } from './course.schema';\nimport { Subscription } from './subscription.schema';\n// import { Subscription } from '@application/shared-api';\n\n\n@Schema()\nexport class Banner extends mongoose.Document {\n\n  @Prop({ required: true })\n  @ApiProperty({ example: '0ba7596e-5087-4c72-887d-aaa730cdac23', description: 'Unique Identifier' })\n  uuid: string;\n\n  @Prop()\n  @ApiProperty({ example: '5fa90d866rttry3001021fd', description: 'Object ID' })\n  id: string;\n\n  @Prop({ required: false })\n  @ApiProperty({ example: 'New Banner', description: 'Banner Title' })\n  title: string;\n\n  @Prop([{ type: mongoose.Schema.Types.ObjectId, ref: Course.name }])\n  @ApiProperty({ example: [Course], description: 'Assigned Courses' })\n  courses: any;\n\n  @Prop([{ type: mongoose.Schema.Types.ObjectId, ref: Subscription.name, required: false }])\n  @ApiProperty({ example: [Subscription], description: 'Assigned Subscriptions' })\n  subscriptions: any;\n\n  @Prop({ required: false })\n  @ApiProperty({ example: 'http://url', description: 'Banner Title' })\n  link: string;\n\n  @Prop({ required: false })\n  @ApiProperty({ example: 'http://url', description: 'Banner Youtube Link' })\n  youtubeLink: string;\n\n  @Prop({ required: false })\n  @ApiProperty({\n    example: 'http://img-url',\n    description: 'AWS S3/Cloudinary URL for the image'\n  })\n  imgUrl: string;\n\n  @Prop({ required: true ,dropDups: true})\n  @ApiProperty({ example: '1', description: 'Banner Order' })\n  order: number;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  @ApiProperty({ example: '2020-11-09T19:53:53.032Z', description: 'Created On' })\n  createdOn?: Date;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  @ApiProperty({ example: '2020-11-12T19:53:53.032Z', description: 'Modified On' })\n  modifiedOn?: Date;\n\n  @Prop({ required: true, type: Object })\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user created it'\n  })\n  createdBy: UserKeyInterface;\n\n  @Prop({ type: Object })\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user modified it'\n  })\n  modifiedBy: UserKeyInterface;\n\n  @Prop({ required: true, type: Object })\n  @ApiProperty({\n    example: { active: true, paid: true, },\n    description: 'flags to operate on the entity'\n  })\n  flags: FlagsInterface;\n}\n\nexport const BannerSchema = SchemaFactory.createForClass(Banner);\nBannerSchema.set('validateBeforeSave', true);\n","import {\n  CareersFlagsInterface,\n  DepartmentENum,\n  SkillsInterface,\n  UserKeyInterface,\n} from '@application/api-interfaces';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\n\n@Schema()\nexport class Career extends mongoose.Document {\n\n  @Prop({ required: true })\n  uuid: string;\n\n  @Prop()\n  id: string;\n\n  @Prop({ required: true })\n  title: string;\n\n  @Prop({ required: true })\n  designation: string;\n\n  @Prop({\n    required: true,\n    type: String,\n    enum: DepartmentENum,\n  })\n  department: string;\n\n  @Prop({ required: true })\n  code: string;\n\n  @Prop({ required: true })\n  description: string;\n\n  @Prop({ required: true })\n  readonly qualifications: string[];\n\n  @Prop({ required: true })\n  readonly requirements: string[];\n\n  @Prop({ required: true, type: Object })\n  readonly skills: SkillsInterface;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  createdOn?: Date;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  modifiedOn?: Date;\n\n  @Prop({ required: true, type: Object })\n  createdBy: UserKeyInterface;\n\n  @Prop({ type: Object })\n  modifiedBy: UserKeyInterface;\n\n  @Prop({ required: true, type: Object })\n  flags: CareersFlagsInterface;\n\n}\n\nexport const CareersSchema = SchemaFactory.createForClass(Career);\nCareersSchema.set('validateBeforeSave', true);\n","import {\n  AvailedByInterface,\n  CouponFlagsInterface,\n  UserKeyInterface,\n} from '@application/api-interfaces';\nimport * as mongoose from 'mongoose';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { User } from './user.schema';\nimport { Faculty } from './faculty.schema';\nimport { Subscription } from './subscription.schema';\n\n@Schema()\nexport class Coupon extends Document {\n  @Prop({ required: true })\n  uuid: string;\n\n  @Prop({ required: true })\n  code: string;\n\n  @Prop({ required: true })\n  discountType: string;\n\n  @Prop({ required: true })\n  discount: number;\n\n  @Prop({ required: true })\n  totalCoupons: number; \n  \n  @Prop({ required: true })\n  availableCoupons: number;\n\n  @Prop({\n    required: true,\n    // type: String,\n  })\n  valiedFrom?: Date;\n\n  @Prop({\n    required: true,\n    // type: String,\n  })\n  valiedTo?: Date;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Subscription.name })\n  subscription: string;\n\n  @Prop({ required: false })\n  couponType: string;\n\n  @Prop([{ type: mongoose.Schema.Types.ObjectId, ref: User.name }])\n  users: string[];\n  \n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Faculty.name })\n  agent: string;\n\n  @Prop({ required: false })\n  agentCommission: number;\n\n  @Prop({ required: false })\n  agentAmount: number;\n\n  @Prop({ required: false })\n  agentTotalAmount: number;\n\n  @Prop({ required: false })\n  agentDueAmount: number;\n\n  @Prop({ required: false })\n  appliedUsersCount:number\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  createdOn?: Date;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  modifiedOn?: Date;\n\n  @Prop({ required: true, type: Object })\n  createdBy: UserKeyInterface;\n\n  @Prop({ type: Object })\n  modifiedBy: UserKeyInterface;\n\n  @Prop({ required: true, type: Object })\n  flags: CouponFlagsInterface;\n}\n\nexport const CouponSchema = SchemaFactory.createForClass(Coupon);\nCouponSchema.set('validateBeforeSave', true);\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport * as mongoose from 'mongoose';\n\n@Schema()\nexport class UserMessage extends mongoose.Document {\n\n  @Prop({ required: true })\n  @ApiProperty({ example: '0ba7596e-5087-4c72-887d-aaa730cdac23', description: 'Unique Identifier' })\n  uuid: string;\n\n  @Prop()\n  @ApiProperty({ example: '5fa90d866rttry3001021fd', description: 'Object ID' })\n  id: string;\n\n  @Prop({ required: true })\n  @ApiProperty({ example: 'Plato Architect', description: 'User name' })\n  name: string;\n\n  @Prop({ required: true })\n  @ApiProperty({ example: 9999999990, description: 'User Mobile' })\n  mobile: number;\n\n  @Prop({ required: true })\n  @ApiProperty({ example: 'user@platononline.com', description: 'User Email' })\n  email: string;\n\n  @Prop({ required: true })\n  @ApiProperty({ example: 'Say Hi', description: 'User Message' })\n  message: string;\n\n}\n\nexport const UserMessageSchema = SchemaFactory.createForClass(UserMessage);\nUserMessageSchema.set('validateBeforeSave', true);\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport * as mongoose from 'mongoose';\n\nimport { QBankFlagsInterface, QBankSubjectInterface, TestFlagsInterface, TestQuestionInterface, UserKeyInterface } from '@application/api-interfaces';\nimport { Course } from './course.schema';\nimport { Syllabus } from './syllabus.schema';\n\n@Schema()\nexport class QBank extends Document {\n\n  @Prop({ required: true })\n  uuid: string;\n\n  @Prop()\n  id: string;\n\n  @Prop({ required: true })\n  title: string;\n\n  @Prop({ required: true })\n  description: string;\n\n  @Prop({ required: true })\n  imgUrl: string;\n\n  @Prop({ required: false })\n  iconUrl: string;\n\n  @Prop({ type: Object, required: true })\n  readonly subject: QBankSubjectInterface;\n\n  @Prop({ type: Object, required: true })\n  chapter: { title: string; uuid: string; };\n\n  @Prop({ required: true })\n  order: number;\n\n  @Prop({ required: true })\n  scheduledDate: Date;\n\n  @Prop({ required: true })\n  pdf: string;\n\n  @Prop({ required: true })\n  count: number;\n\n  @Prop({ required: true })\n  questions: TestQuestionInterface[];\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  createdOn?: Date;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  modifiedOn?: Date;\n\n  @Prop({ required: true, type: Object })\n  createdBy: UserKeyInterface;\n\n  @Prop({ type: Object })\n  modifiedBy: UserKeyInterface;\n\n  @Prop({ required: true, type: Object })\n  flags: QBankFlagsInterface;\n\n}\n\nexport const QBankSchema = SchemaFactory.createForClass(QBank);\nQBankSchema.set('validateBeforeSave', true);\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nimport {\n  QuestionFlagsInterface,\n  QuestionOptionsInterface,\n} from '@application/api-interfaces';\n\n@Schema()\nexport class QBankQuestion extends Document {\n\n  @Prop({ required: true })\n  uuid: string;\n\n  @Prop()\n  id: string;\n\n  @Prop({ required: true })\n  title: string;\n\n  @Prop()\n  options?: QuestionOptionsInterface[];\n\n  @Prop({\n    required: false,\n  })\n  imgUrl?: string;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  createdOn?: String;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  modifiedOn?: String;\n\n  @Prop({ required: true })\n  order?: Number;\n\n  @Prop({ required: true })\n  positive?: Number;\n\n  @Prop({ required: true })\n  negative?: Number;\n\n  @Prop({ required: true, type: Object })\n  flags: QuestionFlagsInterface;\n\n}\n\nexport const QBankQuestionSchema = SchemaFactory.createForClass(QBankQuestion);\nQBankQuestionSchema.set('validateBeforeSave', true);\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nimport { EntityInterface, UserKeyInterface } from '@application/api-interfaces';\n\n@Schema()\nexport class ReportError extends Document {\n\n  @Prop({ required: true })\n  uuid: string;\n\n  @Prop({ required: true, type: Object })\n  user: UserKeyInterface;\n\n  @Prop({ required: true, type: Object })\n  question: EntityInterface;\n\n  @Prop({ required: true, type: Object })\n  course: EntityInterface;\n\n  @Prop({ required: true, type: Object })\n  test: EntityInterface;\n\n  @Prop({ required: true, type: Object })\n  subject: EntityInterface;\n\n  @Prop({ required: true, type: Array })\n  report: string[];\n\n  @Prop({ required: true })\n  submittedOn: Date;\n\n}\n\nexport const ReportErrorSchema = SchemaFactory.createForClass(ReportError);\nReportErrorSchema.set('validateBeforeSave', true);\n","import {\n  CourseInterface,\n  FlagsInterface,\n  KeyInterface,\n  UserKeyInterface,\n} from '@application/api-interfaces';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport * as mongoose from 'mongoose';\nimport { Course } from './course.schema';\n\n@Schema()\nexport class Sample extends mongoose.Document {\n\n  @Prop({ required: true })\n  @ApiProperty({ example: '0ba7596e-5087-4c72-887d-aaa730cdac23', description: 'Unique Identifier' })\n  uuid: string;\n\n  @Prop()\n  @ApiProperty({ example: '5fa90d866rttry3001021fd', description: 'Object ID' })\n  id: string;\n\n  @Prop({ required: true })\n  @ApiProperty({ example: 'New Banner', description: 'Banner Title' })\n  title: string;\n}\n\nexport const SampleSchema = SchemaFactory.createForClass(Sample);\nSampleSchema.set('validateBeforeSave', true);\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport * as mongoose from 'mongoose';\nimport type { EntityInterface, QBankTopicAnswerInterface, UserKeyInterface, UserQBankTopicStatsInterface } from '@application/api-interfaces';\nimport { Course } from './course.schema';\nimport { QBankSubject } from './qbank-subject.schema';\nimport { User } from './user.schema';\n\n@Schema()\nexport class SubmittedQBankTopic extends Document {\n\n  @Prop({ required: true })\n  uuid: string;\n\n  @Prop({ required: false })\n  count: number;\n\n  @Prop({ required: false })\n  rank: number;\n\n  @Prop({ required: false })\n  totalUsers: number;\n\n  @Prop({ required: false })\n  lastAttemptedQuestion: number;\n\n  @Prop({ required: true, type: mongoose.Schema.Types.ObjectId, ref: User.name })\n  userId: string;\n\n  @Prop({ required: true, type: mongoose.Schema.Types.ObjectId, ref: QBankSubject.name })\n  subjectId: string;\n\n  @Prop({ required: true,type: mongoose.Schema.Types.ObjectId, ref: Course.name })\n  courseId: string;\n\n  @Prop({ required: true, type: Object })\n  qbankTopicUuid: string;\n\n  @Prop({ required: true, type: Array })\n  answers: QBankTopicAnswerInterface[];\n\n  @Prop({ required: false, type: Object })\n  stats: UserQBankTopicStatsInterface;\n\n  @Prop({ required: true })\n  submittedOn: Date;\n\n  @Prop({ required: true })\n  status: number;\n}\n\nexport const SubmittedQBankTopicSchema = SchemaFactory.createForClass(SubmittedQBankTopic);\nSubmittedQBankTopicSchema.set('validateBeforeSave', true);\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nimport { EntityInterface, TestAnswerInterface, UserKeyInterface, UserTestStatsInterface } from '@application/api-interfaces';\n\n@Schema()\nexport class SubmittedTest extends Document {\n\n  @Prop({ required: true })\n  uuid: string;\n\n  @Prop({ required: false })\n  count: number;\n\n  @Prop({ required: false })\n  rank: number;\n\n  @Prop({ required: false })\n  totalUsers: number;\n\n  @Prop({ required: true, type: Object })\n  user: UserKeyInterface;\n\n  @Prop({ required: true, type: Object })\n  category: EntityInterface;\n\n  @Prop({ required: true, type: Object })\n  course: EntityInterface;\n\n  @Prop({ required: true, type: Object })\n  test: EntityInterface;\n\n  @Prop({ required: true, type: Array })\n  answers: TestAnswerInterface[];\n\n  @Prop({ required: false, type: Object })\n  stats: UserTestStatsInterface;\n\n  @Prop({ required: true })\n  submittedOn: Date;\n\n}\n\nexport const SubmittedTestSchema = SchemaFactory.createForClass(SubmittedTest);\nSubmittedTestSchema.set('validateBeforeSave', true);\n","import {\n    FlagsInterface,\n    UserKeyInterface,\n  } from '@application/api-interfaces';\n  // import { Subscription } from '@application/shared-api';\n  import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n  import { ApiProperty } from '@nestjs/swagger';\n  import * as mongoose from 'mongoose';\n\n  @Schema()\nexport class Tags extends mongoose.Document {\n\n  @Prop({ required: true })\n  @ApiProperty({ example: '0ba7596e-5087-4c72-887d-aaa730cdac23', description: 'Unique Identifier' })\n  uuid: string;\n\n  @Prop()\n  @ApiProperty({ example: '5fa90d866rttry3001021fd', description: 'Object ID' })\n  id: string;\n\n  @Prop({ required: false })\n  @ApiProperty({ example: 'New Tag', description: 'Tag Title' })\n  title: string;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  @ApiProperty({ example: '2020-11-09T19:53:53.032Z', description: 'Created On' })\n  createdOn?: Date;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  @ApiProperty({ example: '2020-11-12T19:53:53.032Z', description: 'Modified On' })\n  modifiedOn?: Date;\n\n  @Prop({ required: true, type: Object })\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user created it'\n  })\n  createdBy: UserKeyInterface;\n\n  @Prop({ type: Object })\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user modified it'\n  })\n  modifiedBy: UserKeyInterface;\n\n  @Prop({ required: true, type: Object })\n  @ApiProperty({\n    example: { active: true, paid: true, },\n    description: 'flags to operate on the entity'\n  })\n  flags: FlagsInterface;\n\n}\n\nexport const TagsSchema = SchemaFactory.createForClass(Tags);\nTagsSchema.set('validateBeforeSave', true);","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nimport {\n  QuestionFlagsInterface,\n  QuestionOptionsInterface,\n} from '@application/api-interfaces';\n\n@Schema()\nexport class TestQuestion extends Document {\n\n  @Prop({ required: true })\n  uuid: string;\n\n  @Prop()\n  id: string;\n\n  @Prop({ required: true })\n  title: string;\n\n  @Prop()\n  options?: QuestionOptionsInterface[];\n\n  @Prop({\n    required: false,\n  })\n  imgUrl?: string;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  createdOn?: String;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  modifiedOn?: String;\n\n  @Prop({ required: true })\n  order?: Number;\n\n  @Prop({ required: true })\n  positive?: Number;\n\n  @Prop({ required: true })\n  negative?: Number;\n\n  @Prop({ required: true, type: Object })\n  flags: QuestionFlagsInterface;\n\n}\n\nexport const TestQuestionSchema = SchemaFactory.createForClass(TestQuestion);\nTestQuestionSchema.set('validateBeforeSave', true);\n","import type{\n  BankInterface,\n  FacultyInterface,\n  FlagsInterface,\n  UserKeyInterface,\n  VideoCheckpointsInterface,\n  VideoFlagsInterface,\n  VideoSubjectInterface,\n} from '@application/api-interfaces';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Course } from './course.schema';\nimport { Faculty } from './faculty.schema';\nimport { Syllabus } from './syllabus.schema';\n\n@Schema()\nexport class Video extends mongoose.Document {\n\n  @Prop({ required: true })\n  uuid: string;\n\n  @Prop()\n  id: string;\n\n  @Prop({ required: true })\n  title: string;\n\n  @Prop({ required: true })\n  totalTime: string;\n\n  @Prop({ required: false })\n  videoId: string;\n\n  @Prop({ required: false })\n  youtubeUrl: string;\n\n  @Prop({ type: Object, required: true })\n  readonly subject: VideoSubjectInterface;\n\n  @Prop({ type: Object, required: true })\n  chapter: { title: string };\n\n  // @Prop({ required: true, type: Object})\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Faculty.name })\n  faculty: string;\n\n  @Prop()\n  topics: VideoCheckpointsInterface[];\n\n  @Prop()\n  slides: string[];\n\n  @Prop()\n  notes: string;\n\n  @Prop()\n  suggestedBanner: string;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  publishOn?: Date;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  createdOn?: Date;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  modifiedOn?: Date;\n\n  @Prop({ required: true, type: Object })\n  createdBy: UserKeyInterface;\n\n  @Prop({ type: Object })\n  modifiedBy: UserKeyInterface;\n\n  @Prop({ required: true, type: Object })\n  flags: VideoFlagsInterface;\n}\n\nexport const VideoSchema = SchemaFactory.createForClass(Video);\nVideoSchema.set('validateBeforeSave', true);\n","import { SyllabusInterface, UserKeyInterface } from '@application/api-interfaces';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Question } from './questions.schema';\nimport * as mongoose from 'mongoose';\n\nimport {\n    \n    FlagsInterface,\n    PearlsQueIdsInterface,\n  } from '@application/api-interfaces';\n  import { ApiProperty } from '@nestjs/swagger';\n\n  @Schema()\nexport class Pearls extends mongoose.Document {\n\n  @Prop({ required: true })\n  uuid: string;\n\n  @Prop()\n  id: string;\n\n  @Prop({ required: true })\n  title: string;\n\n  @Prop({ required: false })\n  number : number;\n\n  @Prop({ required: true })\n  explaination: string;\n  \n  @Prop([{required: false,type: mongoose.Schema.Types.ObjectId, ref: Question.name }])\n  queIds: PearlsQueIdsInterface[];\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  createdOn?: Date;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  modifiedOn?: Date;\n\n  @Prop({ required: true, type: Object })\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Srinivas' },\n    description: 'UUID & Name of the user created it'\n  })\n  createdBy: UserKeyInterface;\n\n  @Prop({ type: Object })\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Srinivas' },\n    description: 'UUID & Name of the user modified it'\n  })\n  modifiedBy: UserKeyInterface;\n\n  @Prop({ required: true, type: Object })\n  flags: FlagsInterface;\n    response: any;\n\n\n}\n\nexport const PearlsSchema = SchemaFactory.createForClass(Pearls);\nPearlsSchema.set('validateBeforeSave', true);","import {\n    FlagsInterface,\n    ModeOfPaymentEnum,\n    PaymentStatusEnum,\n    UserKeyInterface,\n  } from '@application/api-interfaces';\nimport { User,Subscription, Coupon } from '@application/shared-api';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport * as mongoose from 'mongoose';\n\n  @Schema()\nexport class UserTransactions extends mongoose.Document {\n\n  @Prop({ required: true })\n  @ApiProperty({ example: '0ba7596e-5087-4c72-887d-aaa730cdac23', description: 'Unique Identifier' })\n  uuid: string;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, required: true })\n  @ApiProperty({ example: '5fa90d866rttry3001021fd', description: 'Object ID' })\n  userId: string;\n\n   @Prop({ type: String ,required: false })\n   @ApiProperty({ example: '5fa90d866rttry3001021fd', description: 'Transaction ID' })\n   transactionId: string;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, required: true })\n  @ApiProperty({ example: '5fa90d866rttry3001021fd', description: 'Subscription ID' })\n  subscriptionId: string;\n\n  @Prop({required: true,type: Date})\n  @ApiProperty({ example: '2020-11-09T19:53:53.032Z', description: 'Date Of Payment' })\n  dateOfPayment?: Date;\n\n  @Prop({required: true,type: Date})\n  @ApiProperty({ example: '2020-11-09T19:53:53.032Z', description: 'Expiry Date' })\n  expiryDate?: Date;\n \n  @Prop({required: true,type: Number})\n  @ApiProperty({ example: '5000', description: 'Actual Price' })\n  actualPrice?: Number;\n\n  @Prop({required: false,type: Number})\n  @ApiProperty({ example: '1000', description: 'Discount Price' })\n  discountPrice?: Number;\n\n  @Prop({required: true,type: Number})\n  @ApiProperty({ example: '4000', description: 'Final Paid Amount' })\n  finalPaidAmount?: Number;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId,required: false })\n  @ApiProperty({ example: '5fa90d866rttry3001021fd', description: 'Coupon ID' })\n\n  couponId: String;\n\n\n\n  @Prop({\n    required: true,\n    type: String,\n    enum: ['ONLINE', 'OFFLINE'],\n  })\n  @ApiProperty({ example: 'ONLINE', description: 'ONLINE or OFFLINE' })\n  paymentType: string;\n\n  @Prop({required: true,type: String,})\n  @ApiProperty({ example: 'RAZORPAY', description: 'RAZORPAY/CASH/CHEQUE/POS-MACHINE/UPI' })\n  modeOfPayment: ModeOfPaymentEnum;\n\n  @Prop({required: false,type: String})\n  @ApiProperty({ example: 'image.png', description: 'File Path' })\n  filePath: string;\n\n  @Prop({required: true,type: String})\n  @ApiProperty({ example: 'ORDERCREATED', description: 'ORDERCREATED/PENDING/SUCCESS/FAILED' })\n  paymentStatus: PaymentStatusEnum;\n\n  @Prop({required: false,type: String})\n  @ApiProperty({ example: '5fa90d866rttry3001021fd', description: 'Razor pay order id' })\n  razorpayOrderId: string;\n\n  @Prop({required: false,type: String})\n  @ApiProperty({ example: '5fa90d866rttry3001021fd', description: 'Razoray payment Id' })\n  razorPayPaymentId: string;\n\n  @Prop({required: false,type: String})\n  @ApiProperty({ example: '5fa90d866rttry3001021fd', description: 'Razoray Signature' })\n  razoraySignature: string;\n\n  @Prop({required: false,type: String})\n  @ApiProperty({ example: 'payment successfull', description: 'payment successfull' })\n  paymentMessage: string;\n\n  @Prop({required: false,type: String})\n  @ApiProperty({ example: '123456', description: 'BILL NO' })\n  billNumber: string;\n \n  @Prop({required: false,type: String})\n  @ApiProperty({ example: 'AB1234CD56', description: 'CHEQUE NO' })\n  chequeNumber: string;\n\n  @Prop({required: false,type: Date})\n  @ApiProperty({ example: 'AB1234CD56', description: 'CHEQUE NO' })\n  chequeDate: Date;\n\n  @Prop({required: false,type: String})\n  @ApiProperty({ example: 'AXIS BANK', description: 'BANK NAME' })\n  bankName: String;\n\n  @Prop({required: false,type: String})\n  @ApiProperty({ example: 'TX12586', description: 'Reference Nummber' })\n  referenceNumber: String;\n\n  @Prop({required: false,type: String})\n  @ApiProperty({ example: 'Visa', description: 'Card type' })\n  cardType: String;\n\n  @Prop({required: false,type: String})\n  @ApiProperty({ example: 'debit', description: 'creditORdebit Card' })\n  creditORdebitCard: String;\n\n  @Prop({required: false,type: String})\n  @ApiProperty({ example: 'YU4552TR', description: 'UPI ID' })\n  upiId: String;\n\n  @Prop({required: false,type: String})\n  @ApiProperty({ example: 'YU4552TR123', description: 'Mode TransactionNumber ID' })\n  mode_transactionNumber: String;\n\n\n  @Prop({\n    required: false,\n    type: Date,\n  })\n  @ApiProperty({ example: '2020-11-09T19:53:53.032Z', description: 'Created On' })\n  createdOn?: Date;\n  \n  @Prop({required: false,type: Date})\n  @ApiProperty({ example: '2020-11-12T19:53:53.032Z', description: 'Modified On' })\n  modifiedOn?: Date;\n\n  @Prop({ required: true, type: Object })\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user created it'\n  })\n  createdBy: UserKeyInterface;\n\n  @Prop({ type: Object })\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user modified it'\n  })\n  modifiedBy: UserKeyInterface;\n\n \n\n  \n\n}\n\nexport const UserTransactionsSchema = SchemaFactory.createForClass(UserTransactions);\nUserTransactionsSchema.set('validateBeforeSave', true);","import {\n    FlagsInterface,\n    UserKeyInterface,\n  } from '@application/api-interfaces';\n  // import { Subscription } from '@application/shared-api';\n  import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n  import { ApiProperty } from '@nestjs/swagger';\n  import * as mongoose from 'mongoose';\n\nimport { RoleSubModules } from './role-submodules.schema';\n\n\n@Schema()\nexport class RoleModules extends mongoose.Document {\n\n@Prop({ required: true })\n  @ApiProperty({ example: '0ba7596e-5087-4c72-887d-aaa730cdac23', description: 'Unique Identifier' })\n  uuid: string;\n\n  @Prop()\n  @ApiProperty({ example: '5fa90d866rttry3001021fd', description: 'Object ID' })\n  id: string;\n\n  @Prop({ required: true })\n  @ApiProperty({ example: 'New title', description: 'Title' })\n  title: string;\n\n  @Prop([{ type: mongoose.Schema.Types.ObjectId, ref: RoleSubModules.name }])\n  @ApiProperty({ example: 'Sub Modules', description: 'Title' })\n  subModules: string[];\n\n  @Prop({\n    required: true,\n   // type: String,\n  })\n  @ApiProperty({ example: '2020-11-09T19:53:53.032Z', description: 'Created On' })\n  createdOn?: Date;\n\n  @Prop({\n    required: false,\n    type: Date,\n  })\n  @ApiProperty({ example: '2020-11-12T19:53:53.032Z', description: 'Modified On' })\n  modifiedOn?: Date;\n\n  @Prop({ required: true, type: Object })\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user created it'\n  })\n  createdBy: UserKeyInterface;\n\n  @Prop({ type: Object })\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user modified it'\n  })\n  modifiedBy: UserKeyInterface;\n\n  @Prop({ required: true, type: Object })\n  @ApiProperty({\n    example: { active: true, paid: true, },\n    description: 'flags to operate on the entity'\n  })\n  flags: FlagsInterface;\n}\n\nexport const RoleModuleSchema = SchemaFactory.createForClass(RoleModules);\nRoleModuleSchema.set('validateBeforeSave', true);","import {\n    BankInterface,\n    FlagsInterface,\n    ModeOfPaymentEnum,\n    PaymentStatusEnum,\n    UserKeyInterface,\n  } from '@application/api-interfaces';\nimport { User,Subscription, Coupon } from '@application/shared-api';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport * as mongoose from 'mongoose';\n\n  @Schema()\nexport class AgentTransactions extends mongoose.Document {\n  @Prop({ required: true })\n  @ApiProperty({ example: '0ba7596e-5087-4c72-887d-aaa730cdac23', description: 'Unique Identifier' })\n  uuid: string;\n\n   @Prop({ type: String ,required: false })\n   @ApiProperty({ example: '5fa90d866rttry3001021fd', description: 'Transaction ID' })\n   transactionId: string;\n\n  @Prop({required: true,type: Date})\n  @ApiProperty({ example: '2020-11-09T19:53:53.032Z', description: 'Date Of Payment' })\n  dateOfPayment?: Date;\n\n  @Prop({required: true})\n  @ApiProperty({ example: '4000', description: 'Final Paid Amount' })\n  paidAmount?: number;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId,required: true })\n  @ApiProperty({ example: '5fa90d866rttry3001021fd', description: 'Coupon ID' })\n  couponId: String;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId,required: true })\n  @ApiProperty({ example: '5fa90d866rttry3001021fd', description: 'Coupon ID' })\n  agent: String;\n\n  @Prop({required: true,type: String,})\n  @ApiProperty({ example: 'RAZORPAY', description: 'RAZORPAY/CASH/CHEQUE/POS-MACHINE/UPI' })\n  modeOfPayment: ModeOfPaymentEnum;\n\n  @Prop({required: false,type: String})\n  @ApiProperty({ example: 'image.png', description: 'File Path' })\n  filePath: string;\n\n  @Prop({required: true,type: String})\n  @ApiProperty({ example: 'ORDERCREATED', description: 'ORDERCREATED/PENDING/SUCCESS/FAILED' })\n  paymentStatus: PaymentStatusEnum;\n\n//   @Prop({required: false,type: String})\n//   @ApiProperty({ example: 'payment successfull', description: 'payment successfull' })\n//   paymentMessage: string;\n\n  @Prop({required: false,type: String})\n  @ApiProperty({ example: '123456', description: 'BILL NO' })\n  billNumber: string;\n \n  @Prop({required: false,type: String})\n  @ApiProperty({ example: 'AB1234CD56', description: 'CHEQUE NO' })\n  chequeNumber: string;\n\n  @Prop({required: false,type: Date})\n  @ApiProperty({ example: 'AB1234CD56', description: 'CHEQUE NO' })\n  chequeDate: Date;\n\n  @Prop({ required: true, type: Object })\n  bank: BankInterface;\n\n  @Prop({required: false,type: String})\n  @ApiProperty({ example: 'TX12586', description: 'Reference Nummber' })\n  referenceNumber: String;\n\n  @Prop({required: false,type: String})\n  @ApiProperty({ example: 'YU4552TR', description: 'UPI ID' })\n  upiId: String;\n\n  @Prop({required: false,type: String})\n  @ApiProperty({ example: 'YU4552TR123', description: 'Mode TransactionNumber ID' })\n  mode_transactionNumber: String;\n\n\n  @Prop({required: false,type: Date})\n  @ApiProperty({ example: '2020-11-12T19:53:53.032Z', description: 'Modified On' })\n  modifiedOn?: Date;\n\n  @Prop({ required: true, type: Object })\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user created it'\n  })\n  createdBy: UserKeyInterface;\n\n  @Prop({ type: Object })\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user modified it'\n  })\n  modifiedBy: UserKeyInterface;\n\n}\n\nexport const AgentTransactionsSchema = SchemaFactory.createForClass(AgentTransactions);\nAgentTransactionsSchema.set('validateBeforeSave', true);","import { SyllabusInterface, UserKeyInterface } from '@application/api-interfaces';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Question } from './questions.schema';\nimport * as mongoose from 'mongoose';\nimport { Syllabus } from './syllabus.schema';\nimport { Pearls } from './pearls.schema'\n\nimport {\n    \n    FlagsInterface,\n   \n    \n    PeralInputSubjectInterface,\n\n  } from '@application/api-interfaces';\n  import { ApiProperty } from '@nestjs/swagger';\n\n  @Schema()\nexport class PearlSubjects extends mongoose.Document {\n\n    @Prop()\n    id: string;\n\n    @Prop({ required: true })\n    uuid: string;\n\n    @Prop({ required: true })\n    qUuid: string;\n\n    @Prop({required: true,type: mongoose.Schema.Types.ObjectId, ref: Syllabus.name })\n    subjectId: string;\n\n    @Prop([{\n      chapterId: {required: true,type: mongoose.Schema.Types.ObjectId, ref: Syllabus.name },\n     // pearlIds: [{required: true,type: mongoose.Schema.Types.ObjectId, ref: Pearls.name }],\n      pearlIds: [],\n\n    }])\n   \n    chapter: PeralInputSubjectInterface[];\n\n    @Prop({required: false,type: Date})\n    createdOn?: Date;\n\n    @Prop({required: false,type: Date})\n    modifiedOn?: Date;\n\n    @Prop({ required: false, type: Object })\n    createdBy: UserKeyInterface;\n\n    @Prop({required: false, type: Object })\n    modifiedBy: UserKeyInterface;\n}\n\nexport const PearlSubjectsSchema = SchemaFactory.createForClass(PearlSubjects);\nPearlSubjectsSchema.set('validateBeforeSave', true);","import { FlagsInterface, UserKeyInterface } from '@application/api-interfaces';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport * as mongoose from 'mongoose';\nimport { Course } from './course.schema';\nimport { Syllabus } from './syllabus.schema';\nimport { Video } from './video.schema';\n\n\n@Schema()\nexport class SuggestedVideos extends mongoose.Document {\n\n    @Prop()\n    id: string;\n\n    // @Prop({ required: true })\n    // uuid: string;\n\n    @Prop({required: true,type: mongoose.Schema.Types.ObjectId, ref: Course.name })\n    courseId: string;\n\n    @Prop({required: true,type: mongoose.Schema.Types.ObjectId, ref: Syllabus.name })\n    subjectId: string;\n\n    @Prop({required: true,type: mongoose.Schema.Types.ObjectId, ref: Syllabus.name })\n    chapterId: string;\n\n    @Prop({required: true })\n    videoUuid: string;\n\n    @Prop({required: true })\n    status: boolean;\n\n    @Prop({required: false,type: Date})\n    createdOn?: Date;\n\n    @Prop({required: false,type: Date})\n    modifiedOn?: Date;\n\n    @Prop({ required: false, type: Object })\n    createdBy: UserKeyInterface;\n\n    @Prop({required: false, type: Object })\n    modifiedBy: UserKeyInterface;\n\n\n}\n\nexport const SuggestedVideosSchema = SchemaFactory.createForClass(SuggestedVideos);\nSuggestedVideosSchema.set('validateBeforeSave', true);","import { FlagsInterface, UserKeyInterface } from '@application/api-interfaces';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport * as mongoose from 'mongoose';\nimport { Course } from './course.schema';\nimport { Syllabus } from './syllabus.schema';\nimport { TSCategories } from './ts-categories.schema';\n\n\n@Schema()\nexport class SuggestedTests extends mongoose.Document {\n\n    @Prop()\n    id: string;\n\n    //@Prop({ required: true })\n    //uuid: string;\n\n    @Prop({required: true,type: mongoose.Schema.Types.ObjectId, ref: Course.name })\n    courseId: string;\n\n    @Prop({required: true,type: mongoose.Schema.Types.ObjectId, ref: TSCategories.name })\n    categoryId: string;\n\n    @Prop({required: true })\n    testUuid: string;\n\n    @Prop({required: true })\n    status: boolean;\n\n    @Prop({required: false,type: Date})\n    createdOn?: Date;\n\n    @Prop({required: false,type: Date})\n    modifiedOn?: Date;\n\n    @Prop({ required: false, type: Object })\n    createdBy: UserKeyInterface;\n\n    @Prop({required: false, type: Object })\n    modifiedBy: UserKeyInterface;\n\n}\n\nexport const SuggestedTestsSchema = SchemaFactory.createForClass(SuggestedTests);\nSuggestedTestsSchema.set('validateBeforeSave', true);\n\n","import { FlagsInterface, UserKeyInterface } from '@application/api-interfaces';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport * as mongoose from 'mongoose';\nimport { Course } from './course.schema';\nimport { Syllabus } from './syllabus.schema';\nimport { TSCategories } from './ts-categories.schema';\n\n\n@Schema()\nexport class SuggestedQbank extends mongoose.Document {\n\n    @Prop()\n    id: string;\n\n    @Prop({required: true,type: mongoose.Schema.Types.ObjectId, ref: Course.name })\n    courseId: string;\n\n    @Prop({required: true,type: mongoose.Schema.Types.ObjectId, ref: Syllabus.name })\n    subjectId: string;\n\n    @Prop({required: true,type: mongoose.Schema.Types.ObjectId, ref: Syllabus.name })\n    chapterId: string;\n\n    @Prop({required: true })\n    qbankUuid: string;\n\n    @Prop({required: true })\n    status: boolean;\n\n    @Prop({required: false,type: Date})\n    createdOn?: Date;\n\n    @Prop({required: false,type: Date})\n    modifiedOn?: Date;\n\n    @Prop({ required: false, type: Object })\n    createdBy: UserKeyInterface;\n\n    @Prop({required: false, type: Object })\n    modifiedBy: UserKeyInterface;\n\n}\n\nexport const SuggestedQbankSchema = SchemaFactory.createForClass(SuggestedQbank);\nSuggestedQbankSchema.set('validateBeforeSave', true);\n\n","import { FlagsInterface, UserKeyInterface } from '@application/api-interfaces';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport * as mongoose from 'mongoose';\nimport { Course } from './course.schema';\nimport { Syllabus } from './syllabus.schema';\nimport { Question } from './questions.schema';\n\n\n@Schema()\nexport class MCQOfTheDay extends mongoose.Document {\n\n    @Prop()\n    id: string;\n\n    @Prop({required: true,type: mongoose.Schema.Types.ObjectId, ref: Course.name })\n    courseId: string;\n\n    @Prop({required: true,type: mongoose.Schema.Types.ObjectId, ref: Syllabus.name })\n    subjectId: string;\n\n    @Prop({required: true,type: mongoose.Schema.Types.ObjectId, ref: Question.name })\n    questionId: string;\n\n    @Prop({required: true })\n    status: boolean;\n\n    @Prop({required: false,type: Date})\n    createdOn?: Date;\n\n    @Prop({required: false,type: Date})\n    modifiedOn?: Date;\n\n    @Prop({ required: false, type: Object })\n    createdBy: UserKeyInterface;\n\n    @Prop({required: false, type: Object })\n    modifiedBy: UserKeyInterface;\n\n}\n\nexport const MCQOfTheDaySchema = SchemaFactory.createForClass(MCQOfTheDay);\nMCQOfTheDaySchema.set('validateBeforeSave', true);\n\n","import { Subscription, User } from '@application/shared-api';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport * as mongoose from 'mongoose';\nimport { Course } from './course.schema';\n\n@Schema()\nexport class Notifications extends mongoose.Document {\n\n  @Prop({ required: true })\n  @ApiProperty({ example: '0ba7596e-5087-4c72-887d-aaa730cdac23', description: 'Unique Identifier' })\n  uuid: string;\n\n  @Prop([{ type: mongoose.Schema.Types.ObjectId }])\n  users?: string[];\n\n  @Prop([{ type: mongoose.Schema.Types.ObjectId }])\n  subscriptions?: string[];\n\n  // @Prop({required: false, type: mongoose.Schema.Types.ObjectId })\n  // courses?: string;\n  @Prop([{required: false,type: mongoose.Schema.Types.ObjectId, ref: Course.name }])\n  courses: string[];\n\n  @Prop({ required: true })\n  @ApiProperty({ example: 'Plato', description: 'Title' })\n  title: string;\n\n  @Prop({ required: true })\n  @ApiProperty({ example: 'Message', description: 'User Message' })\n  message: string;\n\n  @Prop({ required: false })\n  @ApiProperty({ example: 'image Path', description: 'image Path' })\n  icon: string;\n\n  @Prop({ required: false })\n  @ApiProperty({ example: 'branchUrl', description: 'branchUrl' })\n  branchUrl: string;\n\n  @Prop({ required: true })\n  @ApiProperty({ example: 'user@platononline.com', description: 'User Email' })\n  notificationType: string;\n  @Prop({\n    required: false,\n    type: Date,\n  })\n  @ApiProperty({ example: '2020-11-09T19:53:53.032Z', description: 'Created On' })\n  scheduleDate?: Date;\n\n  @Prop({\n    required: true,\n    type: Number,\n  })\n  @ApiProperty({ example: '2020-11-09T19:53:53.032Z', description: 'Created On' })\n  sendStatus : Number;\n\n  @Prop({ required: false })\n  @ApiProperty({ example: 'Campaign', description: 'Campaign' })\n  campaign: string;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  @ApiProperty({ example: '2020-11-09T19:53:53.032Z', description: 'Created On' })\n  createdOn?: any;\n\n  @Prop({ required: false, type: Object })\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user created it'\n  })\n  createdBy: any;\n\n}\n\nexport const NotificationsSchema = SchemaFactory.createForClass(Notifications);\nNotificationsSchema.set('validateBeforeSave', true);\n","import { Subscription, User } from '@application/shared-api';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport * as mongoose from 'mongoose';\n\n@Schema()\nexport class UserNotifications extends mongoose.Document {\n\n  @Prop({ required: true })\n  @ApiProperty({ example: '0ba7596e-5087-4c72-887d-aaa730cdac23', description: 'Unique Identifier' })\n  uuid: string;\n\n  @Prop({ required: true, type: mongoose.Schema.Types.ObjectId })\n  userId?: string;\n\n  @Prop({ required: true, type: mongoose.Schema.Types.ObjectId })\n  notificationId?: string;\n\n  @Prop({ required: true })\n  @ApiProperty({ example: '2020-11-09T19:53:53.032Z', description: 'Created On' })\n  createdOn?: Date;\n\n  @Prop({ required: false })\n  @ApiProperty({ example: '2020-11-09T19:53:53.032Z', description: 'Read On' })\n  readDate?: Date;\n\n  @Prop({ required: true })\n  readStatus: number;\n  \n}\n\nexport const UserNotificationsSchema = SchemaFactory.createForClass(UserNotifications);\nUserNotificationsSchema.set('validateBeforeSave', true);\n","import { FlagsInterface, UserKeyInterface,objectInterface } from '@application/api-interfaces';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport * as mongoose from 'mongoose';\nimport { Course } from './course.schema';\nimport { Syllabus } from './syllabus.schema';\nimport { TSCategories } from './ts-categories.schema';\n\n\n@Schema()\nexport class Logs extends mongoose.Document {\n\n    @Prop({required: true })\n    moduleName: string;\n\n    @Prop({required: true})\n    collectionName: string;\n\n    @Prop({required: true, type: Object })\n    request: objectInterface;\n\n    @Prop({required: true,type: mongoose.Schema.Types.ObjectId })\n    documentId: string;\n\n    @Prop({required: false,type: Date})\n    createdOn?: Date;\n\n    @Prop({required: false,type: Date})\n    modifiedOn?: Date;\n\n    @Prop({ required: false, type: Object })\n    createdBy: UserKeyInterface;\n\n    @Prop({required: false, type: Object })\n    modifiedBy: UserKeyInterface;\n\n\n}\n\nexport const LogsSchema = SchemaFactory.createForClass(Logs);\nLogsSchema.set('validateBeforeSave', true);","import { FlagsInterface, UserKeyInterface,objectInterface } from '@application/api-interfaces';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport * as mongoose from 'mongoose';\nimport { Course } from './course.schema';\nimport { Syllabus } from './syllabus.schema';\nimport { TSCategories } from './ts-categories.schema';\n\n\n@Schema()\nexport class DailyTestQuestions extends mongoose.Document {\n\n    @Prop({required: true,type: mongoose.Schema.Types.ObjectId, ref: Course.name })\n    courseId: string;\n\n    @Prop({required: true})\n    questionIds: string[];\n\n    @Prop({required: false,type: Date})\n    createdOn?: Date;\n\n    @Prop({required: false,type: Date})\n    modifiedOn?: Date;\n\n    @Prop({ required: false, type: Object })\n    createdBy: UserKeyInterface;\n\n    @Prop({required: false, type: Object })\n    modifiedBy: UserKeyInterface;\n\n\n}\n\nexport const DailyTestQuestionsSchema = SchemaFactory.createForClass(DailyTestQuestions);\nDailyTestQuestionsSchema.set('validateBeforeSave', true);","import {\n    UserKeyInterface,\n  } from '@application/api-interfaces';\n  import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n  import * as mongoose from 'mongoose';\n  \n  \n  @Schema()\n  export class Disableuserfortestsubmits extends mongoose.Document {\n  \n    @Prop({ required: true })\n    uuid: string;\n  \n    @Prop()\n    id: string;\n  \n    @Prop({ required: true })\n    mobile: string;\n\n    @Prop({ required: true })\n    subscription: boolean;\n\n    @Prop({ required: true })\n    submission: boolean;\n\n    @Prop({ required: true })\n    showInActiveCourses: boolean;\n  \n    @Prop({ required: true })\n    status: boolean;\n  \n    @Prop({\n      required: false,\n      type: String,\n    })\n    createdOn?: Date;\n  \n    @Prop({\n      required: false,\n      type: String,\n    })\n    modifiedOn?: Date;\n  \n    @Prop({ required: true, type: Object })\n    createdBy: UserKeyInterface;\n  \n    @Prop({ type: Object })\n    modifiedBy: UserKeyInterface;\n  \n  }\n  \n  export const DisableuserfortestsubmitSchema = SchemaFactory.createForClass(Disableuserfortestsubmits);\n  DisableuserfortestsubmitSchema.set('validateBeforeSave', true);\n  ","import {\n    feedbackUsersRatingInterface,\n    UserKeyInterface,\n} from '@application/api-interfaces';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Course } from './course.schema';\nimport { Employee } from './employee.schema';\nimport { User } from './user.schema';\n\n@Schema()\nexport class Feedbacks extends mongoose.Document {\n\n    @Prop({ required: true })\n    uuid: string;\n\n    @Prop()\n    id: string;\n\n    @Prop({ required: true })\n    title: string;\n\n    @Prop({ required: true })\n    feedback_type: string;\n\n    @Prop([{ type: mongoose.Schema.Types.ObjectId, ref: Course.name }])\n    course: string[];\n\n    // @Prop([{ type: mongoose.Schema.Types.ObjectId, ref: User.name }])\n    // users: string[];\n\n    @Prop([{\n        user_id: { required: false, type: mongoose.Schema.Types.ObjectId, ref: User.name },\n        rating: {type:Number, required: false },\n        createdOn: { type: Date, required: false },\n        message:{required:false}\n    }])\n    replies: feedbackUsersRatingInterface[];\n\n    @Prop({\n        required: false,\n        type: String,\n    })\n    createdOn?: Date;\n\n    @Prop({\n        required: false,\n        type: String,\n    })\n    modifiedOn?: Date;\n\n    @Prop({ required: true, type: Object })\n    createdBy: UserKeyInterface;\n\n    @Prop({ type: Object })\n    modifiedBy: UserKeyInterface;\n\n    @Prop({ required: true, type: Object })\n    flags: any;\n}\n\nexport const FeedbackSheema = SchemaFactory.createForClass(Feedbacks);\nFeedbackSheema.set('validateBeforeSave', true);\n","import {\n    UserKeyInterface,\n} from '@application/api-interfaces';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { ObjectID } from 'mongodb';\nimport * as mongoose from 'mongoose';\nimport { Department } from './department.schema';\nimport { Employee } from './employee.schema';\nimport { User } from './user.schema';\nimport { Course } from './course.schema';\n\n@Schema()\nexport class Ticket extends mongoose.Document {\n\n    @Prop({ required: true })\n    uuid: string;\n\n    @Prop()\n    id: string;\n\n    @Prop({ required: true })\n    ticketId: string;\n\n    @Prop({ required: true })\n    message: string;\n\n    @Prop({ required: true,type: mongoose.Schema.Types.ObjectId, ref: User.name  })\n    user: string;\n\n    @Prop({ required: true,type: mongoose.Schema.Types.ObjectId, ref: Department.name  })\n    @ApiProperty({\n        example: '3457596efdfdfd',\n        description: 'department'\n      })\n      department: string;\n    \n\n    @Prop({ required: false,type: mongoose.Schema.Types.ObjectId, ref: Employee.name  })\n    assignee: string;\n\n    @Prop({ required: false,type: mongoose.Schema.Types.ObjectId, ref: Course.name  })\n    courses: any;\n\n    @Prop({\n        required: false,\n        type: Date,\n    })\n    createdOn?: Date;\n\n    @Prop({\n        required: false,\n        type: Date,\n    })\n    lastUpdated?: Date;\n    \n    @Prop({\n        required: false,\n        type: Date,\n    })\n    closedDateTime?: Date;\n\n    @Prop({\n        required: false,\n        type: Date,\n    })\n    modifiedOn?: Date;\n\n    @Prop({ type: Object })\n    modifiedBy: UserKeyInterface;\n\n    @Prop({ required: true, type : Number})\n    status: Number;\n\n    @Prop({ required: true, type: String})\n    priority: {\n        type: String,\n        enum : ['high','medium','low'],\n        default: 'low'\n    };\n    \n    @Prop({ required: true, type : Number})\n    type: Number;\n    \n    // @Prop({ required: false })\n    // reply_message: string;\n\n    @Prop({ required: false })\n    @ApiProperty({ example: 'image Path', description: 'image Path' })\n    reply: [];\n\n    @Prop({ required: false })\n    @ApiProperty({ example: 'image Path', description: 'image Path' })\n    image: [];\n\n    @Prop({ required: false })\n    @ApiProperty({ example: 'image Path', description: 'image Path' })\n    audio: [];\n}\n\nexport const TicketSchema = SchemaFactory.createForClass(Ticket);\nTicketSchema.set('validateBeforeSave', true);\n","module.exports = require(\"request\");","module.exports = require(\"date-and-time\");","export * from './create-about-us.dto';\nexport * from './create-banner.dto';\nexport * from './create-tags.dto';\nexport * from './create-sample.dto';\nexport * from './create-coupon.dto';\nexport * from './create-course.dto';\nexport * from './create-faculty.dto';\nexport * from './create-job.dto';\nexport * from './create-question.dto';\nexport * from './create-syllabus.dto';\nexport * from './create-user.dto';\nexport * from './register-user.dto';\nexport * from './create-ts-category.dto';\nexport * from './create-test.dto';\nexport * from './create-user-message.dto';\nexport * from './create-qbank.dto';\nexport * from './create-qbank-subject.dto';\nexport * from './create-subscription.dto';\nexport * from './submit-qbank-topic.dto';\nexport * from './submit-test.dto';\nexport * from './create-video.dto';\nexport * from './create-video-subject.dto';\nexport * from './report-error.dto';\nexport * from './start-test.dto';\nexport * from './start-topic.dto'\nexport * from './stop-test.dto';\nexport * from './stop-topic.dto';\nexport * from './create-pearls.dto';\nexport * from './create-employee.dto';\nexport * from './create-transactions.dto';\nexport * from './create-role-values.dto';\nexport * from './create-role-submodules.dto';\nexport * from './create-roles.dto';\nexport * from './create-agent-transactions.dto';\nexport * from './create-pearl-subjects.dto';\nexport * from './create-suggested-video.dto';\nexport * from './create-suggested-tests.dto';\nexport * from './create-suggested-qbank.dto';\nexport * from './create-mcq-of-the-day.dto';\nexport * from './create-logs.dto';\nexport * from './create-department.dto'\n\n\n\n\n\n","import { UserKeyInterface } from '@application/api-interfaces';\nimport {\n  IsDateString,\n  IsNotEmpty,\n  IsObject,\n  IsOptional,\n  IsString,\n} from 'class-validator';\n\nexport class CreateAboutUsDTO {\n  @IsNotEmpty()\n  @IsString()\n  uuid: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly title: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly content: string;\n\n  @IsNotEmpty()\n  @IsDateString()\n  readonly createdOn: Date;\n\n  @IsOptional()\n  @IsDateString()\n  readonly modifiedOn?: Date;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly createdBy: UserKeyInterface;\n\n  @IsOptional()\n  @IsObject()\n  readonly modifiedBy?: UserKeyInterface;\n}\n","import {\n  IsEmail,\n  IsNotEmpty,\n  IsInt,\n  IsString,\n  IsEnum,\n  IsArray,\n  IsObject,\n  IsBoolean,\n  IsDate,\n  IsOptional,\n  IsDateString,\n  IsNumber,\n} from 'class-validator';\n\nimport {\n  FlagsInterface,\n  CourseInterface,\n  UserKeyInterface,\n  SubscriptionInterface,\n} from '@application/api-interfaces';\n\nexport class CreateBannerDTO {\n  @IsNotEmpty()\n  @IsString()\n  readonly uuid: string;\n\n  // @IsNotEmpty()\n  // @IsString()\n  @IsOptional()\n  readonly title: string;\n\n  @IsOptional()\n  @IsString()\n  readonly link: string;\n\n  // @IsOptional()\n  // @IsString()\n  readonly youtubeLink: string;\n\n  // @IsOptional()\n  // @IsString()\n  readonly subscriptions: SubscriptionInterface[];\n\n  @IsNotEmpty()\n  //@IsArray()\n  @IsString()\n  readonly courses: CourseInterface[];\n\n  @IsNotEmpty()\n  @IsString()\n  readonly imgUrl?: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  readonly order: number;\n\n  @IsNotEmpty()\n  @IsDateString()\n  readonly createdOn: Date;\n\n  @IsOptional()\n  @IsDateString()\n  readonly modifiedOn?: Date;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly createdBy: UserKeyInterface;\n\n  @IsOptional()\n  @IsObject()\n  readonly modifiedBy?: UserKeyInterface;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly flags: FlagsInterface;\n}\n","import {\n    IsEmail,\n    IsNotEmpty,\n    IsInt,\n    IsString,\n    IsEnum,\n    IsArray,\n    IsObject,\n    IsBoolean,\n    IsDate,\n    IsOptional,\n    IsDateString,\n  } from 'class-validator';\n  \n  import {\n    FlagsInterface,\n    UserKeyInterface,\n  } from '@application/api-interfaces';\n\n  export class CreateTagsDTO {\n    @IsNotEmpty()\n    @IsString()\n    readonly uuid: string;\n  \n    @IsNotEmpty()\n    @IsString()\n    readonly title: string;\n\n    @IsNotEmpty()\n    @IsDateString()\n    readonly createdOn: Date;\n\n    @IsOptional()\n    @IsDateString()\n    readonly modifiedOn?: Date;\n\n    @IsNotEmpty()\n    @IsObject()\n    readonly createdBy: UserKeyInterface;\n\n    @IsOptional()\n    @IsObject()\n    readonly modifiedBy?: UserKeyInterface;\n\n    @IsNotEmpty()\n    @IsObject()\n    readonly flags: FlagsInterface;\n  }","import {\n  IsEmail,\n  IsNotEmpty,\n  IsInt,\n  IsString,\n  IsEnum,\n  IsArray,\n  IsObject,\n  IsBoolean,\n  IsDate,\n  IsOptional,\n  IsDateString,\n} from 'class-validator';\n\nimport {\n  FlagsInterface,\n  CourseInterface,\n  UserKeyInterface,\n} from '@application/api-interfaces';\n\nexport class CreateSampleDTO {\n  @IsNotEmpty()\n  @IsString()\n  readonly uuid: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly title: string;\n}\n","import {\n  IsArray,\n  IsDateString,\n  IsNotEmpty,\n  IsNumber,\n  IsObject,\n  IsOptional,\n  IsString\n} from 'class-validator';\n\nimport {\n  AvailedByInterface,\n  CouponFlagsInterface,\n  FlagsInterface,\n  UserKeyInterface,\n} from '@application/api-interfaces';\n\nexport class CreateCouponDTO {\n  @IsNotEmpty()\n  @IsString()\n  readonly uuid: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly code: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly discountType: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  readonly discount: number;\n  \n  @IsNotEmpty()\n  @IsNumber()\n  readonly totalCoupons: number;\n\n  @IsNotEmpty()\n  @IsNumber()\n  readonly availableCoupons: number;\n\n  @IsNotEmpty()\n  @IsDateString()\n  readonly valiedFrom: Date;\n\n  @IsNotEmpty()\n  @IsDateString()\n  readonly valiedTo: Date;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly subscription: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly couponType: string;\n\n  @IsOptional()\n  @IsArray()\n  readonly users: [];\n\n  @IsOptional()\n  @IsString()\n  readonly agent: string;\n\n  @IsOptional()\n  @IsNumber()\n  readonly agentCommission: number;\n\n  @IsOptional()\n  @IsNumber()\n  readonly agentAmount: number;\n\n  @IsOptional()\n  @IsNumber()\n  readonly agentTotalAmount: number;\n\n  @IsOptional()\n  @IsNumber()\n  readonly agentDueAmount: number;\n\n  @IsOptional()\n  @IsNumber()\n  appliedUsersCount:number\n\n  @IsNotEmpty()\n  @IsDateString()\n  readonly createdOn: Date;\n\n  @IsOptional()\n  @IsDateString()\n  readonly modifiedOn?: Date;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly createdBy: UserKeyInterface;\n\n  @IsOptional()\n  @IsObject()\n  readonly modifiedBy?: UserKeyInterface;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly flags: CouponFlagsInterface;\n}\n","import {\n  IsArray,\n  IsDateString,\n  IsNotEmpty,\n  IsNumber,\n  IsObject,\n  IsOptional,\n  IsString,\n} from 'class-validator';\n\nimport {\n  CourseFlagsInterface,\n  FlagsInterface,\n  SyllabusInterface,\n  UserKeyInterface,\n} from '@application/api-interfaces';\n\nexport class CreateCourseDTO {\n\n  @IsNotEmpty()\n  @IsString()\n  readonly uuid: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly title: string;\n\n  @IsOptional()\n  @IsString()\n  readonly imgUrl?: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  readonly order: number;\n\n  // @IsOptional()\n  // @IsArray()\n  // readonly users: UserKeyInterface[];\n\n  @IsNotEmpty()\n  @IsArray()\n  readonly syllabus: SyllabusInterface[];\n\n  @IsNotEmpty()\n  @IsDateString()\n  readonly createdOn: Date;\n\n  @IsOptional()\n  @IsDateString()\n  readonly modifiedOn?: Date;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly createdBy: UserKeyInterface;\n\n  @IsOptional()\n  @IsObject()\n  readonly modifiedBy?: UserKeyInterface;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly flags: CourseFlagsInterface;\n}\n","import { UserKeyInterface } from '@application/api-interfaces';\nimport {\n  IsArray,\n  IsBoolean,\n  IsDate,\n  IsDateString,\n  IsEmail,\n  IsEnum,\n  IsInt,\n  IsNotEmpty,\n  IsNumber,\n  IsObject,\n  IsOptional,\n  IsString,\n} from 'class-validator';\n\nimport {\n  BankInterface,\n  CourseInterface,\n  FlagsInterface,\n  SyllabusKeyInterface,\n} from '@application/api-interfaces';\n\nexport class CreateFacultyDTO {\n  @IsNotEmpty()\n  @IsString()\n  readonly uuid: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly name: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly gender: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly designation: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  readonly mobile: number;\n\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n\n  /*@IsNotEmpty()\n  @IsArray()\n  readonly courses: CourseInterface[];\n\n  @IsNotEmpty()\n  @IsArray()\n  readonly syllabus: SyllabusKeyInterface[];*/\n  //@IsNotEmpty()\n  // @IsArray()//cosmmented\n  @IsOptional()\n  @IsString()\n  readonly courses: CourseInterface[];\n\n  @IsOptional()\n  // @IsArray() // commented\n  @IsString()\n  readonly syllabus: SyllabusKeyInterface[];\n\n  @IsOptional()\n  @IsString()\n  readonly imgUrl?: string;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly bank: BankInterface;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly specialization: string;\n\n  @IsNotEmpty()\n  @IsDateString()\n  readonly createdOn: Date;\n\n  @IsOptional()\n  @IsDateString()\n  readonly modifiedOn?: Date;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly createdBy: UserKeyInterface;\n\n  @IsOptional()\n  @IsObject()\n  readonly modifiedBy?: UserKeyInterface;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly flags: FlagsInterface;\n}\n","import { CareersFlagsInterface, DepartmentENum, SkillsInterface, UserKeyInterface } from '@application/api-interfaces';\nimport {\n  IsArray,\n  IsDateString,\n  IsEnum,\n  IsNotEmpty,\n  IsObject,\n  IsOptional,\n  IsString,\n} from 'class-validator';\n\nexport class CreateJobDTO {\n  @IsNotEmpty()\n  @IsString()\n  readonly uuid: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly title: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly designation: string;\n\n  @IsNotEmpty()\n  @IsEnum(DepartmentENum)\n  readonly department: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly code: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly description: string;\n\n  @IsNotEmpty()\n  @IsArray()\n  readonly qualifications: string[];\n\n  @IsNotEmpty()\n  @IsString()\n  readonly requirements: string;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly skills: SkillsInterface;\n\n  @IsNotEmpty()\n  @IsDateString()\n  readonly createdOn: Date;\n\n  @IsOptional()\n  @IsDateString()\n  readonly modifiedOn?: Date;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly createdBy: UserKeyInterface;\n\n  @IsOptional()\n  @IsObject()\n  readonly modifiedBy?: UserKeyInterface;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly flags: CareersFlagsInterface;\n}\n","import { SyllabusInterface, UserKeyInterface } from '@application/api-interfaces';\nimport {\n  IsArray,\n  IsDateString,\n  IsEnum,\n  IsNotEmpty,\n  IsObject,\n  IsOptional,\n  IsString,\n} from 'class-validator';\n\nimport {\n  QuestionAnswerInterface,\n  QuestionDifficultyEnum,\n  QuestionFlagsInterface,\n  QuestionOptionsInterface,\n  QuestionTypeEnum,\n  matchLeftOptionsInterface,\n  matchRightOptionsInterface,\n} from '@application/api-interfaces';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateQuestionDto {\n  @IsNotEmpty()\n  @IsString()\n  readonly uuid: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly title: string;\n\n  @IsOptional()\n  shortTitle:string\n\n  @IsNotEmpty()\n  @IsEnum(QuestionTypeEnum)\n  readonly type: string;\n\n  // @IsArray()\n  @IsOptional()\n  readonly options: QuestionOptionsInterface[];\n\n  @IsOptional()\n  @IsArray()\n  readonly matchLeftSideOptions: matchLeftOptionsInterface[];\n\n  @IsOptional()\n  @IsArray()\n  readonly matchRightSideOptions: matchRightOptionsInterface[];\n\n  @IsOptional()\n  @IsString()\n  readonly imgUrl: string;\n\n  @IsOptional()\n  @IsString()\n  readonly descriptionImgUrl: string;\n\n\n  @IsNotEmpty()\n // @IsString()\n  readonly mathType: string;\n\n\n  @IsOptional()\n  @IsString()\n  readonly previousAppearances: string;\n\n  @IsOptional()\n  //@IsString()\n  readonly tags: string;\n\n  @IsNotEmpty()\n  @IsEnum(QuestionDifficultyEnum)\n  readonly difficulty: string;\n\n  @IsNotEmpty()\n  @IsArray()\n  readonly syllabus: SyllabusInterface[];\n\n  @IsOptional()\n // @IsArray()\n  readonly perals: any;\n\n  // @IsObject()\n  @IsOptional()\n  readonly answer: QuestionAnswerInterface;\n\n  @IsOptional()\n  readonly matchAnswer:[];\n\n  @IsNotEmpty()\n  @IsString()\n  readonly description: string;\n\n  @IsNotEmpty()\n  @IsDateString()\n  @ApiProperty({ example: '2020-11-09T19:53:53.032Z', description: 'Created On' })\n  readonly createdOn: Date;\n\n  @IsOptional()\n  @IsDateString()\n  @ApiProperty({ example: '2020-11-12T19:53:53.032Z', description: 'Modified On' })\n  readonly modifiedOn?: Date;\n\n  @IsNotEmpty()\n  @IsObject()\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user created it'\n  })\n  readonly createdBy: UserKeyInterface;\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user modified it'\n  })\n  readonly modifiedBy?: UserKeyInterface;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly flags: QuestionFlagsInterface;\n}\n","import {\n  CourseInterface,\n  SyllabusFlagsInterface,\n  SyllabusKeyInterface,\n  SyllabusTypeEnum,\n  UserKeyInterface,\n} from '@application/api-interfaces';\nimport {\n  IsArray,\n  IsDateString,\n  IsEnum,\n  IsNotEmpty,\n  IsNumber,\n  IsObject,\n  IsOptional,\n  IsString,\n} from 'class-validator';\n\nexport class CreateSyllabusDto {\n  @IsNotEmpty()\n  @IsString()\n  readonly uuid: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly title: string;\n\n  @IsNotEmpty()\n  @IsEnum(SyllabusTypeEnum)\n  readonly type: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly shortcut: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  readonly order: number;\n\n  @IsOptional()\n  @IsString()\n  readonly imgUrlVideos?: string;\n\n  @IsOptional()\n  @IsString()\n  readonly suggestedBanner?: string;\n\n  @IsOptional()\n  @IsString()\n  readonly imgUrlQBank?: string;\n\n  @IsOptional()\n  @IsArray()\n  readonly parents?: SyllabusKeyInterface[];\n\n  @IsOptional()\n  @IsArray()\n  readonly children?: SyllabusKeyInterface[];\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly flags: SyllabusFlagsInterface;\n\n  @IsNotEmpty()\n  @IsDateString()\n  readonly createdOn: Date;\n\n  @IsOptional()\n  @IsDateString()\n  readonly modifiedOn?: Date;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly createdBy: UserKeyInterface;\n\n  @IsOptional()\n  @IsObject()\n  readonly modifiedBy?: UserKeyInterface;\n\n}\n","import {\n  IsArray,\n  IsDateString,\n  IsEmail,\n  IsNotEmpty,\n  IsNumber,\n  IsObject,\n  IsOptional,\n  IsString,\n} from 'class-validator';\n\nimport {\n  FlagsInterface,\n  KeyInterface,\n  UserKeyInterface,\n} from '@application/api-interfaces';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateUserDto {\n\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({ example: '0ba7596e-5087-4c72-887d-aaa730cdac23', description: 'Unique Identifier' })\n  uuid: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ example: 'Plato Architect', description: 'User name' })\n  readonly name: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    example: 'STUDENT',\n    description: 'AWS S3/Cloudinary URL for the image'\n  })\n  readonly type: string;\n\n  @IsOptional()\n  @IsDateString()\n  @ApiProperty({ example: '2020-11-09T19:53:53.032Z', description: 'User Date of Birth' })\n  readonly dob: Date;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    example: 'http://img-url',\n    description: 'AWS S3/Cloudinary URL for the image'\n  })\n  readonly imgUrl?: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  @ApiProperty({ example: 9999999990, description: 'User Mobile' })\n  readonly mobile: number;\n\n  @IsOptional()\n  @ApiProperty({ example: 'user@platononline.com', description: 'User Email' })\n  readonly email: string;\n\n  @IsOptional()\n  // @IsArray()\n  @ApiProperty({\n    example: [{ uuid: '3457596e-5087-4c72-887d-aaa730cdac23', title: 'Sample Course' }],\n    description: 'User Courses'\n  })\n  // readonly courses: KeyInterface[];\n  readonly courses: any;\n\n  @IsOptional()\n  @IsArray()\n  @ApiProperty({\n    example: [{ uuid: '3457596e-5087-4c72-887d-aaa730cdac23', title: 'Full Package' }],\n    description: 'User Subscriptions'\n  })\n  readonly subscriptions?: KeyInterface[];\n\n  @IsOptional()\n  @IsArray()\n  @ApiProperty({\n    example: [{ uuid: '3457596e-5087-4c72-887d-aaa730cdac23', title: 'Sample Organization' }],\n    description: 'User Organizations'\n  })\n  readonly organizations: KeyInterface[];\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ example: 'Plato College', description: 'User College' })\n  readonly college: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ example: 'qwewqeqwe', description: 'User password' })\n  password: string;\n\n  @IsOptional()\n  @IsNumber()\n  @ApiProperty({ example: '123456', description: 'OTP' })\n  otp: number;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ example: 'MALE', description: 'User Gender' })\n  readonly gender: string;\n\n  @IsOptional()\n  @IsDateString()\n  @ApiProperty({ example: '2020-11-09T19:53:53.032Z', description: 'Created On' })\n  readonly createdOn: Date;\n\n  @IsOptional()\n  @IsDateString()\n  @ApiProperty({ example: '2020-11-12T19:53:53.032Z', description: 'Modified On' })\n  readonly modifiedOn?: Date;\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user created it'\n  })\n  readonly createdBy: UserKeyInterface;\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user created it'\n  })\n  readonly modifiedBy?: UserKeyInterface;\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({\n    example: { active: true, paid: true },\n    description: 'flags to operate on the entity'\n  })\n  readonly flags: FlagsInterface;\n}\n","import {\n  IsArray,\n  IsDateString,\n  IsEmail,\n  IsNotEmpty,\n  IsNumber,\n  IsObject,\n  IsOptional,\n  IsString,\n} from 'class-validator';\n\nimport {\n  FlagsInterface,\n  KeyInterface,\n  UserKeyInterface,\n} from '@application/api-interfaces';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class RegisterUserDto {\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ example: '0ba7596e-5087-4c72-887d-aaa730cdac23', description: 'Unique Identifier' })\n  uuid: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ example: 'Plato Architect', description: 'User name' })\n  readonly name: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    example: 'STUDENT',\n    description: 'AWS S3/Cloudinary URL for the image'\n  })\n  readonly type: string;\n\n  @IsOptional()\n  @IsDateString()\n  @ApiProperty({ example: '2020-11-09T19:53:53.032Z', description: 'User Date of Birth' })\n  readonly dob: Date;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    example: 'http://img-url',\n    description: 'AWS S3/Cloudinary URL for the image'\n  })\n  readonly imgUrl?: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  @ApiProperty({ example: 9999999990, description: 'User Mobile' })\n  readonly mobile: number;\n\n  @IsOptional()\n  @IsEmail()\n  @ApiProperty({ example: 'user@platononline.com', description: 'User Email' })\n  readonly email: string;\n\n  @IsOptional()\n  @IsArray()\n  @ApiProperty({\n    example: [{ uuid: '3457596e-5087-4c72-887d-aaa730cdac23', title: 'Sample Course' }],\n    description: 'User Courses'\n  })\n  readonly courses: KeyInterface[];\n\n  @IsOptional()\n  @IsArray()\n  @ApiProperty({\n    example: [{ uuid: '3457596e-5087-4c72-887d-aaa730cdac23', title: 'Full Package' }],\n    description: 'User Subscriptions'\n  })\n  readonly subscriptions?: KeyInterface[];\n\n  @IsOptional()\n  @IsArray()\n  @ApiProperty({\n    example: [{ uuid: '3457596e-5087-4c72-887d-aaa730cdac23', title: 'Sample Organization' }],\n    description: 'User Organizations'\n  })\n  readonly organizations: KeyInterface[];\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ example: 'Plato College', description: 'User College' })\n  readonly college: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ example: 'qwewqeqwe', description: 'User password' })\n  password: string;\n\n  @IsOptional()\n  @IsNumber()\n  @ApiProperty({ example: '123456', description: 'OTP' })\n  otp: number;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ example: 'MALE', description: 'User Gender' })\n  readonly gender: string;\n\n  @IsOptional()\n  @IsDateString()\n  @ApiProperty({ example: '2020-11-09T19:53:53.032Z', description: 'Created On' })\n  readonly createdOn: Date;\n\n  @IsOptional()\n  @IsDateString()\n  @ApiProperty({ example: '2020-11-12T19:53:53.032Z', description: 'Modified On' })\n  readonly modifiedOn?: Date;\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user created it'\n  })\n  readonly createdBy: UserKeyInterface;\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({\n    example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n    description: 'UUID & Name of the user created it'\n  })\n  readonly modifiedBy?: UserKeyInterface;\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({\n    example: { active: true, paid: true },\n    description: 'flags to operate on the entity'\n  })\n  readonly flags: FlagsInterface;\n}\n","import { CourseInterface, TestCategoryInterface, TestSeriesCategoryInterface, UserKeyInterface } from '@application/api-interfaces';\nimport {\n  IsArray,\n  IsDateString,\n  IsNotEmpty,\n  IsNumber,\n  IsObject,\n  IsOptional,\n  IsString,\n} from 'class-validator';\n\nimport {\n  FlagsInterface,\n} from '@application/api-interfaces';\n\n// export class CreateTSCategoriesDTO {\n  // @IsNotEmpty()\n  // @IsString()\n  // readonly uuid: string;\n\n  // @IsNotEmpty()\n  // @IsString()\n  // readonly title: string;\n\n  // @IsNotEmpty()\n  // @IsArray()\n  // readonly courses: CourseInterface[];\n\n  // @IsNotEmpty()\n  // @IsString()\n  // readonly schedulePdf?: string;\n\n  // @IsNotEmpty()\n  // @IsNumber()\n  // readonly order: number;\n\n  // @IsNotEmpty()\n  // @IsDateString()\n  // readonly createdOn: Date;\n\n  // @IsOptional()\n  // @IsDateString()\n  // readonly modifiedOn?: Date;\n\n  // @IsNotEmpty()\n  // @IsObject()\n  // readonly createdBy: UserKeyInterface;\n\n  // @IsOptional()\n  // @IsObject()\n  // readonly modifiedBy?: UserKeyInterface;\n\n  // @IsNotEmpty()\n  // @IsObject()\n  // readonly flags: FlagsInterface;\n// }\n\nexport class CreateTSCategoriesDTO {\n  @IsNotEmpty()\n  @IsString()\n  readonly uuid: string;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly categories: any;\n\n  // @IsNotEmpty()\n  // // @IsArray()\n  // readonly categories: TestCategoryInterface;\n\n  // @IsNotEmpty()\n  // @IsString()\n  // readonly title: string;\n\n\n  @IsNotEmpty()\n  //@IsArray()\n  //readonly courses: CourseInterface[];\n  @IsString()\n  readonly courses: CourseInterface[];\n \n\n  // @IsNotEmpty()\n  // @IsString()\n  // readonly schedulePdf?: string;\n\n  // @IsNotEmpty()\n  // @IsNumber()\n  // readonly order: number;\n\n  @IsNotEmpty()\n  @IsDateString()\n  readonly createdOn: Date;\n\n  @IsOptional()\n  readonly scheduledDate: Date;\n\n  @IsOptional()\n  @IsDateString()\n  readonly modifiedOn?: Date;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly createdBy: UserKeyInterface;\n\n  @IsOptional()\n  @IsObject()\n  readonly modifiedBy?: UserKeyInterface;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly flags: FlagsInterface;\n}\n","import { CourseInterface, SyllabusInterface, TestCategoryInterface, TestFlagsInterface, TestQuestionInterface, UserKeyInterface } from '@application/api-interfaces';\nimport {\n  IsArray,\n  IsDateString,\n  IsNotEmpty,\n  IsNumber,\n  IsObject,\n  IsOptional,\n  IsString,\n} from 'class-validator';\n\nexport class CreateTestDTO {\n\n  @IsNotEmpty()\n  @IsString()\n  readonly uuid: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly title: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly imgUrl?: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly description?: string;\n\n  @IsNotEmpty()\n  @IsArray()\n  readonly courses: CourseInterface[];\n\n  @IsNotEmpty()\n  @IsArray()\n  readonly categories: TestCategoryInterface[];\n\n  @IsNotEmpty()\n  @IsArray()\n  readonly subjects: SyllabusInterface[];\n\n  @IsNotEmpty()\n  @IsNumber()\n  order: number;\n\n  @IsNotEmpty()\n  @IsString()\n  time: string;\n\n  @IsNotEmpty()\n  @IsDateString()\n  scheduledDate: Date;\n\n  @IsNotEmpty()\n  @IsDateString()\n  expiryDate: Date;\n\n  @IsNotEmpty()\n  @IsString()\n  pdf: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  count: number;\n\n  @IsNotEmpty()\n  @IsArray()\n  readonly questions: TestQuestionInterface[];\n\n  @IsNotEmpty()\n  @IsDateString()\n  readonly createdOn: Date;\n\n  @IsOptional()\n  @IsDateString()\n  readonly modifiedOn?: Date;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly createdBy: UserKeyInterface;\n\n  @IsOptional()\n  @IsObject()\n  readonly modifiedBy?: UserKeyInterface;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly flags: TestFlagsInterface;\n\n}\n","import {\n  IsEmail,\n  IsNotEmpty,\n  IsNumber,\n  IsString,\n} from 'class-validator';\n\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateUserMessageDto {\n\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({ example: '0ba7596e-5087-4c72-887d-aaa730cdac23', description: 'Unique Identifier' })\n  readonly uuid: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({ example: 'Krishna', description: 'User name' })\n  readonly name: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  @ApiProperty({ example: 9999999990, description: 'User Mobile' })\n  readonly mobile: number;\n\n  @IsNotEmpty()\n  @IsEmail()\n  @ApiProperty({ example: 'user@platononline.com', description: 'User Email' })\n  readonly email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({ example: 'Say Hi', description: 'User Message' })\n  readonly message: string;\n\n}\n","import { CourseInterface, QBankFlagsInterface, QBankSubjectInterface, SyllabusInterface, TestCategoryInterface, TestFlagsInterface, TestInterface, TestQuestionInterface, UserKeyInterface } from '@application/api-interfaces';\nimport {\n  IsArray,\n  IsDateString,\n  IsNotEmpty,\n  IsNumber,\n  IsObject,\n  IsOptional,\n  IsString,\n} from 'class-validator';\n\nexport class CreateQBankDTO {\n\n  @IsNotEmpty()\n  @IsString()\n  readonly chapter?: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly courses?: string;\n\n  @IsOptional()\n  @IsString()\n  readonly subject?: string;\n\n  // @IsOptional()\n  // @IsString()\n  // readonly iconUrl?: string;\n\n  // @IsNotEmpty()\n  // @IsString()\n  // readonly description?: string;\n\n  // @IsNotEmpty()\n  // @IsObject()\n  // readonly subject: QBankSubjectInterface;\n\n  // @IsNotEmpty()\n  // @IsObject()\n  // readonly chapter: { title: string };\n\n  // @IsNotEmpty()\n  // @IsNumber()\n  // order: number;\n\n  // @IsNotEmpty()\n  // @IsDateString()\n  // scheduledDate: Date;\n\n  // @IsOptional()\n  // @IsString()\n  // pdf?: string;\n\n  // @IsNotEmpty()\n  // @IsNumber()\n  // count: number;\n\n  // @IsNotEmpty()\n  // @IsArray()\n  // readonly questions: TestQuestionInterface[];\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly topics: TestInterface[];\n\n  // @IsNotEmpty()\n  // @IsDateString()\n  // readonly createdOn: Date;\n\n  // @IsOptional()\n  // @IsDateString()\n  // readonly modifiedOn?: Date;\n\n  // @IsNotEmpty()\n  // @IsObject()\n  // readonly createdBy: UserKeyInterface;\n\n  // @IsOptional()\n  // @IsObject()\n  // readonly modifiedBy?: UserKeyInterface;\n\n  // @IsNotEmpty()\n  // @IsObject()\n  // readonly flags: QBankFlagsInterface;\n\n}\n","import {\n  CourseInterface,\n  FlagsInterface,\n  QBankFlagsInterface,\n  QBankInterface,\n  QBankSubjectChapterInterface,\n  SyllabusInterface,\n  UserKeyInterface,\n} from '@application/api-interfaces';\nimport {\n  IsArray,\n  IsNotEmpty,\n  IsNumber,\n  IsObject,\n  IsOptional,\n  IsString,\n} from 'class-validator';\n\nexport class CreateQBankSubjectDto {\n\n  @IsNotEmpty()\n  @IsString()\n  readonly uuid: string;\n\n  @IsOptional()\n  // @IsNotEmpty()\n  @IsString()\n  readonly title: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  readonly order: number;\n\n  @IsNotEmpty()\n  // @IsArray()//cosmmented\n  @IsString()\n  readonly courses: CourseInterface[];\n\n  @IsNotEmpty()\n  // @IsArray() // commented\n  @IsString()\n  readonly syllabus: SyllabusInterface[];\n\n  @IsNotEmpty()\n  @IsArray()\n  readonly chapters: QBankSubjectChapterInterface[];\n\n  @IsNotEmpty()\n  @IsString()\n  readonly imgUrl?: string;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly flags: QBankFlagsInterface;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly createdOn: String;\n\n  @IsOptional()\n  @IsString()\n  readonly modifiedOn?: String;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly createdBy: UserKeyInterface;\n\n  @IsOptional()\n  @IsObject()\n  readonly modifiedBy?: UserKeyInterface;\n\n}\n","import {\n  CouponInterface,\n  CourseInterface,\n  FlagsInterface,\n  QBankInterface,\n  TestInterface,\n  UserKeyInterface,\n  VideoInterface,\n} from '@application/api-interfaces';\nimport {\n  IsArray,\n  IsNotEmpty,\n  IsNumber,\n  IsObject,\n  IsOptional,\n  IsString,\n} from 'class-validator';\n\nexport class CreateSubscriptionDto {\n  @IsNotEmpty()\n  @IsString()\n  readonly uuid: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly title: string;\n\n  @IsOptional()\n  @IsString()\n  readonly description: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  readonly order: number;\n\n  @IsNotEmpty()\n  @IsNumber()\n  readonly count: number;\n\n  // @IsOptional()\n  // @IsString()\n  // readonly imgUrlVideos?: string;\n\n  // @IsOptional()\n  // @IsString()\n  // readonly suggestedBanner?: string;\n\n  // @IsOptional()\n  // @IsString()\n  // readonly imgUrlQBank?: string;\n\n  @IsOptional()\n  @IsArray()\n  readonly videos: VideoInterface[];\n\n  @IsOptional()\n  @IsArray()\n  readonly tests: TestInterface[];\n\n  @IsOptional()\n  @IsArray()\n  readonly qbanks: QBankInterface[];\n\n  // @IsNotEmpty()\n  // @IsArray()\n  // readonly courses: SubscriptionCourseInterface[];\n\n  @IsNotEmpty()\n  @IsString()\n  readonly courses: CourseInterface[];\n\n  // @IsNotEmpty()\n  // // @IsObject()\n  // // readonly coupons: CouponInterface;\n  // @IsString()\n  // readonly coupons: CouponInterface[];\n\n  @IsOptional()\n  @IsString()\n  readonly periodType: string;\n\n  @IsOptional()\n  @IsNumber()\n  readonly period: number;\n\n  @IsNotEmpty()\n  @IsNumber()\n  readonly actual: number;\n\n  @IsNotEmpty()\n  @IsNumber()\n  readonly originalPrice: number;\n  \n\n  // @IsNotEmpty()\n  // @IsNumber()\n  // readonly discounted: number;\n\n  @IsOptional()\n  readonly validFrom: Date;\n\n  @IsOptional()\n  readonly validTo: Date;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly flags: FlagsInterface;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly createdOn: String;\n\n  @IsOptional()\n  @IsString()\n  readonly modifiedOn?: String;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly createdBy: UserKeyInterface;\n\n  @IsOptional()\n  @IsObject()\n  readonly modifiedBy?: UserKeyInterface;\n\n}","import { EntityInterface, QBankTopicAnswerInterface, UserKeyInterface, UserTestStatsInterface } from '@application/api-interfaces';\nimport { IsArray, IsDateString, IsNotEmpty, IsNumber, IsObject, IsOptional, IsString } from 'class-validator';\n\nexport class SubmitUserQBankTopicDTO {\n\n  @IsNotEmpty()\n  @IsString()\n  uuid: string;\n\n  @IsOptional()\n  @IsNumber()\n  count: number;\n\n  @IsOptional()\n  @IsNumber()\n  rank: number;\n\n  @IsOptional()\n  @IsNumber()\n  totalUsers: number;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly user: UserKeyInterface;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly subject: EntityInterface;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly course: EntityInterface;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly topic: EntityInterface;\n\n  @IsNotEmpty()\n  @IsArray()\n  readonly answers: QBankTopicAnswerInterface[];\n\n  @IsOptional()\n  @IsObject()\n  stats: UserTestStatsInterface;\n\n  @IsNotEmpty()\n  @IsDateString()\n  readonly submittedOn: Date;\n\n}\n","import { EntityInterface, TestAnswerInterface, UserKeyInterface, UserTestStatsInterface } from '@application/api-interfaces';\nimport { IsArray, IsDateString, IsNotEmpty, IsNumber, IsObject, IsOptional, IsString } from 'class-validator';\n\nexport class SubmitUserTestDTO {\n\n  @IsNotEmpty()\n  @IsString()\n  uuid: string;\n\n  @IsOptional()\n  @IsNumber()\n  count: number;\n\n  @IsOptional()\n  @IsNumber()\n  rank: number;\n\n  @IsOptional()\n  @IsNumber()\n  totalUsers: number;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly user: UserKeyInterface;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly category: EntityInterface;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly course: EntityInterface;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly test: EntityInterface;\n\n  @IsNotEmpty()\n  @IsArray()\n  readonly answers: TestAnswerInterface[];\n\n  @IsOptional()\n  @IsObject()\n  stats: UserTestStatsInterface;\n\n  @IsNotEmpty()\n  @IsDateString()\n  readonly submittedOn: Date;\n\n}\n","import { FacultyInterface, SyllabusInterface, UserKeyInterface, VideoCheckpointsInterface, VideoFlagsInterface, VideoInterface, VideoSubjectInterface } from '@application/api-interfaces';\nimport {\n  IsArray,\n  IsBoolean,\n  IsDate,\n  IsDateString,\n  IsEmail,\n  IsEnum,\n  IsInt,\n  IsNotEmpty,\n  IsObject,\n  IsOptional,\n  IsString,\n} from 'class-validator';\n\nimport {\n  BankInterface,\n  CourseInterface,\n  FlagsInterface,\n  SyllabusKeyInterface,\n} from '@application/api-interfaces';\nimport { isObject } from 'util';\n\nexport class CreateVideoDTO {\n  // @IsNotEmpty()\n  // @IsString()\n  // readonly uuid: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly videoSubjectUuid: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly chapter: string;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly videos: VideoInterface[];\n\n  // @IsNotEmpty()\n  // @IsString()\n  // readonly title: string;\n\n  // @IsNotEmpty()\n  // @IsString()\n  // readonly totalTime: string;\n\n  // @IsNotEmpty()\n  // @IsString()\n  // readonly videoId: string;\n\n \n\n  // @IsOptional()\n  // @IsString()\n  // readonly youtubeUrl: string;\n\n  // @IsNotEmpty()\n  // @IsString()\n  // readonly androidUrl: string;\n\n  // @IsNotEmpty()\n  // @IsString()\n  // readonly iosUrl: string;\n\n  // @IsNotEmpty()\n  // @IsObject()\n  // readonly subject: VideoSubjectInterface;\n  // @IsNotEmpty()\n  // @IsString()\n  // readonly videoSubjectUuid: string;\n\n  // // @IsNotEmpty()\n  // // @IsObject()\n  // // readonly chapter: { title: string; uuid: string; };\n  // @IsNotEmpty()\n  // @IsString()\n  // readonly chapter: string;\n\n  // @IsNotEmpty()\n  // @IsObject()\n  // readonly faculty?: FacultyInterface;\n\n  // @IsNotEmpty()\n  // @IsString()\n  // readonly faculty: string;\n\n  // @IsNotEmpty()\n  // @IsArray()\n  // readonly topics: VideoCheckpointsInterface[];\n\n  // @IsOptional()\n  // @IsArray()\n  // readonly slides: string[];\n\n  // @IsOptional()\n  // @IsString()\n  // readonly slides: string;\n\n  // @IsOptional()\n  // @IsString()\n  // readonly notes: string;\n\n  // @IsOptional()\n  // @IsString()\n  // readonly suggestedBanner?: string;\n\n  // @IsNotEmpty()\n  // @IsDateString()\n  // readonly publishOn: Date;\n\n  // @IsNotEmpty()\n  // @IsDateString()\n  // readonly createdOn: Date;\n\n  // @IsOptional()\n  // @IsDateString()\n  // readonly modifiedOn?: Date;\n\n  // @IsNotEmpty()\n  // @IsObject()\n  // readonly createdBy: UserKeyInterface;\n\n  // @IsOptional()\n  // @IsObject()\n  // readonly modifiedBy?: UserKeyInterface;\n\n  // @IsNotEmpty()\n  // @IsObject()\n  // readonly flags: VideoFlagsInterface;\n\n}\n","import {\n  CourseInterface,\n  SyllabusInterface,\n  FlagsInterface,\n  UserKeyInterface,\n  VideoFlagsInterface,\n  VideoSubjectChapterInterface,\n} from '@application/api-interfaces';\nimport {\n  IsArray,\n  IsNotEmpty,\n  IsNumber,\n  IsObject,\n  IsOptional,\n  IsString,\n} from 'class-validator';\n\nexport class CreateVideoSubjectDto {\n\n  @IsNotEmpty()\n  @IsString()\n  readonly uuid: string;\n\n  //@IsNotEmpty()\n  @IsOptional()\n  @IsString()\n  readonly title: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  readonly order: number;\n\n  @IsNotEmpty()\n  // @IsArray()//cosmmented\n  @IsString()\n  readonly courses: CourseInterface[];\n\n  @IsNotEmpty()\n  // @IsArray() // commented\n  @IsString()\n  readonly syllabus: SyllabusInterface[];\n\n  @IsNotEmpty()\n  @IsArray()\n  readonly chapters: VideoSubjectChapterInterface[];\n\n  @IsNotEmpty()\n  @IsString()\n  readonly imgUrl?: string;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly flags: VideoFlagsInterface;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly createdOn: String;\n\n  @IsOptional()\n  @IsString()\n  readonly modifiedOn?: String;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly createdBy: UserKeyInterface;\n\n  @IsOptional()\n  @IsObject()\n  readonly modifiedBy?: UserKeyInterface;\n\n}\n","import { EntityInterface, TestAnswerInterface, UserKeyInterface, UserTestStatsInterface } from '@application/api-interfaces';\nimport { IsArray, IsDateString, IsNotEmpty, IsNumber, IsObject, IsOptional, IsString } from 'class-validator';\n\nexport class ReportErrorDTO {\n\n  @IsNotEmpty()\n  @IsString()\n  uuid: string;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly question: EntityInterface;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly course: EntityInterface;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly test: EntityInterface;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly user: EntityInterface;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly subject: EntityInterface;\n\n  @IsNotEmpty()\n  @IsArray()\n  readonly report: string[];\n\n  @IsNotEmpty()\n  @IsDateString()\n  readonly submittedOn: Date;\n\n}\n","import { EntityInterface, EntityStatusEnum } from '@application/api-interfaces';\nimport { IsDate, IsDateString, IsEnum, IsNotEmpty, IsNumber, IsObject, IsOptional, IsString } from 'class-validator';\n\nexport class StartTestDTO {\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly course: EntityInterface;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly test: EntityInterface;\n\n  @IsOptional()\n  @IsObject()\n  readonly subject: EntityInterface;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly category: EntityInterface;\n\n  @IsNotEmpty()\n  @IsEnum(EntityStatusEnum)\n  status: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  readonly totalTime: number;\n\n  @IsNotEmpty()\n  @IsDateString()\n  readonly expiryDate: Date;\n\n  @IsNotEmpty()\n  @IsDateString()\n  readonly startedAt: Date;\n\n}\n","import { EntityInterface, EntityStatusEnum } from '@application/api-interfaces';\nimport { IsDate, IsDateString, IsEnum, IsNotEmpty, IsNumber, IsObject, IsOptional, IsString } from 'class-validator';\n\nexport class StartTopicDTO {\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly course: EntityInterface;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly topic: EntityInterface;\n\n  @IsOptional()\n  @IsObject()\n  readonly subject: EntityInterface;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly chapter: EntityInterface;\n\n  @IsNotEmpty()\n  @IsEnum(EntityStatusEnum)\n  status: string;\n\n  @IsNotEmpty()\n  @IsDateString()\n  readonly startedAt: Date;\n\n}\n","import { EntityInterface, QuestionEntityInterface, EntityStatusEnum } from '@application/api-interfaces';\nimport { IsArray, IsDateString, IsEnum, IsNotEmpty, IsNumber, IsObject, IsOptional, IsString } from 'class-validator';\n\nexport class StopTestDTO {\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly course: EntityInterface;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly test: EntityInterface;\n\n  @IsOptional()\n  @IsObject()\n  readonly subject: EntityInterface;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly category: EntityInterface;\n\n  @IsNotEmpty()\n  @IsEnum(EntityStatusEnum)\n  status: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  readonly totalTime: number;\n\n  @IsNotEmpty()\n  @IsNumber()\n  readonly elapsedTime: number;\n\n  @IsNotEmpty()\n  @IsDateString()\n  readonly expiryDate: Date;\n\n  @IsNotEmpty()\n  @IsArray()\n  readonly questions: QuestionEntityInterface[];\n\n  @IsNotEmpty()\n  @IsDateString()\n  readonly stoppedAt: Date;\n\n}\n","import { EntityInterface, EntityStatusEnum, QuestionEntityInterface } from '@application/api-interfaces';\nimport { IsArray, IsDateString, IsEnum, IsNotEmpty, IsNumber, IsObject, IsOptional } from 'class-validator';\n\nexport class StopTopicDTO {\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly course: EntityInterface;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly topic: EntityInterface;\n\n  @IsOptional()\n  @IsObject()\n  readonly subject: EntityInterface;\n\n  @IsNotEmpty()\n  @IsObject()\n  readonly chapter: EntityInterface;\n\n  @IsNotEmpty()\n  @IsEnum(EntityStatusEnum)\n  status: string;\n\n  @IsNotEmpty()\n  @IsArray()\n  readonly questions: QuestionEntityInterface[];\n\n  @IsNotEmpty()\n  @IsDateString()\n  readonly stoppedAt: Date;\n\n}\n","import {\n  IsArray,\n  IsDateString,\n  IsEnum,\n  IsNotEmpty,\n  IsNumber,\n  IsObject,\n  IsOptional,\n  IsString,\n} from 'class-validator';\n\nimport {\n  UserKeyInterface,\n  FlagsInterface,\n  PearlsQueIdsInterface,\n  PeralSubjectInterface\n} from '@application/api-interfaces';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreatePearlsDto {\n  @IsNotEmpty()\n  @IsString()\n  readonly uuid: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly title: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly explaination: string;\n\n\n  @IsOptional()\n  @IsNumber()\n  number : number;\n\n@IsNotEmpty()\n@IsArray()\nreadonly queIds: PearlsQueIdsInterface[];\n\n@IsNotEmpty()\n@IsDateString()\n@ApiProperty({ example: '2020-11-09T19:53:53.032Z', description: 'Created On' })\nreadonly createdOn: Date;\n\n@IsOptional()\n@IsDateString()\n@ApiProperty({ example: '2020-11-12T19:53:53.032Z', description: 'Modified On' })\nreadonly modifiedOn?: Date;\n\n@IsNotEmpty()\n@IsObject()\n@ApiProperty({\n  example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n  description: 'UUID & Name of the user created it'\n})\nreadonly createdBy: UserKeyInterface\n\n@IsOptional()\n@IsObject()\n@ApiProperty({\n  example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n  description: 'UUID & Name of the user modified it'\n})\nreadonly modifiedBy?: UserKeyInterface;\n\n@IsNotEmpty()\n@IsObject()\nreadonly flags: FlagsInterface;\n}","import {\n    IsArray,\n    IsDateString,\n    IsEmail,\n    IsNotEmpty,\n    IsNumber,\n    IsObject,\n    IsOptional,\n    IsString,\n  } from 'class-validator';\n  \n  import {\n    FlagsInterface,\n    KeyInterface,\n    RoleInterface,\n    UserKeyInterface,\n  } from '@application/api-interfaces';\n  import { ApiProperty } from '@nestjs/swagger';\n  \n  export class CreateEmployeeDto {\n  \n    @IsNotEmpty()\n    @IsString()\n    @ApiProperty({ example: '0ba7596e-5087-4c72-887d-aaa730cdac23', description: 'Unique Identifier' })\n    uuid: string;\n  \n    @IsNotEmpty()\n    @IsString()\n    @ApiProperty({ example: 'Plato Architect', description: 'User name' })\n    readonly name: string;\n  \n    // @IsNotEmpty()\n    // @IsString()\n    // @ApiProperty({\n    //   example: 'STUDENT',\n    //   description: 'AWS S3/Cloudinary URL for the image'\n    // })\n    // readonly type: string;\n\n    @IsNotEmpty()\n    @IsString()\n    readonly role: RoleInterface[];\n  \n    @IsNotEmpty()\n    @IsDateString()\n    @ApiProperty({ example: '2020-11-09T19:53:53.032Z', description: 'User Date of Birth' })\n    readonly dob: Date;\n  \n    @IsOptional()\n    @IsString()\n    @ApiProperty({\n      example: 'http://img-url',\n      description: 'AWS S3/Cloudinary URL for the image'\n    })\n    readonly imgUrl?: string;\n  \n    @IsNotEmpty()\n    @IsNumber()\n    @ApiProperty({ example: 9999999990, description: 'User Mobile' })\n    readonly mobile: number;\n  \n    @IsNotEmpty()\n    @IsEmail()\n    @ApiProperty({ example: 'user@platononline.com', description: 'User Email' })\n    readonly email: string;\n  \n    @IsOptional()\n    @IsArray()\n    @ApiProperty({\n      example: [{ uuid: '3457596e-5087-4c72-887d-aaa730cdac23', title: 'Sample Course' }],\n      description: 'User Courses'\n    })\n    readonly courses: KeyInterface[];\n  \n    @IsOptional()\n    @IsArray()\n    @ApiProperty({\n      example: [{ uuid: '3457596e-5087-4c72-887d-aaa730cdac23', title: 'Full Package' }],\n      description: 'User Subscriptions'\n    })\n    readonly subscriptions?: KeyInterface[];\n  \n    @IsOptional()\n    @IsArray()\n    @ApiProperty({\n      example: [{ uuid: '3457596e-5087-4c72-887d-aaa730cdac23', title: 'Sample Organization' }],\n      description: 'User Organizations'\n    })\n    readonly organizations: KeyInterface[];\n  \n    @IsOptional()\n    @IsString()\n    @ApiProperty({ example: 'Plato College', description: 'User College' })\n    readonly college: string;\n  \n    @IsNotEmpty()\n    @IsString()\n    @ApiProperty({ example: 'qwewqeqwe', description: 'User password' })\n    password: string;\n  \n    @IsNotEmpty()\n    @IsString()\n    @ApiProperty({ example: 'MALE', description: 'User Gender' })\n    readonly gender: string;\n  \n    @IsNotEmpty()\n    @IsDateString()\n    @ApiProperty({ example: '2020-11-09T19:53:53.032Z', description: 'Created On' })\n    readonly createdOn: Date;\n  \n    @IsOptional()\n    @IsDateString()\n    @ApiProperty({ example: '2020-11-12T19:53:53.032Z', description: 'Modified On' })\n    readonly modifiedOn?: Date;\n  \n    @IsNotEmpty()\n    @IsObject()\n    @ApiProperty({\n      example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n      description: 'UUID & Name of the user created it'\n    })\n    readonly createdBy: UserKeyInterface;\n  \n    @IsOptional()\n    @IsObject()\n    @ApiProperty({\n      example: { uuid: '0ba7596e-5087-4c72-887d-aaa730cdac23', name: 'Krishna' },\n      description: 'UUID & Name of the user created it'\n    })\n    readonly modifiedBy?: UserKeyInterface;\n  \n    @IsNotEmpty()\n    @IsObject()\n    @ApiProperty({\n      example: { active: true, paid: true },\n      description: 'flags to operate on the entity'\n    })\n    readonly flags: FlagsInterface;\n  }\n  ","import {\n    IsEmail,\n    IsNotEmpty,\n    IsInt,\n    IsString,\n    IsEnum,\n    IsArray,\n    IsObject,\n    IsBoolean,\n    IsDate,\n    IsOptional,\n    IsDateString,\n    IsNumber,\n  } from 'class-validator';\n  \n  import {\n    FlagsInterface,\n    UserKeyInterface,\n  } from '@application/api-interfaces';\n\n  export class CreateUserTransactionsDTO {\n\n    @IsNotEmpty()\n    @IsString()\n    readonly uuid: string;\n\n    @IsNotEmpty()\n    @IsString()\n    readonly userId: string;\n\n    @IsOptional()\n    readonly transactionId: string;\n\n    @IsNotEmpty()\n    @IsString()\n    readonly subscriptionId: string;\n\n    @IsNotEmpty()\n    //@IsDate()\n    readonly dateOfPayment: Date;\n\n    @IsNotEmpty()\n    //@IsDate()\n    readonly expiryDate: Date;\n    \n    @IsNotEmpty()\n    @IsNumber()\n    readonly actualPrice: Number;\n\n    @IsOptional()\n    @IsNumber()\n    readonly discountPrice: Number;\n\n    @IsNotEmpty()\n    @IsNumber()\n    readonly finalPaidAmount: Number;\n\n    @IsOptional()\n    //@IsString()\n    readonly couponId: String;\n\n    @IsNotEmpty()\n    @IsString()\n    readonly paymentType: String;\n\n    @IsNotEmpty()\n    @IsString()\n    readonly modeOfPayment: String;\n\n    @IsOptional()\n    @IsString()\n    readonly filePath: String;\n\n    @IsNotEmpty()\n    @IsString()\n    readonly paymentStatus: String;\n\n    @IsOptional()\n    @IsString()\n    readonly razorpayOrderId: String;\n\n    @IsOptional()\n    @IsString()\n    readonly razorPayPaymentId: String;\n\n    @IsOptional()\n    @IsString()\n    readonly razoraySignature: String;\n\n    @IsOptional()\n    @IsString()\n    readonly paymentMessage: String;\n\n    @IsOptional()\n    @IsString()\n    readonly billNumber: String;\n\n    @IsOptional()\n    @IsString()\n    readonly chequeNumber: String;\n\n    @IsOptional()\n    //@IsDate()\n    readonly chequeDate: Date;\n\n    @IsOptional()\n    @IsString()\n    readonly bankName: String;\n\n    @IsOptional()\n    @IsString()\n    readonly referenceNumber: String;\n\n    @IsOptional()\n    @IsString()\n    readonly cardType: String;\n\n    @IsOptional()\n    @IsString()\n    readonly creditORdebitCard: String;\n\n    \n    @IsOptional()\n    @IsString()\n    mode_transactionNumber:String;\n\n    @IsOptional()\n    @IsString()\n    readonly upiId: String;\n\n    @IsNotEmpty()\n    @IsObject()\n    readonly createdBy: UserKeyInterface;\n\n    @IsOptional()\n    @IsDateString()\n    readonly modifiedOn?: Date;\n\n    @IsOptional()\n    @IsObject()\n    readonly modifiedBy?: UserKeyInterface;\n  }","import {\n    IsEmail,\n    IsNotEmpty,\n    IsInt,\n    IsString,\n    IsEnum,\n    IsArray,\n    IsObject,\n    IsBoolean,\n    IsDate,\n    IsOptional,\n    IsDateString,\n  } from 'class-validator';\n  \n  import {\n    FlagsInterface,\n    RoleSubModuleInterface,\n    UserKeyInterface,\n  } from '@application/api-interfaces';\n\n  export class CreateRoleValuesDTO {\n    @IsNotEmpty()\n    @IsString()\n    readonly uuid: string;\n  \n    @IsNotEmpty()\n    @IsString()\n    readonly title: string;\n\n    @IsNotEmpty()\n    @IsArray()\n    readonly subModules: RoleSubModuleInterface[];\n\n    @IsNotEmpty()\n    @IsDateString()\n    readonly createdOn: Date;\n\n    @IsOptional()\n    @IsDate()\n    readonly modifiedOn?: Date;\n\n    @IsNotEmpty()\n    @IsObject()\n    readonly createdBy: UserKeyInterface;\n\n    @IsOptional()\n    @IsObject()\n    readonly modifiedBy?: UserKeyInterface;\n\n    @IsNotEmpty()\n    @IsObject()\n    readonly flags: FlagsInterface;\n  }","import {\n    IsEmail,\n    IsNotEmpty,\n    IsInt,\n    IsString,\n    IsEnum,\n    IsArray,\n    IsObject,\n    IsBoolean,\n    IsDate,\n    IsOptional,\n    IsDateString,\n  } from 'class-validator';\n  \n  import {\n    FlagsInterface,\n    UserKeyInterface,\n  } from '@application/api-interfaces';\n\n  export class CreateRoleSubModulesDTO {\n    @IsNotEmpty()\n    @IsString()\n    readonly uuid: string;\n  \n    @IsNotEmpty()\n    @IsString()\n    readonly title: string;\n\n    @IsNotEmpty()\n    @IsDateString()\n    readonly createdOn: Date;\n\n    @IsOptional()\n    @IsDateString()\n    readonly modifiedOn?: Date;\n\n    @IsNotEmpty()\n    @IsObject()\n    readonly createdBy: UserKeyInterface;\n\n    @IsOptional()\n    @IsObject()\n    readonly modifiedBy?: UserKeyInterface;\n\n    @IsNotEmpty()\n    @IsObject()\n    readonly flags: FlagsInterface;\n  }","import {\n    IsEmail,\n    IsNotEmpty,\n    IsInt,\n    IsString,\n    IsEnum,\n    IsArray,\n    IsObject,\n    IsBoolean,\n    IsDate,\n    IsOptional,\n    IsDateString,\n  } from 'class-validator';\n  \n  import {\n    FlagsInterface,\n    UserKeyInterface,\n    rolePermissionsInterface\n  } from '@application/api-interfaces';\n\n  export class CreateRolesDTO {\n    @IsNotEmpty()\n    @IsString()\n    readonly uuid: string;\n  \n    @IsNotEmpty()\n    @IsString()\n    readonly title: string;\n\n    @IsNotEmpty()\n    @IsArray()\n    readonly rolePermissions: rolePermissionsInterface[];\n\n    @IsNotEmpty()\n    @IsDateString()\n    readonly createdOn: Date;\n\n    @IsOptional()\n    @IsDateString()\n    readonly modifiedOn?: Date;\n\n    @IsNotEmpty()\n    @IsObject()\n    readonly createdBy: UserKeyInterface;\n\n    @IsOptional()\n    @IsObject()\n    readonly modifiedBy?: UserKeyInterface;\n\n    @IsNotEmpty()\n    @IsObject()\n    readonly flags: FlagsInterface;\n  }","import {\n    IsEmail,\n    IsNotEmpty,\n    IsInt,\n    IsString,\n    IsEnum,\n    IsArray,\n    IsObject,\n    IsBoolean,\n    IsDate,\n    IsOptional,\n    IsDateString,\n    IsNumber,\n    isNotEmpty,\n  } from 'class-validator';\n  \n  import {\n      BankInterface,\n    FlagsInterface,\n    UserKeyInterface,\n  } from '@application/api-interfaces';\n\n  export class CreateAgentTransactionsDTO {\n\n    @IsNotEmpty()\n    @IsString()\n    readonly uuid: string;\n\n\n    @IsOptional()\n    readonly transactionId: string;\n\n\n    @IsNotEmpty()\n    //@IsDate()\n    readonly dateOfPayment: Date;\n\n    \n\n    @IsNotEmpty()\n    @IsNumber()\n    readonly paidAmount: Number;\n\n    @IsNotEmpty()\n    //@IsString()\n    readonly couponId: String;\n\n    @IsNotEmpty()\n    //@IsString()\n    readonly agent: String;\n\n\n    @IsNotEmpty()\n    @IsString()\n    readonly modeOfPayment: String;\n\n    @IsOptional()\n    @IsString()\n    readonly filePath: String;\n\n    @IsNotEmpty()\n    @IsString()\n    readonly paymentStatus: String;\n\n\n    @IsOptional()\n    @IsString()\n    readonly billNumber: String;\n\n    @IsOptional()\n    @IsString()\n    readonly chequeNumber: String;\n\n    @IsOptional()\n    //@IsDate()\n    readonly chequeDate: Date;\n\n    @IsNotEmpty()\n    @IsObject()\n    readonly bank: BankInterface;\n  \n\n    @IsOptional()\n    @IsString()\n    readonly referenceNumber: String;\n    \n    @IsOptional()\n    @IsString()\n    mode_transactionNumber:String;\n\n    @IsOptional()\n    @IsString()\n    readonly upiId: String;\n\n    @IsNotEmpty()\n    @IsObject()\n    readonly createdBy: UserKeyInterface;\n\n    @IsOptional()\n    @IsDateString()\n    readonly modifiedOn?: Date;\n\n    @IsOptional()\n    @IsObject()\n    readonly modifiedBy?: UserKeyInterface;\n  }","import {\n    IsArray,\n    IsDateString,\n    IsEnum,\n    IsNotEmpty,\n    IsNumber,\n    IsObject,\n    IsOptional,\n    IsString,\n  } from 'class-validator';\n  \n  import {\n    UserKeyInterface,\n    FlagsInterface,\n    PearlsQueIdsInterface,\n    \n    PeralInputSubjectInterface\n  } from '@application/api-interfaces';\n  import { ApiProperty } from '@nestjs/swagger';\n\n  export class CreatePearlSubjectsDto {\n    @IsNotEmpty()\n    @IsString()\n    readonly uuid: string;\n\n\n\n    @IsNotEmpty()\n    @IsArray()\n    readonly subject: PeralInputSubjectInterface[];\n    \n    @IsOptional()\n    // @IsDateString()\n    readonly createdOn: Date;\n\n    @IsOptional()\n    @IsDateString()\n    readonly modifiedOn?: Date;\n\n    @IsOptional()\n    // @IsObject()\n    readonly createdBy: UserKeyInterface;\n\n    @IsOptional()\n    @IsObject()\n    readonly modifiedBy?: UserKeyInterface;\n\n\n  }","import {\n    UserKeyInterface,\n  \n } from '@application/api-interfaces';\n import {\n   IsArray,\n   IsBoolean,\n   IsDateString,\n   IsNotEmpty,\n   IsNumber,\n   IsObject,\n   IsOptional,\n   IsString,\n } from 'class-validator';\n \n export class CreateSuggestedVideoDto {\n\n\n//  @IsNotEmpty()\n//  @IsString()\n//  readonly uuid: string;\n\n @IsNotEmpty()\n @IsString()\n readonly courseId: string;\n\n @IsNotEmpty()\n @IsString()\n readonly subjectId: string;\n\n @IsNotEmpty()\n @IsString()\n readonly chapterId: string;\n\n @IsNotEmpty()\n @IsString()\n readonly videoUuid: string;\n\n @IsNotEmpty()\n @IsBoolean()\n readonly status: boolean;\n\n @IsOptional()\n @IsDateString()\n readonly createdOn: Date;\n\n @IsOptional()\n @IsDateString()\n readonly modifiedOn?: Date;\n\n @IsOptional()\n @IsObject()\n readonly createdBy: UserKeyInterface;\n\n @IsOptional()\n @IsObject()\n readonly modifiedBy?: UserKeyInterface;\n\n }","import {\n    UserKeyInterface,\n  \n } from '@application/api-interfaces';\n import {\n   IsArray,\n   IsBoolean,\n   IsDateString,\n   IsNotEmpty,\n   IsNumber,\n   IsObject,\n   IsOptional,\n   IsString,\n } from 'class-validator';\n \n export class CreateSuggestedTestsDto {\n\n  //@IsNotEmpty()\n  //@IsString()\n // readonly uuid: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly courseId: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly categoryId: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly testUuid: string;\n\n  @IsNotEmpty()\n  @IsBoolean()\n  readonly status: boolean;\n\n  @IsOptional()\n  @IsDateString()\n  readonly createdOn: Date;\n\n  @IsOptional()\n  @IsDateString()\n  readonly modifiedOn?: Date;\n\n  @IsOptional()\n  @IsObject()\n  readonly createdBy: UserKeyInterface;\n\n  @IsOptional()\n  @IsObject()\n  readonly modifiedBy?: UserKeyInterface;\n\n}","import {\n    UserKeyInterface,\n  \n } from '@application/api-interfaces';\n import {\n   IsArray,\n   IsBoolean,\n   IsDateString,\n   IsNotEmpty,\n   IsNumber,\n   IsObject,\n   IsOptional,\n   IsString,\n } from 'class-validator';\n \n export class CreateSuggestedQbankDto {\n\n  @IsNotEmpty()\n  @IsString()\n  readonly courseId: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly subjectId: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly chapterId: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly qbankUuid: string;\n\n  @IsNotEmpty()\n  @IsBoolean()\n  readonly status: boolean;\n\n  @IsOptional()\n  @IsDateString()\n  readonly createdOn: Date;\n\n  @IsOptional()\n  @IsDateString()\n  readonly modifiedOn?: Date;\n\n  @IsOptional()\n  @IsObject()\n  readonly createdBy: UserKeyInterface;\n\n  @IsOptional()\n  @IsObject()\n  readonly modifiedBy?: UserKeyInterface;\n\n}","import {\n    UserKeyInterface,\n  \n } from '@application/api-interfaces';\n import {\n   IsArray,\n   IsBoolean,\n   IsDateString,\n   IsNotEmpty,\n   IsNumber,\n   IsObject,\n   IsOptional,\n   IsString,\n } from 'class-validator';\n \n export class CreateMCQOfTheDayDto {\n\n  @IsNotEmpty()\n  @IsString()\n  readonly courseId: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly subjectId: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly questionId: string;\n\n  @IsNotEmpty()\n  @IsBoolean()\n  readonly status: boolean;\n\n  @IsOptional()\n  @IsDateString()\n  readonly createdOn: Date;\n\n  @IsOptional()\n  @IsDateString()\n  readonly modifiedOn?: Date;\n\n  @IsOptional()\n  @IsObject()\n  readonly createdBy: UserKeyInterface;\n\n  @IsOptional()\n  @IsObject()\n  readonly modifiedBy?: UserKeyInterface;\n\n}","import {\n    UserKeyInterface,\n    objectInterface\n  \n } from '@application/api-interfaces';\n import {\n   IsArray,\n   IsBoolean,\n   IsDateString,\n   IsNotEmpty,\n   IsNumber,\n   IsObject,\n   IsOptional,\n   IsString,\n } from 'class-validator';\n \n export class CreatelogsDto {\n\n    @IsNotEmpty()\n    @IsString()\n    readonly moduleName: string;\n  \n    @IsNotEmpty()\n    @IsString()\n    readonly collectionName: string;\n  \n    @IsNotEmpty()\n    @IsString()\n    readonly documentId: string;\n\n    @IsNotEmpty()\n    @IsObject()\n    readonly request: objectInterface;\n\n    @IsOptional()\n    @IsDateString()\n    readonly createdOn: Date;\n  \n    @IsOptional()\n    @IsDateString()\n    readonly modifiedOn?: Date;\n  \n    @IsOptional()\n    @IsObject()\n    readonly createdBy: UserKeyInterface;\n  \n    @IsOptional()\n    @IsObject()\n    readonly modifiedBy?: UserKeyInterface;\n  \n\n }","import {\n    IsArray,\n    IsDateString,\n    IsNotEmpty,\n    IsObject,\n    IsOptional,\n    IsString,\n  } from 'class-validator';\n  \n  import {\n    UserKeyInterface,\n  } from '@application/api-interfaces';\n  import { ApiProperty } from '@nestjs/swagger';\n  \n  export class CreateDepartmentDto {\n  \n    @IsNotEmpty()\n    @IsString()\n    @ApiProperty({ example: '0ba7596e-5087-4c72-887d-aaa730cdac23', description: 'Unique Identifier' })\n    uuid: string;\n  \n    @IsNotEmpty()\n    @IsString()\n    @ApiProperty({ example: 'Plato Architect', description: 'User name' })\n    readonly title: string;\n  \n    @IsNotEmpty()\n    @IsArray()\n    employee: string[];\n  \n    @IsNotEmpty()\n    @IsArray()\n    hod: string;\n  \n    @IsNotEmpty()\n    @IsDateString()\n    readonly createdOn: Date;\n  \n    @IsOptional()\n    @IsDateString()\n    readonly modifiedOn?: Date;\n  \n    @IsNotEmpty()\n    @IsObject()\n    readonly createdBy: UserKeyInterface;\n  \n    @IsOptional()\n    @IsObject()\n    readonly modifiedBy?: UserKeyInterface;\n  \n    @IsNotEmpty()\n    @IsObject()\n    readonly flags: any;\n  }\n  ","import { TransformInterceptor } from './transform/transform.interceptor';\n\nexport const interceptors = [\n  TransformInterceptor,\n];\n\nexport * from './transform/transform.interceptor';","import { SharedApiModule } from '@application/shared-api';\nimport { Global, Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './services/auth.service';\nimport * as fromStrategies from './strategies';\n\n@Global()\n@Module({\n  imports: [\n    ConfigModule.forRoot({ envFilePath: '.env' }),\n    PassportModule.register({\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false,\n    }),\n    JwtModule.register({\n      secret: 'platoonlinesaasplatform',\n      signOptions: { expiresIn: '1d' },\n    }),\n    SharedApiModule,\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, ...fromStrategies.strategies],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n","import { JwtAuthGuard } from './jwt-auth.guard';\nimport { LocalAuthGuard } from './local-auth.guard';\n\nexport const guards = [\n  JwtAuthGuard,\n  LocalAuthGuard,\n];\n\nexport * from './jwt-auth.guard';\nexport * from './local-auth.guard';\n","module.exports = require(\"body-parser\");","module.exports = require(\"fs\");","module.exports = require(\"helmet\");","import { Module } from '@nestjs/common';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { TransformInterceptor } from '@application/shared-api';\nimport { environment } from '../../src/app/environments/environment';\nimport * as fromModules from './modules';\n\n@Module({\n  imports: [\n    MongooseModule.forRoot(environment.db),\n    ...fromModules.modules,\n  ],\n  providers: [\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: TransformInterceptor,\n    },\n  ],\n})\nexport class AppModule {}\n","export const environment = {\r\n    production: true,\r\n    db: 'mongodb+srv://indrasenapvt:bReXDjkV989RODUC@indra.fzglk.mongodb.net/indraeducations_db?retryWrites=true&w=majority',\r\n};\r\n\r\n\r\n// require('dotenv').config();\r\n\r\n\r\n\r\n// export const environment = {\r\n    \r\n//     production: process.env.PRODUCTION,\r\n//     db: process.env.DB_URL\r\n\r\n// };","import { NotificationsModule } from './notifications/notifications.module';\nimport { BannersModule } from './banners/banners.module';\nimport { TagsModule } from './tags/tags.module';\nimport { CouponsModule } from './coupons/coupon.module';\nimport { CoursesModule } from './courses/courses.module';\nimport { FacultyModule } from './faculty/faculty.module';\nimport { OrganizationsModule } from './organizations/organizations.module';\nimport { PermissionsModule } from './permissions/permissions.module';\nimport { PortalModule } from './portal/portal.module';\nimport { QBankModule } from './q-bank/q-bank.module';\nimport { QuestionsModule } from './questions/questions.module';\nimport { SampleModule } from './sample/sample.module';\nimport { SubscriptionsModule } from './subscriptions/subscriptions.module';\nimport { SyllabusModule } from './syllabus/syllabus.module';\nimport { TestSeriesModule } from './test-series/test-series.module';\nimport { ManageUsersModule } from './users/users.module';\nimport { VideoCipherModule } from './video-cipher/video-cipher.module';\nimport { VideosModule } from './videos/videos.module';\nimport { PearlsModule } from './pearls/pearls.module';\nimport { ManageEmployeeModule } from './employee/employee.module';\nimport { UserTransactionsModule } from './user-transactions/user-transactions.module';\nimport { RoleValuesModule } from './role-values/role-values.module';\nimport { RoleSubModulesModule } from './role-submodules/role-submodules.module';\nimport { RolesModule } from './roles/roles.module';\nimport { AgentTransactionsModule } from './agent-transactions/agent-transactions.module';\nimport { PearlSubjectsModule } from './pearl-subjects/pearl-subjects.module';\nimport { SuggestedVideosModule } from './suggested-videos/suggested-videos.module';\nimport { SuggestedTestsModule } from './suggested-tests/suggested-tests.module';\nimport { SuggestedQbankModule } from './suggested-qbank/suggested-qbank.module';\nimport { MCQOfTheDayModule } from './mcq-of-the-day/mcq-of-the-day.module';\nimport { LogsModule } from './logs/logs.module';\nimport { PortalFeedbackModule } from './feedback/feedback.module';\n\nimport { ManageDepartmentModule } from './department/department.module';\n\n\nexport const modules = [\n  BannersModule,\n  TagsModule,\n  CouponsModule,\n  CoursesModule,\n  FacultyModule,\n  ManageUsersModule,\n  ManageEmployeeModule,\n  OrganizationsModule,\n  PortalModule,\n  PermissionsModule,\n  QBankModule,\n  QuestionsModule,\n  SampleModule,\n  SubscriptionsModule,\n  SyllabusModule,\n  VideosModule,\n  TestSeriesModule,\n  VideoCipherModule,\n  PearlsModule,\n  UserTransactionsModule,\n  RoleValuesModule,\n  RoleSubModulesModule,\n  RolesModule,\n  AgentTransactionsModule,\n  PearlSubjectsModule,\n  SuggestedVideosModule,\n  SuggestedTestsModule,\n  SuggestedQbankModule,\n  MCQOfTheDayModule,\n  NotificationsModule,\n  PortalFeedbackModule,\n  LogsModule,\n  ManageDepartmentModule\n];\n\nexport * from './coupons/coupon.module';\nexport * from './courses/courses.module';\nexport * from './permissions/permissions.module';\nexport * from './portal/portal.module';\nexport * from './q-bank/q-bank.module';\nexport * from './subscriptions/subscriptions.module';\nexport * from './organizations/organizations.module';\nexport * from './users/users.module';\nexport * from './sample/sample.module';\nexport * from './courses/courses.module';\nexport * from './syllabus/syllabus.module';\nexport * from './test-series/test-series.module';\nexport * from './questions/questions.module';\nexport * from './video-cipher/video-cipher.module';\nexport * from './videos/videos.module';\nexport * from './tags/tags.module';\nexport * from './pearls/pearls.module';\nexport * from './user-transactions/user-transactions.module';\nexport * from './role-values/role-values.module';\nexport * from './role-submodules/role-submodules.module';\nexport * from './roles/roles.module';\nexport * from './agent-transactions/agent-transactions.module';\nexport * from './pearl-subjects/pearl-subjects.module';\nexport * from './suggested-videos/suggested-videos.module';\nexport * from './suggested-tests/suggested-tests.module';\nexport * from  './suggested-qbank/suggested-qbank.module';\nexport * from './mcq-of-the-day/mcq-of-the-day.module';\nexport * from './notifications/notifications.module';\nexport * from './logs/logs.module';\nexport * from './feedback/feedback.module';\nexport * from './department/department.module';","module.exports = require(\"@nestjs/config\");","import { JwtStrategy } from './jwt-strategy';\nimport { LocalStrategy } from './local-strategy';\n\nexport const strategies = [\n  LocalStrategy,\n  JwtStrategy,\n];\n\nexport * from './jwt-strategy';\nexport * from './local-strategy';\n","module.exports = require(\"passport-local\");","import { JwtAuthGuard } from '@application/auth';\nimport { NotificationService } from '@application/shared-api';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n  Req, Res, Request\n} from '@nestjs/common';\nimport * as uuid from 'uuid';\n\n@Controller('notifiations')\nexport class NotificationsController {\n  constructor(\n    private _messagingService: NotificationService\n  ) { }\n\n  @UseGuards(JwtAuthGuard)\n  @Post('send-notification')\n  async sendNotification(@Body() body, @Request() request): Promise<any> {\n    const employee = request.user;\n\n    try {\n      var data = await this._messagingService.sendNotification(body, employee)\n      return data;\n    } catch (e) {\n      return e;\n    }\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get()\n  async findAll(@Request() request) {\n    const employee = request.user;\n\n    return this._messagingService.findAll(employee);\n  }\n  @Post('schedule-notification')\n  async scheduleNotification(@Body() body): Promise<any> {\n    try {\n      var data = await this._messagingService.scheduleNotification(body)\n      return data;\n    } catch (e) {\n      return e;\n    }\n  }\n\n  @Get('send-schedule-notification')\n  async sendScheduleNotification(@Body() body): Promise<any> {\n    try {\n      var data = await this._messagingService.sendScheduleNotification(body)\n      return data;\n    } catch (e) {\n      return e;\n    }\n  }\n\n  \n\n  @Get('send-alert-expired-subscription')\n  async sendAlertExpiredSubscription(@Body() body): Promise<any> {\n    try {\n      var data = await this._messagingService.sendAlertExpiredSubscription(body)\n      return data;\n    } catch (e) {\n      return e;\n    }\n  }\n\n  @Get('send-subscription-expire-alert')\n  async sendSubscriptionExpireAlert(@Body() body): Promise<any> {\n    try {\n      var data = await this._messagingService.sendSubscriptionExpireAlert(body)\n      return data;\n    } catch (e) {\n      return e;\n    }\n  }\n  @Post('searchDateFilter')\n  async getNotificationsDateFilter( @Body() transactionsInterface: any){\n\n    return this._messagingService.getNotificationsDateFilter(transactionsInterface);\n  }\n  @Get('view-notification/:id')\n  getNotificationById(\n      @Param('id')\n      id: string\n  ) {\n      return this._messagingService.getNotificationById(id);\n  }\n\n\n \n  @Delete(':id')\n  deleteByUuid(\n      @Param('id')\n      id: string\n  ) {\n      return this._messagingService.deleteByUuid(id);\n  }\n}\n","import { AuthModule } from '@application/auth';\nimport { BannerSchema, SharedApiModule } from '@application/shared-api';\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { BannersController } from './banners.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: 'Banner',\n        schema: BannerSchema,\n      },\n    ]),\n    SharedApiModule,\n    AuthModule,\n  ],\n  controllers: [BannersController],\n})\nexport class BannersModule {}\n","import { BannerInterface } from '@application/api-interfaces';\nimport { JwtAuthGuard } from '@application/auth';\nimport { MongoError } from 'mongodb';\nimport {\n  Banner,\n  BannersService,\n  CreateBannerDTO,\n} from '@application/shared-api';\nimport {\n  ArgumentsHost,\n  Body,\n  Controller,\n  Delete,\n  ExceptionFilter,\n  Get,\n  Param,\n  Post,\n  Put,\n  Request,\n  UseFilters,\n  UseGuards,\n} from '@nestjs/common';\n\nexport class MongoFilter implements ExceptionFilter {\n  catch(exception: MongoError, host: ArgumentsHost) {\n    const response = host.switchToHttp().getResponse();\n    if (exception.code === 11000) {\n      response.status(400).json({ message: 'Success.' });\n    } else {\n      response.status(500).json({ message: 'The input Order is already taken, please enter a new one' });\n    }\n  }\n}\n\n@Controller('banners')\nexport class BannersController {\n  constructor(private bannersService: BannersService) {}\n\n  @UseGuards(JwtAuthGuard)\n // @UseFilters(MongoFilter)\n  @Post()\n  async add(@Body() createBannersDto: CreateBannerDTO) {\n    return this.bannersService.create(createBannersDto);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get()\n  async findAll(@Request() request): Promise<Banner[]> {\n    const employee = request.user;\n\n    return this.bannersService.findAll(employee);\n  }\n\n  //@UseGuards(JwtAuthGuard)\n  @Get(':uuid')\n  findOne(\n    @Param('uuid')\n    uuid: string\n  ) {\n    return this.bannersService.findByUuid(uuid);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Delete(':uuid')\n  deleteByUuid(\n    @Param('uuid')\n    uuid: string\n  ) {\n    return this.bannersService.deleteByUuid(uuid);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Put(':uuid')\n  editByUuid(\n    @Param('uuid')\n    uuid: string,\n    @Body() banner: BannerInterface\n  ) {\n    return this.bannersService.editBannerByUuid(uuid, banner);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('dashboard/count')\n  async dashboardCount(@Request() request) {\n    const employee = request.user;\n\n    return this.bannersService.dashboardCount(employee);\n  }\n}\n\n\n","import { TagsInterface } from '@application/api-interfaces';\nimport { JwtAuthGuard } from '@application/auth';\nimport {\n  Tags,\n  TagsService,\n  CreateTagsDTO,\n} from '@application/shared-api';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\n\n@Controller('tags')\nexport class TagsController {\n    constructor(private tagsService: TagsService) {}\n  \n    //@UseGuards(JwtAuthGuard)\n    @Post()\n    async add(@Body() createTagsDto: CreateTagsDTO) {\n      return this.tagsService.create(createTagsDto);\n    }\n\n  //@UseGuards(JwtAuthGuard)\n  @Get()\n  async findAll(): Promise<Tags[]> {\n    return this.tagsService.findAll();\n  }\n\n  @Get('activeTags')\n    async activeTags() {\n      return this.tagsService.getActiveTags();\n    }\n\n  //@UseGuards(JwtAuthGuard)\n  @Get(':uuid')\n  findOne(\n    @Param('uuid')\n    uuid: string\n  ) {\n    return this.tagsService.findByUuid(uuid);\n  }\n\n // @UseGuards(JwtAuthGuard)\n  @Delete(':uuid')\n  deleteByUuid(\n    @Param('uuid')\n    uuid: string\n  ) {\n    return this.tagsService.deleteByUuid(uuid);\n  }\n\n  //@UseGuards(JwtAuthGuard)\n  @Put(':uuid')\n  editByUuid(\n    @Param('uuid')\n    uuid: string,\n    @Body() tags: TagsInterface\n  ) {\n    return this.tagsService.editTagByUuid(uuid, tags);\n  }\n\n}","import { CouponInterface } from '@application/api-interfaces';\nimport { JwtAuthGuard } from '@application/auth';\nimport {\n  Coupon,\n  CouponsService,\n  CreateCouponDTO,\n} from '@application/shared-api';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n  Request\n} from '@nestjs/common';\n\n@Controller('coupons')\nexport class CouponController {\n\n  constructor(\n    private couponsService: CouponsService,\n  ) {}\n\n  @UseGuards(JwtAuthGuard)\n  @Post()\n  async add(@Body() createCouponDto: CreateCouponDTO) {\n\n    return this.couponsService.create(createCouponDto);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get()\n  async findAll(@Request() request) {\n      const employee = request.user;\n    return this.couponsService.findAll(employee);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get(':couponUuid')\n  findOne(\n    @Param('couponUuid')\n    couponUuid: string\n  ) {\n    return this.couponsService.findByUuid(couponUuid);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Delete(':couponUuid')\n  deleteByUuid(\n    @Param('couponUuid')\n    couponUuid: string\n  ) {\n    return this.couponsService.deleteByUuid(couponUuid);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Put(':couponUuid')\n  editByUuid(\n    @Param('couponUuid')\n    couponUuid: string,\n    @Body() coupon: CouponInterface\n  ) {\n    return this.couponsService.editCouponByUuid(couponUuid, coupon);\n  }\n\n  //@UseGuards(JwtAuthGuard)\n  @Get('getCouponsByAgentId/:agentId')\n  getCouponsByAgentId(\n    @Param('agentId')\n    agentId: string\n  ) {\n    return this.couponsService.getCouponsByAgentId(agentId);\n  }\n}\n","import {\n  CourseInterface,\n  SyllabusInterface,\n} from '@application/api-interfaces';\nimport { JwtAuthGuard } from '@application/auth';\nimport {\n  Course,\n  CoursesService,\n  CreateCourseDTO,\n} from '@application/shared-api';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n  Request\n} from '@nestjs/common';\n@Controller('courses')\nexport class CoursesController {\n\n  constructor(private courseService: CoursesService) {}\n\n  @UseGuards(JwtAuthGuard)\n  @Post()\n  async createCourse(@Body() createCourseDto: CreateCourseDTO) {\n    return this.courseService.create(createCourseDto);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get()\n  async findAll(@Request() request): Promise<Course[]> {\n    const employee = request.user;\n    return this.courseService.findAll(employee);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('getActiveCourses')\n  async getActiveCourses(@Request() request): Promise<Course[]> {\n    const employee = request.user;\n    return this.courseService.getActiveCourses(employee);\n  }\n\n  @Get('test-series/active')\n  async getTestSeriesActiveCourses(): Promise<Course[]> {\n    return this.courseService.getTestSeriesActiveCourses();\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('byQBank')\n  async findAllQBankCourses(): Promise<Course[]> {\n    return this.courseService.findAllQBankCourses();\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('byVideos')\n  async findAllVideoCourses(): Promise<Course[]> {\n    return this.courseService.findAllVideoCourses();\n  }\n\n  //@UseGuards(JwtAuthGuard)\n  @Get(':uuid')\n  findOne(\n    @Param('uuid')\n    uuid: string\n  ) {\n    return this.courseService.findByUuid(uuid);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Delete(':uuid')\n  deleteByUuid(\n    @Param('uuid')\n    uuid: string\n  ) {\n    return this.courseService.deleteByUuid(uuid);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Put(':uuid')\n  editByUuid(\n    @Param('uuid')\n    uuid: string,\n    @Body() course: CourseInterface\n  ) {\n    return this.courseService.editCourseByUuid(course);\n  }\n\n\n\n  @Post('getTestSeriessubjects')\n  async findTestSeriesSubjectsByCourse(@Body() request: any): Promise<Course[]> {\n\n    return this.courseService.findTestSeriesSubjectsByCourse(request);\n  }\n\n  @Post('getqbanksubjects')\n  async getqbanksubjects(@Body() request: any) : Promise<Course[]>{\n\n    return this.courseService.getqbanksubjects(request);\n  }\n  @Post('getvideoubjects')\n  async getVideosubjects(@Body() request: any) : Promise<Course[]>{\n\n    return this.courseService.getVideosubjects(request);\n  }\n  @Post('getspqbanksubjects')\n  async getspqbanksubjects(@Body() request: any) : Promise<Course[]>{\n\n    return this.courseService.getspqbanksubjects(request);\n  }\n\n  @Post('getCouseSubjects')\n  async getCouseSubjects(@Body() request: any){\n    return this.courseService.getCouseSubjects(request);\n  }\n}\n","import { AuthModule } from '@application/auth';\nimport { FacultySchema, SharedApiModule } from '@application/shared-api';\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { FacultyController } from './faculty.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: 'Faculty',\n        schema: FacultySchema,\n      },\n    ]),\n    SharedApiModule,\n    AuthModule,\n  ],\n  controllers: [FacultyController],\n})\nexport class FacultyModule {}\n","import { FacultyInterface } from '@application/api-interfaces';\nimport { JwtAuthGuard } from '@application/auth';\nimport {\n  CreateFacultyDTO,\n  Faculty,\n  FacultyService,\n} from '@application/shared-api';\nimport { CreateUserDto, UsersService } from '@application/shared-api';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport * as uuid from 'uuid';\n\n@Controller('faculty')\nexport class FacultyController {\n  constructor(\n    private facultyService: FacultyService,\n    private userService: UsersService\n  ) {}\n\n  @UseGuards(JwtAuthGuard)\n  @Post()\n  async add(@Body() createFacultyDto: CreateFacultyDTO) {\n    // const user: CreateUserDto = {\n    //   uuid: uuid.v4(),\n    //   name: createFacultyDto.name,\n    //   type: 'FACULTY',\n    //   dob: new Date(),\n    //   mobile: 1234567890,\n    //   otp: 123456,\n    //   email: null,\n    //   courses: createFacultyDto.courses,\n    //   organizations: [],\n    //   college: '',\n    //   createdOn: createFacultyDto.createdOn,\n    //   createdBy: createFacultyDto.createdBy,\n    //   password: '123456',\n    //   gender: createFacultyDto.gender,\n    //   flags: createFacultyDto.flags,\n    // };\n\n    // this.userService.addUser(user);\n\n    return this.facultyService.create(createFacultyDto);\n  }\n\n  //@UseGuards(JwtAuthGuard)\n  @Get()\n  async findAll(): Promise<Faculty[]> {\n    return this.facultyService.findAll();\n  }\n\n  @Get('faculty/active')\n  async getFaculties(): Promise<Faculty[]> {\n    return this.facultyService.getFaculties();\n  }\n\n  //@UseGuards(JwtAuthGuard)\n  @Get(':facultyUuid')\n  findOne(\n    @Param('facultyUuid')\n    facultyUuid: string\n  ) {\n    return this.facultyService.findByUuid(facultyUuid);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Delete(':facultyUuid')\n  deleteByUuid(\n    @Param('facultyUuid')\n    facultyUuid: string\n  ) {\n    return this.facultyService.deleteByUuid(facultyUuid);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Put(':facultyUuid')\n  editByUuid(\n    @Param('facultyUuid')\n    facultyUuid: string,\n    @Body() faculty: FacultyInterface\n  ) {\n    return this.facultyService.editFacultyByUuid(facultyUuid, faculty);\n  }\n}\n","import { OrganizationsController } from './organizations.controller';\nimport { CoursesController } from './courses.controller';\n\nexport const controllers = [OrganizationsController, CoursesController];\n\nexport * from './organizations.controller';\nexport * from './courses.controller';\n","import { AboutInterface } from '@application/api-interfaces';\nimport { JwtAuthGuard } from '@application/auth';\nimport { AboutUs, AboutUsService, CreateAboutUsDTO } from '@application/shared-api';\nimport { Body, Controller, Get, Post, Put, UseGuards } from '@nestjs/common';\n\n@Controller('portal/about')\nexport class AboutUsController {\n\n  constructor(\n    private aboutUsService: AboutUsService,\n  ) {}\n\n  @UseGuards(JwtAuthGuard)\n  @Post()\n  async createAboutUsPage(@Body() payload: CreateAboutUsDTO) {\n\n    return this.aboutUsService.createAboutUsPage(payload);\n\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Put()\n  updateAboutUsPage(\n    @Body() payload: AboutInterface\n  ) {\n    return this.aboutUsService.updateAboutUsPage(payload);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get()\n  getAboutUsPage(): Promise<AboutUs[]> {\n    return this.aboutUsService.getAboutUs();\n  }\n\n}\n","import { CareerInterface } from '@application/api-interfaces';\nimport { JwtAuthGuard } from '@application/auth';\nimport {\n  Career,\n  CareersService,\n  CreateJobDTO,\n} from '@application/shared-api';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\n\n@Controller('portal/careers')\nexport class CareersController {\n\n  constructor(\n    private careersService: CareersService,\n  ) {}\n\n  @UseGuards(JwtAuthGuard)\n  @Post()\n  async addJob(@Body() createJobDto: CreateJobDTO) {\n    return this.careersService.createJob(createJobDto);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get()\n  async findAll(): Promise<Career[]> {\n    return this.careersService.findAll();\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get(':jobUuid')\n  findOne(\n    @Param('jobUuid')\n    jobUuid: string\n  ) {\n    return this.careersService.findOne(jobUuid);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Delete(':jobUuid')\n  deleteByUuid(\n    @Param('jobUuid')\n    jobUuid: string\n  ) {\n    return this.careersService.deleteOne(jobUuid);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Put(':jobUuid')\n  editByUuid(\n    @Body() career: CareerInterface\n  ) {\n    return this.careersService.updateOne(career);\n  }\n}\n","import { JwtAuthGuard } from '@application/auth';\nimport { UserMessagesService } from '@application/shared-api';\nimport { Controller, Get, UseGuards } from '@nestjs/common';\n\n@Controller('portal/messages')\nexport class ContactUsController {\n\n  constructor(\n    private userMsg: UserMessagesService,\n  ) {}\n\n  @UseGuards(JwtAuthGuard)\n  @Get()\n  async getAllMessages() {\n\n    return this.userMsg.findAll();\n\n  }\n\n}\n","import { QBankInterface } from '@application/api-interfaces';\nimport { JwtAuthGuard } from '@application/auth';\nimport { CreateQBankSubjectDto, QBankSubject, QbankSubjectService, LogsService } from '@application/shared-api';\nimport { Body, Controller, Delete, Get, Param, Post, Put, UseGuards, Request } from '@nestjs/common';\nimport { ApiOperation, ApiResponse } from '@nestjs/swagger';\n\n@Controller('qbank/subjects')\nexport class QBankSubjectController {\n\n  constructor(private qbankService: QbankSubjectService,\n    private logsService: LogsService) { }\n\n  // @UseGuards(JwtAuthGuard)\n  @Post()\n  async createQBank(@Body() createQBankSubjectDTO: CreateQBankSubjectDto) {\n    let result = this.qbankService.create(createQBankSubjectDTO);\n    let logs_request = {\n      'moduleName': 'QbankSubjects',\n      'collectionName': 'QbankSubjects',\n      'request': createQBankSubjectDTO,\n      'documentId': (await result)._id,\n      'createdOn': createQBankSubjectDTO.createdOn,\n      'createdBy': createQBankSubjectDTO.createdBy,\n    };\n    console.log('logs_request', logs_request);\n    const logs = this.logsService.addlogs(logs_request);\n    return result;\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get()\n  async findAll(@Request() request): Promise<QBankSubject[]> {\n    const employee = request.user;\n    return this.qbankService.findAll(employee);\n  }\n\n  // @UseGuards(JwtAuthGuard)\n  @Get('perals/qbankSubjects')\n  async getQbankSubjects(): Promise<QBankSubject[]> {\n    return this.qbankService.getQbankSubjects();\n  }\n\n  // @UseGuards(JwtAuthGuard)\n  @Get(':uuid')\n  findOne(\n    @Param('uuid')\n    uuid: string\n  ) {\n    return this.qbankService.findByUuid(uuid);\n  }\n\n  //@UseGuards(JwtAuthGuard)\n  @ApiOperation({ summary: 'Fetch QBanks Subjects by Course Id' })\n  @ApiResponse({\n    status: 200,\n    description: 'QBanks Subjects Fetched Successfully',\n    type: [QBankSubject],\n  })\n\n  @Get('courses/:id')\n  async findByCourse(@Param('id') courseId: string): Promise<QBankSubject[]> {\n    return this.qbankService.findByCourse(courseId);\n  }\n\n  //@UseGuards(JwtAuthGuard)\n  @Delete(':uuid')\n  deleteByUuid(\n    @Param('uuid')\n    uuid: string\n\n  ) {\n    return this.qbankService.deleteByUuid(uuid);\n  }\n\n  @Delete('qbanksubjects/:uuid/tests/:topicUuid')\n  deleteByTestUuid(\n    @Param('uuid')\n    uuid: string,\n    @Param('topicUuid')\n    topicUuid: string\n  ) {\n    return this.qbankService.deleteByTestUuid(uuid, topicUuid);\n  }\n  @Get('qbsubject/:qbuuid/chapter/:cuuid/topic/:tuuid')\n  // @Get('qbsubject/:qbuuid/topic/:tuuid')\n  async findQbQuestions(\n    @Param('qbuuid') qbuuid: string,\n    @Param('cuuid') cuuid: string,\n    @Param('tuuid') tuuid: string\n  ): Promise<QBankSubject[]> {\n    return this.qbankService.findQbQuestions(qbuuid, cuuid, tuuid);\n    // return this.qbankService.findQbQuestions(qbuuid,tuuid);\n\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Put(':uuid')\n  async editByUuid(\n    @Param('uuid')\n    uuid: string,\n    @Body() test: QBankInterface\n  ) {\n    let result: any;\n    result = await this.qbankService.editByUuid(test);\nconsole.log('resultresult123456',result);\n\n    let logs_request = {\n      'moduleName': 'QbankSubjects',\n      'collectionName': 'QbankSubjects',\n      'request': test,\n      'documentId': result._id,\n      'modifiedOn': test.modifiedOn,\n      'modifiedBy': test.modifiedBy,\n    };\n    console.log('logs_request', logs_request);\n    const logs = this.logsService.addlogs(logs_request);\n    return result;\n  }\n\n  @Delete('qbsubjects/:uuid/chapters/:cUuid/tests/:topicUuid/que/:queUuid')\n  deleteQueByUuid(\n    @Param('uuid')\n    uuid: string,\n    @Param('cUuid')\n    cUuid: string,\n    @Param('topicUuid')\n    topicUuid: string,\n    @Param('queUuid')\n    queUuid: string\n  ) {\n    return this.qbankService.deleteQueByUuid(uuid, cUuid, topicUuid, queUuid);\n  }\n  @Post('copyQBQuestions')\n  async copyQBQuestions(\n    //@Param('uuid')\n    //uuid: string,\n    @Body() qbquestions: QBankInterface) {\n    return this.qbankService.copyQBQuestions(qbquestions);\n  }\n  @Post('copyQBTopics')\n  async copyQBTopics(\n    @Body() qbtopics: QBankInterface) {\n    return this.qbankService.copyQBTopics(qbtopics);\n  }\n\n  @Post('copyQBChapter')\n  async copyQBChapter(\n    @Body() qbchapters: QBankInterface) {\n    return this.qbankService.copyQBChapter(qbchapters);\n  }\n\n  @Post('moveQBQuestions')\n  moveQBQuestions(\n    // @Param('uuid')\n    // uuid: string,\n    @Body() moveqbquestions: QBankInterface\n  ) {\n    return this.qbankService.moveqbquestions(moveqbquestions);\n  }\n\n  @Post('dragAndDropQBQuestions')\n  dragAndDropQBQuestions(\n    // @Param('uuid')\n    // uuid: string,\n    @Body() dragAndDropQBQuestions: QBankInterface\n  ) {\n    return this.qbankService.dragAndDropQBQuestions(dragAndDropQBQuestions);\n  }\n\n  @Post('dragAndDropQBTopics')\n  dragAndDropQBTopics(\n    @Body() dragAndDropQBTopics: any\n  ) {\n    return this.qbankService.dragAndDropQBTopics(dragAndDropQBTopics);\n  }\n  @Post('dragAndDropQBChapters')\n  dragAndDropQBChapters(\n    @Body() dragAndDropQBChapters: any\n  ) {\n    return this.qbankService.dragAndDropQBChapters(dragAndDropQBChapters);\n  }\n  @Post('dragAndDropQBSubjects')\n  dragAndDropQBSubjects(\n    @Body() dragAndDropQBChapters: any\n  ) {\n    return this.qbankService.dragAndDropQBSubjects(dragAndDropQBChapters);\n  }\n\n  @Post('moveQBTopics')\n  moveQBTopics(\n    // @Param('uuid')\n    // uuid: string,\n    @Body() moveqbtopics: QBankInterface\n  ) {\n    return this.qbankService.moveqbtopics(moveqbtopics);\n  }\n  @Post('moveQBChapters')\n  moveQBChapters(\n    // @Param('uuid')\n    // uuid: string,\n    @Body() moveqbchaptrers: QBankInterface\n  ) {\n    return this.qbankService.moveqbchaptrers(moveqbchaptrers);\n  }\n\n  @Post('deleteQBChapters')\n  async deleteQBChapters(\n    @Body() qbchapters: QBankInterface) {\n    return this.qbankService.deleteQBChapters(qbchapters);\n  }\n\n  @Post('deleteQBQuestions')\n  async deleteQBQuestions(\n    @Body() qbquestions: QBankInterface) {\n    return this.qbankService.deleteQBQuestions(qbquestions);\n  }\n  @Post('deleteQBTopics')\n  async deleteMultipleTopics(@Body() qbchapters: QBankInterface) {\n    return this.qbankService.deleteMultipleTopics(qbchapters);\n  }\n\n\n}\n","import { QBankInterface } from '@application/api-interfaces';\nimport { JwtAuthGuard } from '@application/auth';\nimport { CreateQBankDTO, QBank, QbankService, QBankSubject, QbankSubjectService } from '@application/shared-api';\nimport { Body, Controller, Delete, Get, Param, Post, Put, UseGuards } from '@nestjs/common';\nimport { ApiOperation, ApiResponse } from '@nestjs/swagger';\n\n@Controller('qbank')\nexport class QBankController {\n\n  constructor(\n    private qbankService: QbankService,\n    private qBankSubjectService: QbankSubjectService,\n  ) {}\n\n  @Post('subjects/:uuid/tests')\n  async createQBank(@Body() createQBanksDTO: CreateQBankDTO) {\n    return this.qBankSubjectService.addSubjectTopic(createQBanksDTO);\n  }\n\n  @Post('subjects/bulkTests')\n  async createBulkTopics(@Body() response: any) {\n    return this.qBankSubjectService.createBulkTopics(response);\n  }\n\n  // @UseGuards(JwtAuthGuard)\n  @Get('subjects/:uuid/chapter/:capterUuid/tests/:topicUuid')\n  findTopicByUuid(\n    @Param('uuid')\n    uuid: string,\n    @Param('capterUuid')\n    capterUuid: string,\n    @Param('topicUuid')\n    topicUuid: string\n  ) {\n    return this.qbankService.findByUuid(uuid,capterUuid, topicUuid);\n  }\n\n  // @UseGuards(JwtAuthGuard)\n  @ApiOperation({ summary: 'Fetch QBanks by Course Id' })\n  @ApiResponse({\n    status: 200,\n    description: 'QBanks Fetched Successfully',\n    type: [QBank],\n  })\n  @Get('courses/:id')\n  async findByCourse(@Param('id') courseId: string): Promise<QBankSubject[]> {\n    return this.qBankSubjectService.findByCourse(courseId);\n  }\n  @Post('subjectsByCourseIds')\n  async findSubjectsByCoueseId( @Body() coursesarr: any) {\n    return this.qBankSubjectService.findSubjectsByCoueseIds(coursesarr);\n  }\n\n  @Delete('subjects/:uuid/tests/:topicUuid')\n  deleteByUuid(\n    @Param('uuid')\n    uuid: string,\n    @Param('topicUuid')\n    topicUuid: string\n  ) {\n    return this.qbankService.deleteByUuid(uuid, topicUuid);\n  }\n\n  @Put('subjects/:uuid/tests/:topicUuid')\n  editByUuid(\n    @Param('uuid')\n    uuid: string,\n    @Body() test: QBankInterface\n  ) {\n    return this.qbankService.editByUuid(test);\n  }\n\n  @Post('resetUser/:userId')\n  async resetUserTest( \n    @Param('userId')\n    userId: string,\n    @Body() body: any) {\n    try {\n      var data = await this.qbankService.resetUserTest(userId,body);\n      return { \"status\": data.status, \"code\": data.code, 'message':data.message,'data': data.data }\n    } catch (error) {\n      return { \"status\": false, \"code\": 5000, 'message': 'Server error', 'data': {} }\n    }\n  }\n\n}\n","import { QuestionInterface ,QbankQuestionInterface, TestSeriesQuestionInterface} from '@application/api-interfaces';\nimport { JwtAuthGuard } from '@application/auth';\nimport { CreateQuestionDto, Question, QuestionsService } from '@application/shared-api';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  Query,\n  UseGuards,\n} from '@nestjs/common';\n\n@Controller('questions')\nexport class QuestionsController {\n  constructor(private questionService: QuestionsService) {}\n\n  // @Get('paginate')\n  // async backend(\n  //     @Query('page') page,\n  //     @Query('limit') limit,\n  //     @Query('search') search,\n  //     @Query('sort') sort\n  //   ) {\n\n  //     let options = {};\n  //     if(!page){\n  //       page = 1\n  //     }\n  //     if(!limit){\n  //       limit = 10\n  //     }\n  //     if (search) {\n  //         options = {\n  //             $or: [\n  //                 { title: new RegExp(search.toString(), 'i') },\n  //                 { description: new RegExp(search.toString(), 'i') },\n  //             ]\n  //         }\n  //     }\n  //     const query = this.questionService.find(options);\n  //     if (sort) {\n  //         query.sort({\n  //           createdOn: sort\n  //         })\n  //     }\n\n  //     const pagee  : number = parseInt(page);\n  //     const limitt : number = parseInt(limit);\n  //     const total = await this.questionService.count(options);\n  //     const data  = await query.skip((pagee - 1) * limitt).limit(limitt).exec();\n\n  //     return {\n  //         data,\n  //         totalRecords : total,\n  //         currentPage : pagee,\n  //         last_page: Math.ceil(total / limit),\n  //         search:search,\n  //         sort:sort,\n  //     };\n  // }\n\n  // @UseGuards(JwtAuthGuard)\n  @Post()\n  async create(@Body() createQuestionDto: any) {\n\n    return this.questionService.create(createQuestionDto);\n\n  }\n  @Post('insertMany/questions')\n  async createMultiQuestions(@Body() questiondata:any) {\n    return this.questionService.createMultiQuestions(questiondata);\n  }\n  // @UseGuards(JwtAuthGuard)\n  @Get()\n  async findAll(): Promise<Question[]> {\n    return this.questionService.findAll();\n  }\n\n  @Post('updateShortTitle')\n  async updateShortTitle(@Body() question:any) {\n    return this.questionService.updateShortTitle(question);\n  }\n\n  // @UseGuards(JwtAuthGuard)\n  @Get('bySyllabusId/:syllabusId')\n  findAllBySyllabusId(\n    @Param('syllabusId')\n    syllabusId: string\n  ) {\n    console.log(syllabusId)\n    return this.questionService.findAllBySyllabusId(syllabusId);\n  }\n//   async findAllBySyllabusId(syllabusId): Promise<Question[]> {\n// console.log(syllabusId)\n//     return this.questionService.findAllBySyllabusId(syllabusId);\n//   }\n\n  //@UseGuards(JwtAuthGuard)\n  @Get(':uuid')\n  findOne(\n    @Param('uuid')\n    uuid: string\n  ) {\n    return this.questionService.findByUuid(uuid);\n  }\n\n  // @UseGuards(JwtAuthGuard)\n  // @Put('assignPeral/:id')\n  // assignPeral(\n  //   @Body() response: any\n  // ) {\n  //   return this.questionService.assignPeral(response);\n  // }\n\n\n  @UseGuards(JwtAuthGuard)\n  @Put(':uuid')\n  editByUuid(\n    @Body() question: QuestionInterface\n  ) {\n    return this.questionService.editByUuid(question);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Put('bulk/:uuid')\n  editQuestionByJsonFile(\n    @Body() question: QuestionInterface\n  ) {\n    return this.questionService.editQuestionByJsonFile(question);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Delete(':uuid')\n  deleteByUuid(\n    @Param('uuid')\n    uuid: string\n  ) {\n    return this.questionService.deleteByUuid(uuid);\n  }\n\n  @Post('qbankAddQuestions')\n  qbankAddQuestions(\n    // @Param('uuid')\n    // uuid: string,\n    @Body() qbankaddquestions: QbankQuestionInterface\n  ) {\n    return this.questionService.qbankAddQuestions(qbankaddquestions);\n  }\n\n  @Post('bulk/qbankQuestions')\n  qbankBulkAddQuestions(\n    // @Param('uuid')\n    // uuid: string,\n    @Body() qbankaddquestions: any\n  ) {\n    return this.questionService.qbankBulkAddQuestions(qbankaddquestions);\n  }\n\n  \n  @Post('bulk/testQuestions')\n  testBulkAddQuestions(\n    // @Param('uuid')\n    // uuid: string,\n    @Body() tsaddquestions: any\n  ) {\n    return this.questionService.testBulkAddQuestions(tsaddquestions);\n  }\n\n  @Post('testSeriesAddQuestions')\n  testSeriesAddQuestions(\n    @Body() tsaddquestions: TestSeriesQuestionInterface\n  ) {\n    return this.questionService.testSeriesAddQuestions(tsaddquestions);\n  }\n  \n  @Post('checkQuestionBeforeAdd')\n  async checkQuestionBeforeAdd(@Body() request: any) {\n   // console.log(\"adfgvvhgv\",request);\n    return this.questionService.checkQuestionBeforeAdd(request);\n  }\n\n  @Post('questionSearch')\n  async search(@Body() request: any) {\n    return this.questionService.questionSearch(request);\n  }\n  \n\n\n  \n  \n\n  \n}\n","import { BannerInterface } from '@application/api-interfaces';\nimport { JwtAuthGuard } from '@application/auth';\nimport {\n  Banner,\n  BannersService,\n  CreateBannerDTO,\n  CreateSampleDTO,\n  SampleService,\n  Sample,\n} from '@application/shared-api';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\n\n@Controller('sample')\nexport class SampleController {\n  constructor(private sampleService: SampleService) {}\n\n  // @UseGuards(JwtAuthGuard)\n  @Post()\n  async add(@Body() createBannersDto: CreateSampleDTO) {\n    return this.sampleService.create(createBannersDto);\n  }\n\n  // @UseGuards(JwtAuthGuard)\n  @Get()\n  async findAll(): Promise<Sample[]> {\n    return this.sampleService.findAll();\n  }\n  // @UseGuards(JwtAuthGuard)\n  @Get(':uuid')\n  findOne(\n    @Param('uuid')\n    uuid: string\n  ) {\n    return this.sampleService.findByUuid(uuid);\n  }\n  //\n  @Get('byid/:id/:uuid')\n  findOneByID(\n    @Param('id')\n    id: string,\n    @Param('uuid')\n    uuid: string\n  ) {\n    return this.sampleService.findByid(id,uuid);\n  }\n\n  @Get('search/:title')\n  searchByTitle(\n    @Param('title')\n    title: string\n  ) {\n    return this.sampleService.searchByTitle(title);\n  }\n\n}\n","import { SubscriptionInterface } from '@application/api-interfaces';\nimport { JwtAuthGuard } from '@application/auth';\nimport { CreateSubscriptionDto, Subscription, SubscriptionService } from '@application/shared-api';\nimport { Body, Controller, Delete, Get, Param, Post, Put, UseGuards,Request } from '@nestjs/common';\n\n@Controller('subscriptions')\nexport class SubscriptionsController {\n\n  constructor(\n    private subscriptionService: SubscriptionService,\n  ) {}\n\n  @UseGuards(JwtAuthGuard)\n  @Post()\n  async add(@Body() createSubscriptionDto: CreateSubscriptionDto) {\n    return this.subscriptionService.create(createSubscriptionDto);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get()\n  async findAll(@Request() request): Promise<Subscription[]> {\n    const employee = request.user;\n\n    return this.subscriptionService.findAll(employee);\n  }\n\n  // @UseGuards(JwtAuthGuard)\n  @Get(':subUuid')\n  findOne(\n    @Param('subUuid')\n    subUuid: string\n  ) {\n    return this.subscriptionService.findByUuid(subUuid);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('edit/:subUuid')\n  editSubscription(\n    @Param('subUuid')\n    subUuid: string\n  ) {\n    return this.subscriptionService.editSubscription(subUuid);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Delete(':subUuid')\n  deleteByUuid(\n    @Param('subUuid')\n    subUuid: string\n  ) {\n    return this.subscriptionService.deleteByUuid(subUuid);\n  }\n\n  // @UseGuards(JwtAuthGuard)\n  @Put('update/:subUuid')\n  editByUuid(\n    @Param('subUuid')\n    subUuid: string,\n    @Body() sub: any\n  ) {\n    return this.subscriptionService.editSubscriptionByUuid(subUuid, sub);\n  }\n\n  @Get('sub/getSubcriptionsGreaterToday')\n  async getSubcriptionsGreaterToday() : Promise<Subscription[]>  {\n    return this.subscriptionService.getSubcriptionsGreaterToday();\n  }\n\n  @Get('sub/couponSubscriptions')\n  async couponSubscriptions() : Promise<Subscription[]>  {\n    return this.subscriptionService.couponSubscriptions();\n  }\n  \n\n  @Get('courses/:id')\n  async findByCourse(@Param('id') courseId: string): Promise<Subscription[]> {\n    return this.subscriptionService.findByCourse(courseId);\n  }\n\n}\n","import { SyllabusInterface } from '@application/api-interfaces';\nimport { JwtAuthGuard } from '@application/auth';\nimport {\n  CreateSyllabusDto,\n  Syllabus,\n  SyllabusService,\n} from '@application/shared-api';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\n\n@Controller('syllabus')\nexport class SyllabusController {\n  constructor(private syllabusService: SyllabusService) {}\n\n  @UseGuards(JwtAuthGuard)\n  @Post()\n  async create(@Body() createSyllabusDto: CreateSyllabusDto) {\n    return this.syllabusService.create(createSyllabusDto);\n  }\n\n  // @UseGuards(JwtAuthGuard)\n  @Get()\n  async findAll(): Promise<Syllabus[]> {\n    return this.syllabusService.findAll();\n  }\n\n  @Get('getSubjectsAndChapters')\n  async getSubjectsAndChapters(): Promise<Syllabus[]> {\n    return this.syllabusService.getSubjectsAndChapters();\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('getSubject/ChapterList/:uuid')\n  getSubjectOrChapterList(\n    @Param('uuid')\n    uuid: string\n  ) {\n    return this.syllabusService.getSubjectOrChapterList(uuid);\n  }\n\n  @Get('only/subjects')\n  async onlySubjects(): Promise<Syllabus[]> {\n    return this.syllabusService.onlySubjects();\n  }\n\n  @Get('only/chapters')\n  async onlyChapters(): Promise<Syllabus[]> {\n    return this.syllabusService.onlyChapters();\n  }\n\n  // @UseGuards(JwtAuthGuard)\n  @Get('subjects/search')\n  async findSubejcts(): Promise<Syllabus[]> {\n    return this.syllabusService.findSubejcts();\n  }\n\n  @Get('active/subjects')\n  async getActiveSyllabus(): Promise<Syllabus[]>{\n    return this.syllabusService.getActiveSyllabus();\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get(':uuid')\n  findOne(\n    @Param('uuid')\n    uuid: string\n  ) {\n    return this.syllabusService.findByUuid(uuid);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Delete(':uuid')\n  deleteByUuid(\n    @Param('uuid')\n    uuid: string\n  ) {\n\n    return this.syllabusService.deleteByUuid(uuid);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Put(':uuid')\n  editByUuid(\n    @Param('uuid')\n    uuid: string,\n    @Body() syllabus: SyllabusInterface\n  ) {\n    return this.syllabusService.editSyllabusByUuid(uuid, syllabus);\n  }\n\n\n  @Post('getChapters')\n  async fetChapters(@Body() request: any) : Promise<any[]>{\n\n    return this.syllabusService.fetChapters(request);\n  }\n  @Post('fetChapters')\n  async getChapters(@Body() request: any) : Promise<any[]>{\n\n    return this.syllabusService.fetChapters(request);\n  }\n  @Post('fetChapters/videos')\n  async getvideoChapters(@Body() request: any) : Promise<any[]>{\n\n    return this.syllabusService.getvideoChapters(request);\n  }\n}\n","import { TestCategoryInterface,TestInterface } from '@application/api-interfaces';\nimport { JwtAuthGuard } from '@application/auth';\nimport { CreateTSCategoriesDTO, TestCategoryService, TSCategories } from '@application/shared-api';\nimport { Body, Controller, Delete, Get, Param, Post, Put, Request, UseGuards } from '@nestjs/common';\nimport { ApiBadRequestResponse, ApiForbiddenResponse, ApiOperation, ApiResponse } from '@nestjs/swagger';\n@Controller('ts/categories')\nexport class TestCategoryController {\n\n  constructor(private categoryService: TestCategoryService) {}\n\n  @Post()\n  async createTSCategories(@Body() createTSCategoriesDTO: CreateTSCategoriesDTO) {\n    return this.categoryService.create(createTSCategoriesDTO);\n  }\n  @Post('insertTSTestes')\n  async insertTSTests(@Body() request: any) {\n\n    return this.categoryService.insertTSTests(request);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get()\n  async findAll(@Request() request): Promise<TSCategories[]> {\n    const employee = request.user;\n    return this.categoryService.findAll(employee);\n  }\n\n  @Get('tests/:uuid')\n  async getTests(@Param('uuid') catUuid: string) {\n    return this.categoryService.getTests(catUuid);\n  }\n\n  @Post('subjectsByCourseIds')\n  async findSubjectsByCoueseId( @Body() coursesarr: any) {\n    return this.categoryService.findSubjectsByCoueseIds(coursesarr);\n  }\n\n  @Get('courses/:id')\n  async findByCourse(@Param('id') courseId: string): Promise<any[]> {\n    return this.categoryService.findByCourse(courseId);\n  }\n\n  @Get(':uuid')\n  findOne(\n    @Param('uuid')\n    uuid: string\n  ) {\n    console.log(this.categoryService.findByUuid(uuid));\n\n    return this.categoryService.findByUuid(uuid);\n  }\n\n  @Post('getTestSeriesCourses')\n  async getTestSeriesCourseByCategory(@Body() request: any) {\n\n    return this.categoryService.getTestSeriesCourseByCategory(request);\n  }\n\n\n\n  @Delete(':uuid')\n  deleteByUuid(\n    @Param('uuid')\n    uuid: string\n  ) {\n    return this.categoryService.deleteByUuid(uuid);\n  }\n\n  @Put(':uuid')\n  editByUuid(\n    @Body() category: TestCategoryInterface\n  ) {\n    return this.categoryService.editByUuid(category);\n  }\n\n  @Get('uuid/:uuid/testuuid/:testuuid')\n  getTestsByUuid(\n    @Param('uuid')\n    uuid: string,\n    @Param('testuuid')\n    testuuid: string\n  ) {\n  //  console.log(this.categoryService.findByUuid(uuid));\n\n    return this.categoryService.getTestsByUuid(uuid,testuuid);\n  }\n\n  @Put('uuid/:uuid/test/:testUuid')\n  editTestByUuid(\n    @Body() test: TestInterface\n  ) {\n    return this.categoryService.editTestByUuid(test);\n  }\n\n  @Delete('uuid/:uuid/test_series/:testUuid')\n  deleteTestByUuid(\n    @Param('uuid')\n    uuid: string,\n    @Param('testUuid')\n    testUuid: string\n  ) {\n    return this.categoryService.deleteTestByUuid(uuid,testUuid);\n  }\n\n  @Get('uuid/:uuid/tsTestuuid/:testuuid')\n  getTestQuestionsByUuid(\n    @Param('uuid')\n    uuid: string,\n    @Param('testuuid')\n    testuuid: string\n  ) {\n  //  console.log(this.categoryService.findByUuid(uuid));\n\n    return this.categoryService.getTestQuestionsByUuid(uuid,testuuid);\n  }\n\n\n  @Post('deleteTSQuestions')\n  async deleteTSQuestions(\n    @Body() qbquestions: any) {\n    return this.categoryService.deleteTSQuestions(qbquestions);\n  }\n\n  // @Get('tsUuid/:uuid')\n  // getTestsByTSUuid(\n  //   @Param('uuid')\n  //   uuid: string,\n    \n  // ) {\n  //   return this.categoryService.getTestsByTSUuid(uuid);\n  // }\n\n  @Post('copyTSQuestions')\n  async copyTSQuestions(\n    @Body() tsquestions: TestCategoryInterface) {\n    return this.categoryService.copyTSQuestions(tsquestions);\n  }\n  @Post('moveTSQuestions')\n  moveTSQuestions(\n    // @Param('uuid')\n    // uuid: string,\n    @Body() movetsquestions: TestCategoryInterface\n  ) {\n    return this.categoryService.moveTSQuestions(movetsquestions);\n  }\n\n  @Post('dragAndDropTSQuestions')\n  dragAndDropTSQuestions(\n    // @Param('uuid')\n    // uuid: string,\n    @Body() dragAndDropTSQuestions: TestCategoryInterface\n  ) {\n    return this.categoryService.dragAndDropTSQuestions(dragAndDropTSQuestions);\n  }\n\n  @Post('dragAndDropTests')\n  dragAndDropTests(\n    // @Param('uuid')\n    // uuid: string,\n    @Body() dragAndDropTests: any\n  ) {\n    return this.categoryService.dragAndDropTests(dragAndDropTests);\n  }\n  \n  @Post('copyTSTests')\n  async copyQBTopics(\n    @Body() tstests: TestCategoryInterface) {\n    return this.categoryService.copyTSTests(tstests);\n  }\n\n  @Post('moveTSTests')\n  moveTSTests(\n    @Body() movetstopics: TestCategoryInterface\n  ) {\n    return this.categoryService.moveTSTests(movetstopics);\n  }\n\n  @Post('update-test-series-upcoming-status')\n  updateTestSeriesUpcoming(\n  ){\n    return this.categoryService.updateTestSeriesUpcoming();\n  }\n\n  @Get('createDailyTest/test')\n  async createDailyTest(): Promise<any> {\n    // try {\n        var data = await this.categoryService.createDailyTest();\n        return { \"status\": true, \"code\": 2000, 'message': 'Questions Fetched Successfully', 'data': data }\n    // } catch (error) {\n    //   return { \"status\": false, \"code\": 5000, 'message': 'Server error', 'data': {} }\n    // }\n  }\n  @Get('vanishDailyTest/test')\n  async vanishDailyTest(): Promise<any> {\n    // try {\n        var data = await this.categoryService.vanishDailyTest();\n        return { \"status\": true, \"code\": 2000, 'message': 'Questions Fetched Successfully', 'data': data }\n    // } catch (error) {\n    //   return { \"status\": false, \"code\": 5000, 'message': 'Server error', 'data': {} }\n    // }\n  }\n\n  @Post('getLeaderBoardUserAnalysis')\n  async getLeaderBoardUserAnalysis(\n    @Body() body\n  ) {\n    return await this.categoryService.getLeaderBoard( body);\n    // return {\"status\": true,\"code\" : 2000, 'message' : 'Fetched Analysis','data' : data}\n  }\n\n  @Post('reset-test')\n  async resetTest(\n    @Body() body\n  ) {\n    return await this.categoryService.resetUserTest( body);\n    // return {\"status\": true,\"code\" : 2000, 'message' : 'Fetched Analysis','data' : data}\n  }\n\n}\n","import { TestInterface } from '@application/api-interfaces';\nimport { JwtAuthGuard } from '@application/auth';\nimport { CreateTestDTO, Test, TestsService } from '@application/shared-api';\nimport { Body, Controller, Delete, Get, Param, Post, Put, UseGuards } from '@nestjs/common';\nimport { ApiOperation, ApiResponse } from '@nestjs/swagger';\n\n@Controller('ts/tests')\nexport class TestsController {\n\n  constructor(private testService: TestsService) {}\n\n  @Post()\n  async createTest(@Body() createTestsDTO: CreateTestDTO) {\n    return this.testService.create(createTestsDTO);\n  }\n\n  @Get()\n  async findAll(): Promise<Test[]> {\n    return this.testService.findAll();\n  }\n\n  @Get(':uuid')\n  findOne(\n    @Param('uuid')\n    uuid: string\n  ) {\n    return this.testService.findByUuid(uuid);\n  }\n\n  // @UseGuards(JwtAuthGuard)\n  @ApiOperation({ summary: 'Fetch Tests by Course Id' })\n  @ApiResponse({\n    status: 200,\n    description: 'Tests Fetched Successfully',\n    type: [Test],\n  })\n  @Get('courses/:id')\n  async findByCourse(@Param('id') courseId: string): Promise<Test[]> {\n    return this.testService.findByCourse(courseId);\n  }\n\n  @Delete(':uuid')\n  deleteByUuid(\n    @Param('uuid')\n    uuid: string\n  ) {\n    return this.testService.deleteByUuid(uuid);\n  }\n\n  @Put(':uuid')\n  editByUuid(\n    @Param('uuid')\n    uuid: string,\n    @Body() test: TestInterface\n  ) {\n    return this.testService.editByUuid(test);\n  }\n\n  \n\n}\n","import { TestCategoryInterface } from '@application/api-interfaces';\nimport { CreateTSCategoriesDTO, TestCategoryService, TSCategories,TestSeriesService } from '@application/shared-api';\nimport { Body, Controller, Delete, Get, Param, Post, Put,\n  Query,\n  UseGuards } from '@nestjs/common';\nimport { JwtAuthGuard } from '@application/auth';\n\nimport { ApiBadRequestResponse, ApiForbiddenResponse, ApiOperation, ApiResponse } from '@nestjs/swagger';\n@Controller('test-series')\nexport class TestSeriesController {\n\n  constructor(private testSeriesService: TestSeriesService) {}\n\n  // @UseGuards(JwtAuthGuard)\n  @Post('questions')\n  async getTestSeriesQuestions(@Body() request: any) {\n    return this.testSeriesService.getTestSeriesQuestions(request);\n  }\n\n   @Get('paginate')\n  async backend(\n      @Query('page') page,\n      @Query('limit') limit,\n      @Query('search') search,\n      @Query('subjectIds') subjects,\n      @Query('sort') sort,\n      @Body() request: any\n    ) {\n\n      let options = {};\n      if(!page){\n        page = 1\n      }\n      if(!limit){\n        limit = 10\n      }\n      if (subjects) {\n          options = {\n            syllabus: { $in: subjects },\n            // 'flags.active': true,\n            // \"flags.testSeries\": true,\n              // $or: [\n              //     { title: new RegExp(search.toString(), 'i') },\n              //     { description: new RegExp(search.toString(), 'i') },\n              // ]\n          }\n      }\n      console.log(options)\n      const query = this.testSeriesService.find(options);\n      if (sort) {\n          query.sort({\n            createdOn: sort\n          })\n      }\n\n      const pagee  : number = parseInt(page);\n      const limitt : number = parseInt(limit);\n      const total = await this.testSeriesService.count(options);\n      const data  = await query.skip((pagee - 1) * limitt).limit(limitt).exec();\n\n      return {\n          data,\n          totalRecords : total,\n          currentPage : pagee,\n          last_page: Math.ceil(total / limit),\n          search:search,\n          sort:sort,\n      };\n  }\n}\n","import { KeyInterface, ResetPasswordInterface, UserInterface } from '@application/api-interfaces';\nimport { AuthService, JwtAuthGuard, LocalAuthGuard } from '@application/auth';\nimport { CreateUserDto, User, UsersService } from '@application/shared-api';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  Query,\n  Req,\n  Request,\n  UseGuards,\n} from '@nestjs/common';\nimport { ApiBadRequestResponse, ApiForbiddenResponse, ApiOperation, ApiResponse } from '@nestjs/swagger';\n\n@Controller('users')\nexport class UsersController {\n  // constructor\n  constructor(\n    private usersService: UsersService,\n    private authService: AuthService\n  ) {}\n\n  @UseGuards(JwtAuthGuard)\n  @Get('paginate')\n  async backend(\n      @Query('page') page,\n      @Query('limit') limit,\n      @Query('search') search,\n      @Query('sort') sort,\n      @Request() request\n    ) {\n\n      const employee = request.user;\n      let options = {};\n      if(!page){\n        page = 1\n      }\n      console.log(page,limit)\n      if(!limit){\n        limit = 10\n      }\n\n      if(!sort){\n        sort = -1\n      }\n\n\n      // {organizations:ObjectId('65279335b3b5f3848a6a3adf')}\n\n      const coursesList = await this.usersService.getEmployeeCourses(employee);\n\n    //    const courseListIds = [];\n\n    //   coursesList.forEach(element => {\n    //   courseListIds.push(element._id)\n    // });\n    // console.log(courseListIds)\n      // console.log(coursesList)\n      if (search) {\n          options = {\n            $or: [\n              //  { mobile: new RegExp(search.toString(), 'i') },\n              // { name: new RegExp(search.toString(), 'i') },\n               { mobile : search },\n            ],\n            courses: { $in: coursesList },\n          }\n      }else{\n        options = {  courses : { $in: coursesList }}\n      }\n      const query = this.usersService.find(options);\n      if (sort) {\n        query.sort({\n          createdOn: sort\n        })\n      }\n\n      const pagee  : number = parseInt(page);\n      const limitt : number = parseInt(limit);\n      const total = await this.usersService.count(options);\n      const data  = await query.skip((pagee - 1) * limitt).limit(limitt).exec();\n\n      return {\n          data,\n          totalRecords : total,\n          currentPage : pagee,\n          last_page: Math.ceil(total / limit),\n          search:search,\n          sort:sort,\n      };\n  }\n\n  @Post('mobile')\n  searchByMobile(@Body() body) {\n    return this.usersService.searchByMobile(body);\n  }\n\n  @Post('login')\n  @ApiOperation({ summary: 'User logged in succesfully', tags: ['users'] })\n  @ApiResponse({ status: 201, type: User })\n  @ApiForbiddenResponse({ status: 403, description: 'Forbidden.' })\n  @ApiBadRequestResponse({ status: 400, description: 'Bad Request.'  })\n  async login(@Body() request: { mobile: number; password: string }) {\n    return this.usersService\n      .login(request)\n      .then((user) => this.authService.login(user));\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiOperation({ summary: 'Fetch user profile', tags: ['users'] })\n  @ApiResponse({\n    status: 200,\n    description: 'User profile Fetched Successfully',\n    type: [User],\n  })\n  @Get(':uuid/profile')\n  profile(\n    @Param('uuid')\n    uuid: string\n  ) {\n    return this.usersService.findByUuid(uuid);\n  }\n\n  @Post('insertMany/users')\n  async createMultiUsers(@Body() usersdata:any) {\n    return this.usersService.createMultiUsers(usersdata);\n  }\n\n  @Post()\n  @ApiOperation({ summary: 'User created succesfully', tags: ['users'] })\n  @ApiResponse({ status: 201, type: User })\n  @ApiForbiddenResponse({ status: 403, description: 'Forbidden.' })\n  @ApiBadRequestResponse({ status: 400, description: 'Bad Request.' })\n  async createUser(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.addUser(createUserDto);\n  }\n\n // @UseGuards(JwtAuthGuard)\n  @Get()\n  @ApiOperation({ summary: 'Fetch all users', tags: ['users'] })\n  @ApiResponse({\n    status: 200,\n    description: 'Users Fetched Successfully',\n    type: [User],\n  })\n  async findAll(): Promise<User[]> {\n    // const user = <User>req.user;\n    return this.usersService.findAll();\n  }\n\n  //@UseGuards(JwtAuthGuard)\n  @Get('students')\n  @ApiOperation({ summary: 'Fetch only Students', tags: ['users'] })\n  @ApiResponse({\n    status: 200,\n    description: 'Students Fetched Successfully',\n    type: [User],\n  })\n  async findAllStudents(): Promise<User[]> {\n    // const user = <User>req.user;\n    return this.usersService.findAllStudents();\n  }\n\n  // @UseGuards(JwtAuthGuard)\n  @Get(':uuid')\n  @ApiOperation({ summary: 'Fetch user by uuid', tags: ['users'] })\n  @ApiResponse({\n    status: 200,\n    description: 'User Fetched Successfully',\n    type: [User],\n  })\n  findOne(\n    @Param('uuid')\n    uuid: string\n  ) {\n    console.log(this.usersService.findByUuid(uuid));\n\n    return this.usersService.findByUuid(uuid);\n  }\n\n  // @UseGuards(JwtAuthGuard)\n  // @Get(':uuid')\n  // @ApiOperation({ summary: 'Fetch Student by uuid', tags: ['users'] })\n  // @ApiResponse({\n  //   status: 200,\n  //   description: 'User Fetched Successfully',\n  //   type: [User],\n  // })\n  // findOneStudent(\n  //   @Param('uuid')\n  //   uuid: string\n  // ) {\n  //   return this.usersService.findByUuid(uuid);\n  // }\n\n  // @UseGuards(JwtAuthGuard)\n  @Get('subscriptions/:uuid')\n  @ApiOperation({ summary: 'Fetch Student by uuid', tags: ['users'] })\n  @ApiResponse({\n    status: 200,\n    description: 'User Fetched Successfully',\n    type: [User],\n  })\n  viewSubscriptionsByUuid(\n    @Param('uuid')\n    uuid: string\n  ) {\n    return this.usersService.viewSubscriptionsByUuid(uuid);\n  }\n  \n\n  @UseGuards(JwtAuthGuard)\n  @Delete(':uuid')\n  @ApiOperation({ summary: 'Delete user by uuid', tags: ['users'] })\n  @ApiResponse({\n    status: 200,\n    description: 'User deleted Successfully',\n    type: [User],\n  })\n  deleteByUuid(\n    @Param('uuid')\n    uuid: string\n  ) {\n    return this.usersService.deleteByUuid(uuid);\n  }\n\n  @Post(':uuid/subscriptions')\n  @ApiOperation({ summary: 'Subscription assigned to user succesfully', tags: ['users'] })\n  @ApiResponse({ status: 201, type: User })\n  @ApiForbiddenResponse({ status: 403, description: 'Forbidden.' })\n  @ApiBadRequestResponse({ status: 400, description: 'Bad Request.'  })\n  async assignSubscriptions(@Param('uuid') uuid: string, @Body() request: any) {\n\n    return this.usersService.assignSubscriptionsByUserUuid(uuid, request);\n\n  }\n\n  // @UseGuards(JwtAuthGuard)\n  // @Post(':uuid/organizations')\n  // async addOrganizationByUserUuid(\n  //   @Param('uuid')\n  //   uuid: string,\n  //   @Body() org: KeyInterface\n  // ) {\n  //   return this.usersService.addOrganizationByUserUuid(uuid, org);\n  // }\n\n  // @UseGuards(JwtAuthGuard)\n  // @Delete(':uuid/organizations')\n  // deleteOrganizationByUserUuid(\n  //   @Param('uuid')\n  //   uuid: string,\n  //   @Param('orgUuid')\n  //   orgUuid: string\n  // ) {\n  //   return this.usersService.deleteOrganizationByUserUuid(uuid, orgUuid);\n  // }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiOperation({ summary: 'Reset Password', tags: ['users'] })\n  @ApiResponse({\n    status: 200,\n    description: 'Reset Password Successfully',\n    type: [User],\n  })\n  @Put(':uuid/resetPassword')\n  changePassword(\n    @Param('uuid')\n    uuid: string,\n    @Body() payload: ResetPasswordInterface,\n  ) {\n    return this.usersService.changePassword(uuid, payload.oldPassword, payload.newPassword);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiOperation({ summary: 'Reset Password', tags: ['users'] })\n  @ApiResponse({\n    status: 200,\n    description: 'Reset Password Successfully',\n    type: [User],\n  })\n  @Put(':uuid/resetUserPassword')\n  resetPassword(\n    @Param('uuid')\n    uuid: string,\n    @Body() payload: ResetPasswordInterface,\n  ) {\n    return this.usersService.resetPassword(uuid,  payload.newPassword);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Put(':uuid')\n  @ApiOperation({ summary: 'Edit user by uuid', tags: ['users'] })\n  @ApiResponse({\n    status: 200,\n    description: 'User updated Successfully',\n    type: [User],\n  })\n  editByUuid(\n    @Param('uuid')\n    uuid: string,\n    @Body() user: UserInterface,\n  ) {\n    return this.usersService.editByUuid(uuid, user);\n  }\n\n  // @UseGuards(JwtAuthGuard)\n  @Put('clearSubscrptions/:uuid')\n  clearSubscrptions(\n    @Param('uuid')\n    uuid: string,\n  ) {\n    return this.usersService.clearSubscrptions(uuid);\n  }\n\n\n  @Get('coupons/:userId/:subscriptionId')\n  fetchCouponsBysubscriptions(\n    @Param('userId')            userId: string[],\n    @Param('subscriptionId')    subscriptionId: string\n  ) {\n    return this.usersService.fetchCouponsBysubscriptions(userId,subscriptionId);\n  }\n\n  @Get('agent/coupons/:subscriptionId')\n  fetchAgentCouponsBysubscriptions(\n    @Param('subscriptionId')    subscriptionId: string\n  ) {\n    return this.usersService.fetchAgentCouponsBysubscriptions(subscriptionId);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Post('searchDateFilter')\n  async getTransactionsDateFilter( @Body() transactionsInterface: any, @Request() request){\n    const employee = request.user;\n    return this.usersService.getTransactionsDateFilter(transactionsInterface,employee);\n  }\n\n\n  @Post('disableuserfortestsubmits')\n  async disableUserForTestSubmits( @Body() payload: any){\n    return this.usersService.disableUserForTestSubmits(payload);\n  }\n\n  @Get('disableuserfortestsubmits/list')\n  async disableUserForTestSubmitsList(){\n    return this.usersService.disableUserForTestSubmitsList();\n  }\n\n  @Put('disableuserfortestsubmits/status/:id')\n  async disableUserForTestSubmitStatus(\n    @Param('id')\n    id: string,\n    @Body() status: any\n  ){\n    return this.usersService.disableUserForTestSubmitStatus(id,status);\n  }\n\n  @Delete('disableuserfortestsubmits/:uuid')\n  disableUserForTestSubmitDelete(\n    @Param('uuid')\n    uuid: string\n  ) {\n    return this.usersService.disableUserForTestSubmitDelete(uuid);\n  }\n\n  @Post('copy-users-to-another-database')\n  async copyUsersToAnotherDatabase(@Body() body) {\n   \n   return this.usersService.copyUsersToAnotherDatabase(body);\n  }\n  @Post('generateBranchIoLink')\n  async generateBranchIo(@Body() body){\n        var request = require('request');\n        var options = {\n          'method': 'POST',\n          'url': 'https://api2.branch.io/v1/url',\n          'headers': {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(body)\n        };\n        var url = ''\n        const result = new Promise((resolve, reject) => {\n          request(options, function(error, response) {\n            if (error) return reject(error);\n            return resolve(JSON.parse(response.body));\n          });\n        })\n        var fromapi = await result;\n        return fromapi['url']\n  }\n\n  // @Post('brachio')\n  // async brachIO(@Body() body) {\n  //  return 'https://api2.branch.io/v1/url'\n  // //  return this.usersService.copyUsersToAnotherDatabase(body);\n  // }\n\n  @Post('fetch-users-submitted-data')\n  async fetchUsersSubmittedData(@Body() body) {\n       return this.usersService.fetchUsersSubmittedData(body);\n  }\n  @Post('fetch-users-submitted-tests')\n  async fetchUsersSubmittedTests(@Body() body) {\n       return this.usersService.fetchUsersSubmittedTests(body);\n  }\n  @Get('inActive/users')\n  async inActiveUsers() {\n       return await this.usersService.inActiveUsers();\n  }\n}\n","import { VideoCipherService } from '@application/shared-api';\nimport { Controller, Get, HttpService, Query } from '@nestjs/common';\nimport { AxiosResponse } from 'axios';\nimport { Observable } from 'rxjs';\n\n@Controller('vdocipher')\nexport class VideoCipherController {\n\n  constructor(private vdocipher: VideoCipherService) {}\n\n  @Get('all')\n  findAllVideos(@Query() query): Observable<AxiosResponse<any>> {\n    return this.vdocipher.findAll(query)\n  }\n}\n","import type{ VideoInterface } from '@application/api-interfaces';\nimport { JwtAuthGuard } from '@application/auth';\nimport { CreateVideoSubjectDto, VideoSubject, VideoSubjectService } from '@application/shared-api';\nimport { Body, Controller, Delete, Get, Param, Post, Put, UseGuards, Request } from '@nestjs/common';\nimport { ApiOperation, ApiResponse } from '@nestjs/swagger';\n\n@Controller()\nexport class VideosSubjectController {\n\n  constructor(\n    private videoSubjectService: VideoSubjectService\n  ) {}\n\n  // @UseGuards(JwtAuthGuard)\n  @Post('videos/subjects')\n  async createSubject(@Body() createVideoSubjectDTO: CreateVideoSubjectDto) {\n    return this.videoSubjectService.create(createVideoSubjectDTO);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('videos/subjects')\n  async findAll(@Request() request): Promise<VideoSubject[]> {\n    const employee = request.user;\n    return this.videoSubjectService.findAll(employee);\n  }\n\n  // @UseGuards(JwtAuthGuard)\n  @Get('videos/subjects/:uuid')\n  findOne(\n    @Param('uuid')\n    uuid: string\n  ) {\n    return this.videoSubjectService.findByUuid(uuid);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiOperation({ summary: 'Fetch Video Subjects by Course Id' })\n  @ApiResponse({\n    status: 200,\n    description: 'Video Subjects Fetched Successfully',\n    type: [VideoSubject],\n  })\n  @Get('videos/subjects/courses/:id')\n  async findByCourse(@Param('id') courseId: string): Promise<VideoSubject[]> {\n    return this.videoSubjectService.findByCourse(courseId);\n  }\n\n  @Post('videos/subjects/subjectsByCourseIds')\n  async findSubjectsByCoueseId( @Body() coursesarr: any) {\n    return this.videoSubjectService.findSubjectsByCoueseIds(coursesarr);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Delete('videos/subjects/:uuid')\n  deleteByUuid(\n    @Param('uuid')\n    uuid: string\n  ) {\n    return this.videoSubjectService.deleteByUuid(uuid);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Put('videos/subjects/:videoSubjectUuid')\n  editByUuid(\n    //@Param('videoSubjectUuid')\n    //uuid: string,\n    @Body() video: VideoInterface\n  ) {\n    return this.videoSubjectService.editByUuid( video);\n  }\n\n  @Post('videos/subjects/copyVideos')\n  async copyVideos(\n    @Body() videos: VideoInterface) {\n    return this.videoSubjectService.copyVideos(videos);\n  }\n\n  @Post('videos/subjects/copychapters')\n  async copyVideosChapters(\n    @Body() chapters: VideoInterface) {\n    return this.videoSubjectService.copyVideosChapters(chapters);\n  }\n\n\n  @Post('videos/subjects/moveVideos')\n  moveVideos(\n    // @Param('uuid')\n    // uuid: string,\n    @Body() movevideos: VideoInterface\n  ) {\n    return this.videoSubjectService.moveVideos(movevideos);\n  }\n\n  @Post('videos/subjects/moveChapters')\n  moveVideoChapters(\n    // @Param('uuid')\n    // uuid: string,\n    @Body() movevideochaptrers: VideoInterface\n  ) {\n    return this.videoSubjectService.moveVideoChapters(movevideochaptrers);\n  }\n\n  @Post('videos/subjects/deleteChapters')\n  async deleteVideoChapters(\n    @Body() videochapters: VideoInterface) {\n    return this.videoSubjectService.deleteVideoChapters(videochapters);\n  }\n\n  @Post('videos/subjects/deleteVideos')\n  async deleteMultipleTopics(@Body() videochapters: VideoInterface) {\n    return this.videoSubjectService.deleteMultipleVideos(videochapters);\n  }\n\n\n  @Post('videos/subjects/dragAndDropVideos')\n  dragAndDropVideos(\n    // @Param('uuid')\n    // uuid: string,\n    @Body() dragAndDropVideos: any\n  ) {\n    return this.videoSubjectService.dragAndDropVideos(dragAndDropVideos);\n  }\n\n  @Post('videos/subjects/dragAndDropVideoChapters')\n  dragAndDropChapters(\n    // @Param('uuid')\n    // uuid: string,\n    @Body() dragAndDropChapters: any\n  ) {\n    return this.videoSubjectService.dragAndDropChapters(dragAndDropChapters);\n  }\n\n  @Post('videos/subjects/dragAndDropSubjects')\n  dragAndDropSubjects(\n    // @Param('uuid')\n    // uuid: string,\n    @Body() dragAndDropSubjects: any\n  ) {\n    return this.videoSubjectService.dragAndDropSubjects(dragAndDropSubjects);\n  }\n\n  \n\n}\n","import type {\n  VideoInterface,\n} from '@application/api-interfaces';\nimport { JwtAuthGuard } from '@application/auth';\nimport {\n  CreateVideoDTO,\n  Video,\n  VideosService,\n} from '@application/shared-api';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport { ApiOperation, ApiResponse } from '@nestjs/swagger';\n@Controller()\nexport class VideosController {\n\n  constructor(\n    private videosService: VideosService,\n  ) {}\n\n  @UseGuards(JwtAuthGuard)\n  @Post('videos/subjects/:uuid/video')\n  @ApiOperation({ summary: 'Create Video' })\n  @ApiResponse({\n    status: 200,\n    description: 'Video Created Successfully',\n    type: Video,\n  })\n  async createVideo(@Body() createVideoDto: CreateVideoDTO) {\n    return this.videosService.addSubjectVideo(createVideoDto);\n  }\n\n  @Post('videos/subjects/bulkVideos')\n  async createBulkTopics(@Body() response: any) {\n    return this.videosService.createBulkVideos(response);\n  }\n\n  // @UseGuards(JwtAuthGuard)\n  @ApiOperation({ summary: 'Fetch Video' })\n  @ApiResponse({\n    status: 200,\n    description: 'Video Fetched Successfully',\n    type: null,\n  })\n  @Get('videos/subjects/:uuid/chapter/:chapterUuid/videos/:videoUuid/:course')\n  videoByUuid(\n    @Param('uuid')\n    subjectUuid: string,\n    @Param('chapterUuid')\n    chapterUuid: string,\n    @Param('videoUuid')\n    videoUuid: string,\n    @Param('course')\n    course: string\n  ) {\n    return this.videosService.findByUuid(subjectUuid,chapterUuid, videoUuid, course);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiOperation({ summary: 'Delete Video' })\n  @ApiResponse({\n    status: 200,\n    description: 'Video Deleted Successfully',\n    type: null,\n  })\n  @Delete('videos/subjects/:uuid/videos/:videoUuid')\n  deleteByUuid(\n    @Param('uuid')\n    subjectUuid: string,\n    @Param('videoUuid')\n    videoUuid: string,\n  ) {\n    return this.videosService.deleteByUuid(subjectUuid, videoUuid);\n  }\n  @Post('videos/subjects/updateVideos')\n  editVideoByUuid(\n    @Body() video: VideoInterface\n  ) {\n    return this.videosService.editVideoByUuid( video);\n  }\n\n  // @UseGuards(JwtAuthGuard)\n  // @ApiOperation({ summary: 'Update Video' })\n  // @ApiResponse({\n  //   status: 200,\n  //   description: 'Video Updated Successfully',\n  //   type: null,\n  // })\n\n  // @Post('videos/subjects/updateVideos')\n  // editVideoByUuid(\n  //   @Body() video: any\n  // ) {\n  //   return this.videosService.editVideoByUuid( video);\n  // }\n\n\n}\n","import { JwtAuthGuard } from '@application/auth';\nimport {\n  Pearls,\n  PearlsService,\n} from '@application/shared-api';\nimport { CreatePearlsDto, UsersService } from '@application/shared-api';\nimport { PearlsInputInterface,FlagsInterface, UserKeyInterface } from '@application/api-interfaces';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport * as uuid from 'uuid';\n\n@Controller('pearls')\nexport class PearlsController {\n  constructor(\n    private peralsService: PearlsService,\n  ) {}\n  \n  // @UseGuards(JwtAuthGuard)\n  @Post()\n    async add(@Body() createPearlsDto: CreatePearlsDto) {\n      return this.peralsService.create(createPearlsDto);\n    }\n  // @UseGuards(JwtAuthGuard)\n  @Get()\n    async findAll(): Promise<Pearls[]> {\n      return this.peralsService.findAll();\n    }\n  // @UseGuards(JwtAuthGuard)\n  @Get(':uuid')\n  findOne(\n    @Param('uuid')\n    uuid: string\n  ) {\n    return this.peralsService.findByUuid(uuid);\n  }\n\n  @Get('questions/:uuid')\n  getPeralQuestions(\n    @Param('uuid')\n    uuid: string\n  ) {\n    return this.peralsService.getPeralQuestions(uuid);\n  }\n\n  // @UseGuards(JwtAuthGuard)\n  @Put(':uuid')\n  editByUuid(\n    @Param('uuid')\n    uuid: string,\n    @Body() perals: PearlsInputInterface\n  ) {\n    return this.peralsService.editPearlsByUuid(uuid, perals);\n  }\n\n  // @UseGuards(JwtAuthGuard)\n  @Delete(':uuid')\n  deleteByUuid(\n    @Param('uuid')\n    uuid: string\n  ) {\n    return this.peralsService.deleteByUuid(uuid);\n  }\n}","import { AuthModule } from '@application/auth';\nimport { SharedApiModule } from '@application/shared-api';\nimport { Module } from '@nestjs/common';\nimport { EmployeeController } from './employee.controller';\n\n@Module({\n  imports: [SharedApiModule, AuthModule],\n  controllers: [EmployeeController],\n  providers: [],\n})\nexport class ManageEmployeeModule {}\n","import { EmployeeInterface, ResetEmployeePasswordInterface } from '@application/api-interfaces';\nimport { AuthService, JwtAuthGuard } from '@application/auth';\nimport { CreateEmployeeDto, EmployeeService, Employee, UsersService } from '@application/shared-api';\nimport {\n    Body,\n    Controller,\n    Delete,\n    Get,\n    Param,\n    Post,\n    Put,\n    UseGuards,\n    Request\n} from '@nestjs/common';\nimport { ApiBadRequestResponse, ApiForbiddenResponse, ApiOperation, ApiResponse } from '@nestjs/swagger';\n\n@Controller('employee')\nexport class EmployeeController {\n    // constructor\n    constructor(\n        private employeeService: EmployeeService,\n        private authService: AuthService\n    ) { }\n\n    @Post('employeeLogin')\n    @ApiOperation({ summary: 'Employee logged in succesfully', tags: ['users'] })\n    @ApiResponse({ status: 201, type: Employee })\n    @ApiForbiddenResponse({ status: 403, description: 'Forbidden.' })\n    @ApiBadRequestResponse({ status: 400, description: 'Bad Request.' })\n    async login(@Body() request: { mobile: number; password: string }) {\n        return this.employeeService\n            .login(request)\n            .then((employee) => this.authService.employeeLogin(employee));\n    }\n\n    //   @UseGuards(JwtAuthGuard)\n    //   @ApiOperation({ summary: 'Fetch employee profile', tags: ['users'] })\n    //   @ApiResponse({\n    //     status: 200,\n    //     description: 'Employee profile Fetched Successfully',\n    //     type: [Employee],\n    //   })\n    //   @Get(':uuid/profile')\n    //   profile(\n    //     @Param('uuid')\n    //     uuid: string\n    //   ) {\n    //     return this.employeeService.findByUuid(uuid);\n    //   }\n\n    @Post()\n    @ApiOperation({ summary: 'Employee created succesfully', tags: ['users'] })\n    @ApiResponse({ status: 201, type: Employee })\n    @ApiForbiddenResponse({ status: 403, description: 'Forbidden.' })\n    @ApiBadRequestResponse({ status: 400, description: 'Bad Request.' })\n    async createUser(@Body() createEmployeeDto: CreateEmployeeDto) {\n        return this.employeeService.addUser(createEmployeeDto);\n    }\n\n    @UseGuards(JwtAuthGuard)\n    @Get()\n    @ApiOperation({ summary: 'Fetch all users', tags: ['users'] })\n    @ApiResponse({\n        status: 200,\n        description: 'Users Fetched Successfully',\n        type: [Employee],\n    })\n    async findAll(@Request() request): Promise<Employee[]> {\n    const employee = request.user;\n\n        // const employee = <Employee>req.employee;\n        return this.employeeService.findAll(employee);\n    }\n\n\n    // @UseGuards(JwtAuthGuard)\n    @Get(':uuid')\n    @ApiOperation({ summary: 'Fetch employee by uuid', tags: ['users'] })\n    @ApiResponse({\n        status: 200,\n        description: 'Employee Fetched Successfully',\n        type: [Employee],\n    })\n    findOne(\n        @Param('uuid')\n        uuid: string\n    ) {\n        console.log(this.employeeService.findByUuid(uuid));\n\n        return this.employeeService.findByUuid(uuid);\n    }\n\n    @Get('edit/:uuid')\n    @ApiOperation({ summary: 'Fetch employee by uuid', tags: ['users'] })\n    @ApiResponse({\n        status: 200,\n        description: 'Employee Fetched Successfully',\n        type: [Employee],\n    })\n    findByUuidEdit(\n        @Param('uuid')\n        uuid: string\n    ) {\n      \n\n        return this.employeeService.findByUuidEdit(uuid);\n    }\n\n\n\n    @UseGuards(JwtAuthGuard)\n    @Delete(':uuid')\n    @ApiOperation({ summary: 'Delete employee by uuid', tags: ['users'] })\n    @ApiResponse({\n        status: 200,\n        description: 'Employee deleted Successfully',\n        type: [Employee],\n    })\n    deleteByUuid(\n        @Param('uuid')\n        uuid: string\n    ) {\n        return this.employeeService.deleteByUuid(uuid);\n    }\n\n\n    //   @UseGuards(JwtAuthGuard)\n    //   @ApiOperation({ summary: 'Reset Password', tags: ['users'] })\n    //   @ApiResponse({\n    //     status: 200,\n    //     description: 'Reset Password Successfully',\n    //     type: [Employee],\n    //   })\n    //   @Put(':uuid/resetPassword')\n    //   resetPassword(\n    //     @Param('uuid')\n    //     uuid: string,\n    //     @Body() payload: ResetPasswordInterface,\n    //   ) {\n    //     return this.employeeService.changePassword(uuid, payload.oldPassword, payload.newPassword);\n    //   }\n\n    @UseGuards(JwtAuthGuard)\n    @Put(':uuid')\n    @ApiOperation({ summary: 'Edit employee by uuid', tags: ['users'] })\n    @ApiResponse({\n        status: 200,\n        description: 'Employee updated Successfully',\n        type: [Employee],\n    })\n    editByUuid(\n        @Param('uuid')\n        uuid: string,\n        @Body() employee: EmployeeInterface,\n    ) {\n        return this.employeeService.editByUuid(uuid, employee);\n    }\n\n\n    @UseGuards(JwtAuthGuard)\n    @ApiOperation({ summary: 'Reset Password', tags: ['users'] })\n    @ApiResponse({\n      status: 200,\n      description: 'Reset Password Successfully',\n      type: [Employee],\n    })\n    @Put(':uuid/resetEmployeePassword')\n    resetPassword(\n      @Param('uuid')\n      uuid: string,\n      @Body() payload: ResetEmployeePasswordInterface,\n    ) {\n      return this.employeeService.resetPassword(uuid,  payload.newPassword);\n    }\n\n\n\n}\n","import { TransactionsDateInterface } from '@application/api-interfaces';\nimport { JwtAuthGuard } from '@application/auth';\nimport {\n  UserTransactions,\n  UserTransactionsService,\n  CreateUserTransactionsDTO\n} from '@application/shared-api';\n\n\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n  Request\n} from '@nestjs/common';\n\n@Controller('usertransactions')\nexport class UserTransactionsController {\n  constructor(private userTransactionsService: UserTransactionsService) { }\n\n  @UseGuards(JwtAuthGuard)\n  @Post()\n  async add(@Body() createUserTransactionsDto: CreateUserTransactionsDTO) {\n    //console.log('createUserTransactionsDto',createUserTransactionsDto);\n\n    return this.userTransactionsService.create(createUserTransactionsDto);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('transactions')\n  async findAll(@Request() request): Promise<UserTransactions[]> {\n    const employee = request.user;\n\n    return this.userTransactionsService.getUserTransactions(employee);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Post('searchDateFilter')\n  async getTransactionsDateFilter(@Body() transactionsInterface: TransactionsDateInterface, @Request() request) {\n\n    const employee = request.user;\n\n    return this.userTransactionsService.getTransactionsDateFilter(transactionsInterface, employee);\n  }\n\n  @Get('masterAdviceTransactions')\n  async getMasterAdviceTransactions() {\n    return this.userTransactionsService.getMasterAdviceTransactions();\n  }\n\n  @Post('masterAdvice/searchDateFilters')\n  async getmasterAdviceDateFilter(@Body() transactionsInterface: TransactionsDateInterface) {\n\n    return this.userTransactionsService.getmasterAdviceDateFilter(transactionsInterface);\n  }\n\n  @Get(':uuid')\n  findOne(\n    @Param('uuid')\n    uuid: string\n  ) {\n    return this.userTransactionsService.findByUuid(uuid);\n  }\n\n  @Get('subscription/:id')\n  assignedSubscriptions(\n    @Param('id')\n    id: any\n  ) {\n    return this.userTransactionsService.assignedSubscriptions(id);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Post('year/payments')\n  yearlyPayments(@Body() payload: any, @Request() request) {\n    const employee = request.user;\n    return this.userTransactionsService.yearlyPayments(payload, employee);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('week/payments')\n  weeklyPayments(@Request() request) {\n    const employee = request.user;\n    return this.userTransactionsService.weeklyPayments(employee);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('all/payments')\n  paymentReports(@Request() request) {\n    const employee = request.user;\n    return this.userTransactionsService.paymentReports(employee);\n  }\n}\n","import { RoleValueInterface } from '@application/api-interfaces';\nimport { JwtAuthGuard } from '@application/auth';\nimport {\n  RoleModules,\n  RoleValuesService,\n  CreateRoleValuesDTO,\n} from '@application/shared-api';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\n\n@Controller('role-modules')\nexport class RoleValuesController {\n  constructor(private roleValuesService: RoleValuesService) { }\n\n  //@UseGuards(JwtAuthGuard)\n  @Post()\n  async add(@Body() createRoleValuesDto: CreateRoleValuesDTO ) {\n    return this.roleValuesService.create(createRoleValuesDto);\n  }\n\n  //@UseGuards(JwtAuthGuard)\n  @Get()\n  async findAll(): Promise<RoleModules[]> {\n    return this.roleValuesService.findAll();\n  }\n\n  @Get(':uuid')\n  findOne(\n    @Param('uuid')\n    uuid: string\n  ) {\n    return this.roleValuesService.findByUuid(uuid);\n  }\n\n  // @UseGuards(JwtAuthGuard)\n  @Delete(':uuid')\n  deleteByUuid(\n    @Param('uuid')\n    uuid: string\n  ) {\n    return this.roleValuesService.deleteByUuid(uuid);\n  }\n\n  //@UseGuards(JwtAuthGuard)\n  @Put(':uuid')\n  editByUuid(\n    @Param('uuid')\n    uuid: string,\n    @Body() roleValues: RoleValueInterface\n  ) {\n    return this.roleValuesService.editRoleValuesByUuid(uuid, roleValues);\n  }\n\n\n  @Get('active/rolesValues')\n  async activeRoleValues() {\n    return this.roleValuesService.getActiveRoleValues();\n  }\n\n}","import { RoleSubModuleInterface } from '@application/api-interfaces';\nimport { JwtAuthGuard } from '@application/auth';\nimport {\n  RoleSubModules,\n  RoleSubModulesService,\n  CreateRoleSubModulesDTO,\n} from '@application/shared-api';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\n\n@Controller('role-sub-module')\nexport class RoleSubModulesController {\n    constructor(private roleSubModulesService: RoleSubModulesService) {}\n  \n    //@UseGuards(JwtAuthGuard)\n    @Post()\n    async add(@Body() createTagsDto: CreateRoleSubModulesDTO) {\n      return this.roleSubModulesService.create(createTagsDto);\n    }\n\n  //@UseGuards(JwtAuthGuard)\n  @Get()\n  async findAll(): Promise<RoleSubModules[]> {\n    return this.roleSubModulesService.findAll();\n  }\n\n  @Get('active/roleSubModules')\n    async activeRoleSubModules() {\n      return this.roleSubModulesService.getActiveRoleSubModules();\n    }\n\n  //@UseGuards(JwtAuthGuard)\n  @Get(':uuid')\n  findOne(\n    @Param('uuid')\n    uuid: string\n  ) {\n    return this.roleSubModulesService.findByUuid(uuid);\n  }\n\n // @UseGuards(JwtAuthGuard)\n  @Delete(':uuid')\n  deleteByUuid(\n    @Param('uuid')\n    uuid: string\n  ) {\n    return this.roleSubModulesService.deleteByUuid(uuid);\n  }\n\n  //@UseGuards(JwtAuthGuard)\n  @Put(':uuid')\n  editByUuid(\n    @Param('uuid')\n    uuid: string,\n    @Body() roleSubModules: RoleSubModuleInterface\n  ) {\n    return this.roleSubModulesService.editRoleSubModulesByUuid(uuid, roleSubModules);\n  }\n\n}","\nimport { RoleInterface } from '@application/api-interfaces';\nimport { JwtAuthGuard } from '@application/auth';\nimport {\n  Roles,\n  RolesService,\n  CreateRolesDTO,\n} from '@application/shared-api';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\n\n@Controller('roles')\nexport class RolesController {\n  constructor(private rolesService: RolesService) { }\n\n  //@UseGuards(JwtAuthGuard)\n  @Post()\n  async add(@Body() createRolesDto: CreateRolesDTO,\n  ) {\n    return this.rolesService.create(createRolesDto);\n  }\n\n  @Get()\n  async findAll(): Promise<Roles[]> {\n    return this.rolesService.findAll();\n  }\n\n  @Get(':uuid')\n  findOne(\n    @Param('uuid')\n    uuid: string\n  ) {\n    return this.rolesService.findByUuid(uuid);\n  }\n\n  @Get('role/:id')\n  findOneRole(\n    @Param('id')\n    id: string\n  ) {\n    return this.rolesService.findById(id);\n  }\n\n  @Delete(':uuid')\n  deleteByUuid(\n    @Param('uuid')\n    uuid: string\n  ) {\n    return this.rolesService.deleteByUuid(uuid);\n  }\n\n  @Put(':uuid')\n  editByUuid(\n    @Param('uuid')\n    uuid: string,\n    @Body() roles: RoleInterface\n  ) {\n    return this.rolesService.editRolesByUuid(uuid, roles);\n  }\n\n\n  @Get('active/roles')\n  async activeRoleValues() {\n    return this.rolesService.getActiveRole();\n  }\n\n\n\n\n}","import { TransactionsDateInterface } from '@application/api-interfaces';\nimport { JwtAuthGuard } from '@application/auth';\nimport {\n  AgentTransactionsService,\n  CreateAgentTransactionsDTO,\n  AgentTransactions\n} from '@application/shared-api';\n\n\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\n\n@Controller('agentTransactions')\nexport class AgentTransactionsController {\n    constructor(private agentTransactionsService: AgentTransactionsService) {}\n\n    //@UseGuards(JwtAuthGuard)\n    @Post()\n    async add(@Body() createAgentTransactionsDto: CreateAgentTransactionsDTO) {\n      return this.agentTransactionsService.create(createAgentTransactionsDto);\n    }\n\n    @Get()\n    async findAll() :Promise<AgentTransactions[]> {\n\n      return this.agentTransactionsService.getAgentTransactions();\n    }\n\n    @Post('searchDateFilter')\n    async getTransactionsDateFilter( @Body() transactionsInterface: TransactionsDateInterface){\n\n      return this.agentTransactionsService.getTransactionsDateFilter(transactionsInterface);\n    }\n\n    @Get('agent/:id')\n    getAgentTransations(\n      @Param('id')\n      id: string\n    ) {\n      return this.agentTransactionsService.AgentTransationsByUuid(id);\n    }\n\n    @Get(':uuid')\n    findOne(\n      @Param('uuid')\n      uuid: string\n    ) {\n      return this.agentTransactionsService.findByUuid(uuid);\n    }\n}\n","import { JwtAuthGuard } from '@application/auth';\nimport {\n  Pearls,\n  PearlsService,\n  PearlSubjectsService\n} from '@application/shared-api';\nimport { CreatePearlSubjectsDto } from '@application/shared-api';\nimport { PeralInputSubjectInterface, FlagsInterface, UserKeyInterface, PearlChapterInterface } from '@application/api-interfaces';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport * as uuid from 'uuid';\n\n@Controller('pearlsubjects')\nexport class PearlSubjectsController {\n  // createPearlSubjectsDto: any;\n  constructor(\n    private peralSubjectService: PearlSubjectsService,\n  ) { }\n\n\n  @Post()\n  async add(@Body() createPearlSubjectsDto: CreatePearlSubjectsDto) {\n\n    this.peralSubjectService.addPearlSubjects(createPearlSubjectsDto);\n    return true;\n\n  }\n  @Post('getSubjectsAndChapters')\n  async getSubjectsAndChapters(@Body() pearlData: any) {\n\n    let pearlId = pearlData.pearlId;\n    return this.peralSubjectService.getSubjectsAndChapters(pearlId);\n\n  }\n\n\n  @Post('updatePearlSubjects')\n  async updatePearlSubjects(@Body() createPearlSubjectsDto: CreatePearlSubjectsDto) {\n\n    return this.peralSubjectService.updatePearlSubjects(createPearlSubjectsDto);\n  }\n\n  //  @Put(':subjectUuid')\n  //   async editByUuid(\n  //     @Param('subjectUuid')\n  //     subjectUuid: string,\n  //     @Body() pearlSubjects: PeralInputSubjectInterface\n  //   ) {\n  //     return this.peralSubjectService.editPearlSubjectByUuid(subjectUuid, pearlSubjects);\n  //   }\n\n}","import { BannerInterface } from '@application/api-interfaces';\nimport { JwtAuthGuard } from '@application/auth';\nimport {\n  Banner,\n  SuggestedVideosService,\n  CreateSuggestedVideoDto,\n} from '@application/shared-api';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\n\n@Controller('suggestedvideos')\nexport class SuggestedVideosController {\n\n    constructor(private suggestedVideosService: SuggestedVideosService) {}\n\n  //@UseGuards(JwtAuthGuard)\n  @Post()\n  async add(@Body() createSuggestedVideoDto: CreateSuggestedVideoDto) {\n    return this.suggestedVideosService.create(createSuggestedVideoDto);\n  }\n\n  @Get()\n  async findAll(){\n    return this.suggestedVideosService.findAll();\n  }\n\n  @Put('status/:id')\n  async updateStatus(\n    @Param('id')\n    id: string,\n    @Body() status: any\n  ){\n    return this.suggestedVideosService.updateStatus(id,status);\n  }\n\n  @Delete('courseId')\n  deleteByUuid(\n    @Body() courseId: any\n  ) {\n    return this.suggestedVideosService.deleteByCourse(courseId);\n  }\n\n\n\n}","import { BannerInterface } from '@application/api-interfaces';\nimport { JwtAuthGuard } from '@application/auth';\nimport {\n  Banner,\n  SuggestedTestsService,\n  CreateSuggestedTestsDto,\n} from '@application/shared-api';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\n\n@Controller('suggestedtests')\nexport class SuggestedTestsController {\n\n    constructor(private suggestedTestsService: SuggestedTestsService) {}\n\n  //@UseGuards(JwtAuthGuard)\n  @Post()\n  async add(@Body() body : any) {\n    return this.suggestedTestsService.create(body);\n  }\n\n  @Get()\n  async findAll(){\n    return this.suggestedTestsService.findAll();\n  }\n\n  @Put('status/:id')\n  async updateStatus(\n    @Param('id')\n    id: string,\n    @Body() status: any\n  ){\n    return this.suggestedTestsService.updateStatus(id,status);\n  }\n\n\n\n}","import { BannerInterface } from '@application/api-interfaces';\nimport { JwtAuthGuard } from '@application/auth';\nimport {\n  Banner,\n  SuggestedQbankService,\n  CreateSuggestedQbankDto,\n} from '@application/shared-api';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\n\n@Controller('suggestedqbank')\nexport class SuggestedQbankController {\n\n    constructor(private suggestedQbankService: SuggestedQbankService) {}\n\n  //@UseGuards(JwtAuthGuard)\n  @Post()\n  async add(@Body() createSuggestedQbankDto: CreateSuggestedQbankDto) {\n    return this.suggestedQbankService.create(createSuggestedQbankDto);\n  }\n\n  @Get()\n  async findAll(){\n    return this.suggestedQbankService.findAll();\n  }\n\n  @Put('status/:id')\n  async updateStatus(\n    @Param('id')\n    id: string,\n    @Body() status: any\n  ){\n    return this.suggestedQbankService.updateStatus(id,status);\n  }\n\n\n\n}","import { BannerInterface } from '@application/api-interfaces';\nimport { JwtAuthGuard } from '@application/auth';\nimport {\n  Banner,\n  MCQOfTheDayService,\n  CreateMCQOfTheDayDto,\n} from '@application/shared-api';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\n\n@Controller('mcqoftheday')\nexport class MCQOfTheDayController {\n\n    constructor(private mCQOfTheDayService: MCQOfTheDayService) {}\n\n  //@UseGuards(JwtAuthGuard)\n  @Post()\n  async add(@Body() createMCQOfTheDayDto: CreateMCQOfTheDayDto) {\n    return this.mCQOfTheDayService.create(createMCQOfTheDayDto);\n  }\n\n  @Get()\n  async getMCQs() {\n    return this.mCQOfTheDayService.getMCQs();\n  }\n\n  @Put('status/:id')\n  async updateStatus(\n    @Param('id')\n    id: string,\n    @Body() status: any\n  ){\n    return this.mCQOfTheDayService.updateStatus(id,status);\n  }\n\n  @Get('update-mcq-of-the-day')\n  async updateMcqOfTheDay() {\n    return this.mCQOfTheDayService.updateMcqOfTheDay();\n  }\n\n  @Get('send-push-notification-mcq-of-the-day')\n  async sendPushNotificationMCQOfTheOfDay() {\n    return this.mCQOfTheDayService.sendPushNotificationMCQOfTheOfDay();\n  }\n\n\n\n}","import { FacultyInterface } from '@application/api-interfaces';\nimport { JwtAuthGuard } from '@application/auth';\nimport {\n  CreatelogsDto,\n  Logs,\n  LogsService,\n} from '@application/shared-api';\nimport { CreateUserDto, UsersService } from '@application/shared-api';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport * as uuid from 'uuid';\n\n@Controller('logs')\nexport class LogsController {\n  constructor(\n    private logsService: LogsService,\n    \n  ) {}\n\n  //@UseGuards(JwtAuthGuard)\n  @Post()\n  async add(@Body() createlogsDto: CreatelogsDto) {\n    return this.logsService.addlogs(createlogsDto);\n  }\n\n}","import { FeedbackService } from '@application/shared-api';\nimport {\n    Body,\n    Controller,\n    Delete,\n    Get,\n    Param,\n    Post,\n    Put,\n    UseGuards,\n} from '@nestjs/common';\n\n@Controller('feedback')\nexport class FeedbackController {\n    constructor(\n        private feedbackService: FeedbackService,\n    ) { }\n\n\n    @Post()\n    async createFeedback(@Body() request) {\n        return this.feedbackService.createFeedback(request);\n    }\n\n    @Get()\n    async getFeedbacks() {\n        return this.feedbackService.getFeedbacks();\n    }\n\n    @Get('active')\n    async getActiveFeedbacks() {\n        return this.feedbackService.getActiveFeedbacks();\n    }\n\n    @Get(':uuid')\n    findFeedback(\n        @Param('uuid')\n        uuid: string\n    ) {\n        return this.feedbackService.findFeedback(uuid);\n    }\n\n    @Delete(':id')\n    deleteFeedback(\n        @Param('id')\n        id: string\n    ) {\n        return this.feedbackService.deleteFeedback(id);\n    }\n\n    @Put()\n    updateFeedback(\n        @Body() reqest\n    ) {\n        return this.feedbackService.updateFeedback(reqest);\n    }\n\n\n}\n","import { EmployeeInterface, ResetEmployeePasswordInterface } from '@application/api-interfaces';\nimport {  DepartmentService } from '@application/shared-api';\nimport {\n    Body,\n    Controller,\n    Delete,\n    Get,\n    Param,\n    Post,\n    Put,\n    UseGuards,\n} from '@nestjs/common';\n\n@Controller('department')\nexport class DepartmentController {\n    constructor(\n        private departmentService: DepartmentService,\n    ) { }\n\n\n    //@UseGuards(JwtAuthGuard)\n    @Post()\n    async add(@Body() createDepartmentDto) {\n        return this.departmentService.create(createDepartmentDto);\n    }\n\n    //@UseGuards(JwtAuthGuard)\n    @Get()\n    async findAll() {\n        return this.departmentService.findAll();\n    }\n\n    @Get('activeDepartments')\n    async activeTags() {\n        return this.departmentService.getActiveDepartments();\n    }\n\n    //@UseGuards(JwtAuthGuard)\n    @Get(':uuid')\n    findOne(\n        @Param('uuid')\n        uuid: string\n    ) {\n        return this.departmentService.findByUuid(uuid);\n    }\n\n    // @UseGuards(JwtAuthGuard)\n    @Delete(':id')\n    deleteByUuid(\n        @Param('id')\n        id: string\n    ) {\n        return this.departmentService.deleteByUuid(id);\n    }\n\n    //@UseGuards(JwtAuthGuard)\n    @Put(':uuid')\n    editByUuid(\n        @Param('uuid')\n        uuid: string,\n        @Body() event: any\n    ) {\n        return this.departmentService.editDepartmentByUuid(uuid, event);\n    }\n\n    @Post('allTickets')\n    getAllTickets(\n        @Body() request\n    ) {\n        return this.departmentService.getAllTickets(request);\n    }\n\n    @Get('ticket/:uuid')\n    getTicketByUUid(\n        @Param('uuid')\n        uuid: string\n    ) {\n        return this.departmentService.getTicketByUUid(uuid);\n    }\n    @Post('send-reply')\n    sendReply(\n        @Body() request\n    ) {\n        return this.departmentService.sendReply(request);\n    }\n\n    @Put('updateTicket/status')\n    updateTicket(\n        @Body() request: any\n    ) {\n        return this.departmentService.updateTicket( request);\n    }\n\n\n}\n","import {\n  BadRequestException,\n  Logger,\n  ValidationError,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { NestApplication, NestFactory } from '@nestjs/core';\nimport { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';\nimport * as csurf from 'csurf';\nimport * as rateLimit from 'express-rate-limit';\nimport fs from 'fs';\nimport * as helmet from 'helmet';\nimport { AppModule } from './app/app.module';\nimport { environment } from '../src/app/environments/environment';\nimport { swaggerUi } from 'swagger-ui-express';\nvar bodyParser = require('body-parser');\n\nasync function bootstrap() {\n\n  const app = await NestFactory.create<NestApplication>(\n    AppModule,\n    // { logger: ['error', 'warn'], httpsOptions },\n    { logger: ['error', 'warn'] }\n  );\n\n// app.use(bodyParser.json({limit: '50mb'}));\n// app.use(bodyParser.urlencoded({limit: '50mb', extended: true}));\n  app.use(helmet());\n  const bodyParser = require('body-parser');\n  app.use(bodyParser.json({ limit: '5000mb' }));\n  // app.use(bodyParser.limit(100000000));\n  // app.use(csurf());\n\n  // app.use(\n  //   rateLimit({\n  //     windowMs: 15 * 60 * 1000, // 15 minutes\n  //     max: 100, // limit each IP to 100 requests per windowMs\n  //   }),\n  // );\n\n  // const whitelist = ['http://15.207.33.207/manage/', 'http://localhost:4201'];\n  // app.enableCors({\n  //   origin: function (origin, callback) {\n  //     if (whitelist.indexOf(origin) !== -1) {\n  //       console.log(\"allowed cors for:\", origin)\n  //       callback(null, true)\n  //     } else {\n  //       console.log(\"blocked cors for:\", origin)\n  //       callback(new Error('Not allowed by CORS'))\n  //     }\n  //   },\n  //   allowedHeaders: 'X-Requested-With, X-HTTP-Method-Override, Content-Type, Accept, Observe',\n  //   methods: 'GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS',\n  //   credentials: true,\n  // });\n  app.enableCors();\n  const globalPrefix = 'proxy/api';\n  app.setGlobalPrefix(globalPrefix);\n  const port = 3001;\n  app.useGlobalPipes(\n    new ValidationPipe({\n      disableErrorMessages: true,\n      whitelist: false,\n      transform: true,\n      exceptionFactory: (validationErrors: ValidationError[] = []) => {\n        return new BadRequestException(validationErrors);\n      },\n    })\n  );\n\n  // API DOCS -SWAGGER\n  const options = new DocumentBuilder()\n    .setTitle('INDRA BACKEND')\n    .setDescription('Backend API SPECS description')\n    .setVersion('1.0')\n    .setContact('support', '', 'support@indraedu.com')\n    .addServer('https://admin.indraedu.com/proxy/api', 'Indra Manage API')\n    .build();\n  const document = SwaggerModule.createDocument(app, options, {\n    operationIdFactory: (\n      controllerKey: string,\n      methodKey: string,\n    ) => methodKey\n  });\n  fs.writeFileSync(\"./backend-api-spec.json\", JSON.stringify(document));\n  SwaggerModule.setup('backend/api/docs', app, document);\n\n  // app.use('/api-docs', '1');\n  // await app.init();\n\n  await app.listen(port, () => {\n    Logger.log(`Listening at localhost:${port}/${globalPrefix}`);\n  });\n\n}\n\nbootstrap();\n","module.exports = require(\"http\");","module.exports = require(\"https\");","var map = {\n\t\"./plato-online-firebase.json\": 199\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 301;"],"sourceRoot":""}